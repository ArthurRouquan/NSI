{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#accueil","title":"Accueil","text":"<p>Travaux en cours</p> <ul> <li>Algorithmique  L'algorithme KNN  TP Capytale</li> <li>Architecture  Architecture r\u00e9seau </li> </ul>"},{"location":"#liens-utiles","title":"Liens utiles","text":"<ul> <li>Programme en vigueur de sp\u00e9cialit\u00e9 NSI de 1\u00e8re g\u00e9n\u00e9rale</li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/","title":"Repr\u00e9sentation des entiers positifs","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#representation-des-entiers-positifs","title":"Repr\u00e9sentation des entiers positifs","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#la-notation-positionnelle","title":"La notation positionnelle","text":"<p>La\u00a0notation positionnelle\u00a0est un syst\u00e8me d'\u00e9criture des nombres. Cette mani\u00e8re de repr\u00e9senter efficacement les nombres existe depuis le IIIe mill\u00e9naire avant notre \u00e8re chez les babyloniens. Elle repose sur l'utilisation d'un nombre limit\u00e9 de symboles graphiques appel\u00e9s\u00a0chiffres. La\u00a0base d\u00e9signe le nombre de chiffres utilis\u00e9s.</p> La base d\u00e9cimale <p>Par exemple, on \u00e9crit couramment les nombres en utilisant dix chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, et 9. On utilise donc la base 10 aussi appel\u00e9e base d\u00e9cimale.</p> Un autre example de base <p>La base 16 appel\u00e9e base hexad\u00e9cimale utilise seize chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E et F. Il est courant d'utiliser les lettres de l'alphabet latin comme symboles graphiques pour repr\u00e9senter les chiffres apr\u00e8s 9. </p> \u00ab Les chiffres disent que... \u00bb <p>Dans le langage courant, les termes chiffres et nombres sont utilis\u00e9s de mani\u00e8re interchangeable. Or, un nombre est compos\u00e9 de chiffres ! A noter que \u00ab 2 \u00bb par exemple peut d\u00e9signer soit le chiffre ou soit le nombre\u2026</p> <p>Dans cette notation, un nombre est \u00e9crit comme une s\u00e9quence ordonn\u00e9e de chiffres. Chaque chiffre contribue \u00e0 la valeur totale en fonction de sa position. Cette contribution est obtenue en multipliant le chiffre par la puissance appropri\u00e9e de la base.</p> <p>Un exemple en base d\u00e9cimale</p> <p>Chacun des chiffres du nombre 256, \u00e9crit en base d\u00e9cimale, ont une contribution diff\u00e9rente :</p> \\[ \\begin{align} \\textcolor{#71d4e2}{256} &amp;= 200 + 50 + 6 \\\\ &amp;= 2 \\times 100 + 5 \\times 10 + 6 \\times 1 \\\\ &amp;= \\textcolor{#71d4e2}{2} \\times \\textcolor{#ff6188}{10}^\\textcolor{#A5D6A7}{2}  +  \\textcolor{#71d4e2}{5}\\times \\textcolor{#ff6188}{10}^\\textcolor{#A5D6A7}{1}  + \\textcolor{#71d4e2}{6} \\times \\textcolor{#ff6188}{10}^\\textcolor{#A5D6A7}{0}  \\end{align} \\] <p>Cette derni\u00e8re ligne met en \u00e9vidence la base utilis\u00e9e. Code couleur : Chiffre, Base, Position.</p> <p>Un exemple en base octal</p> <p>La base 8, appel\u00e9e base octale, comporte seulement 8 chiffres : 0, 1, 2, 3, 4, 5, 6 et 7. Si l'on \u00e9crit le nombre \\((256)_8\\) dans cette base (indiqu\u00e9e en indice), alors par d\u00e9finition :</p> \\[ (\\textcolor{#71d4e2}{256})_\\textcolor{#ff6188}{8} = \\textcolor{#71d4e2}{2} \\times \\textcolor{#ff6188}{8}^\\textcolor{#A5D6A7}{2}  +  \\textcolor{#71d4e2}{5}\\times \\textcolor{#ff6188}{8}^\\textcolor{#A5D6A7}{1}  + \\textcolor{#71d4e2}{6} \\times \\textcolor{#ff6188}{8}^\\textcolor{#A5D6A7}{0} \\] <p>Une fois le nombre d\u00e9compos\u00e9, nous pouvons effectuer les calculs dans la base d\u00e9cimale usuelle :</p> \\[ \\begin{align} (256)_8 &amp;= 2 \\times 64 + 5 \\times 8 + 6 \\\\ &amp;= 128 + 40 + 6 \\\\ &amp;= (174)_{10} \\end{align} \\] <p>C'est la m\u00e9thode usuelle pour convertir un nombre \u00e9crit dans une base quelconque vers la base d\u00e9cimale usuelle.</p> Une prononciation confuse <p>\\((256)_8\\) ne se prononce pas \u00ab deux cents cinquante-six \u00bb mais plut\u00f4t \u00ab deux cinq six \u00bb puisqu'\u00e0 l'oral le nombre est d\u00e9compos\u00e9 en base d\u00e9cimale (par exemple, \u00ab cents \u00bb fait r\u00e9f\u00e9rence \u00e0 une puissance de la base d\u00e9cimale).</p> Exercice 1 <p>Convertir ces nombres en base d\u00e9cimale :</p> <ol> <li>\\((256)_7\\)</li> <li>\\((2222)_8\\)</li> <li>\\((2AB)_{16}\\)</li> <li>\\((100.12)_4\\)</li> <li>\\((30200)_\\sqrt{2}\\)</li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#compter-dans-une-base-differente","title":"Compter dans une base diff\u00e9rente","text":"<p>Il est important de savoir \u00e9num\u00e9rer les nombres dans une base diff\u00e9rente. Si l'on a \u00e9puis\u00e9 tous les chiffres disponibles, on augmente le chiffre du rang suivant :</p> Base 10 Base 2 Base 4 Base 16 \\(\\texttt{ 0}\\) \\(\\texttt{   0}\\) \\(\\texttt{0}\\) \\(\\texttt{0}\\) \\(\\texttt{ 1}\\) \\(\\texttt{   1}\\) \\(\\texttt{1}\\) \\(\\texttt{1}\\) \\(\\texttt{ 2}\\) \\(\\texttt{  10}\\) \\(\\texttt{2}\\) \\(\\texttt{2}\\) \\(\\texttt{ 3}\\) \\(\\texttt{  11}\\) \\(\\texttt{3}\\) \\(\\texttt{3}\\) \\(\\texttt{ 4}\\) \\(\\texttt{ 100}\\) \\(\\texttt{10}\\) \\(\\texttt{4}\\) \\(\\texttt{ 5}\\) \\(\\texttt{ 101}\\) \\(\\texttt{11}\\) \\(\\texttt{5}\\) \\(\\texttt{ 6}\\) \\(\\texttt{ 110}\\) \\(\\texttt{12}\\) \\(\\texttt{6}\\) \\(\\texttt{ 7}\\) \\(\\texttt{ 111}\\) \\(\\texttt{13}\\) \\(\\texttt{7}\\) \\(\\texttt{ 8}\\) \\(\\texttt{1000}\\) \\(\\texttt{20}\\) \\(\\texttt{8}\\) \\(\\texttt{ 9}\\) \\(\\texttt{1001}\\) \\(\\texttt{21}\\) \\(\\texttt{9}\\) \\(\\texttt{10}\\) \\(\\texttt{1010}\\) \\(\\texttt{22}\\) \\(\\texttt{A}\\) \\(\\texttt{11}\\) \\(\\texttt{1011}\\) \\(\\texttt{23}\\) \\(\\texttt{B}\\) \\(\\texttt{12}\\) \\(\\texttt{1100}\\) \\(\\texttt{30}\\) \\(\\texttt{C}\\) \\(\\texttt{13}\\) \\(\\texttt{1101}\\) \\(\\texttt{31}\\) \\(\\texttt{D}\\) \\(\\texttt{14}\\) \\(\\texttt{1110}\\) \\(\\texttt{32}\\) \\(\\texttt{E}\\) \\(\\texttt{15}\\) \\(\\texttt{1111}\\) \\(\\texttt{33}\\) \\(\\texttt{F}\\) \\(\\texttt{16}\\) \\(\\texttt{10000}\\) \\(\\texttt{100}\\) \\(\\texttt{10}\\) \\(\\texttt{17}\\) \\(\\texttt{10001}\\) \\(\\texttt{101}\\) \\(\\texttt{11}\\) <p>Sur cette table, par exemple, on lit directement \\((12)_{10} = (1100)_2 = (30)_4 = (C)_{16}\\).</p> Exercice 2 <ol> <li>Ajouter \u00e0 cette table la base ternaire, la base 3.</li> <li>Poursuivre l'\u00e9num\u00e9ration en base binaire (base 2) \u00e0 partir de \\((10001)_2\\) jusqu'\u00e0 \\((11111)_2\\).</li> </ol> Exercice 3 <ol> <li>Quelle est la plus petite des bases possibles ?</li> <li>Dans quelle base avez-vous \u00ab18 \u00bb ans ?</li> <li>Que vaut \\(\\pi\\) dans la base \\(\\pi\\) ?</li> <li>Quelle est le plus grand nombre entre \\((123456789)_{42}\\) et \\((123456789)_{27}\\) ?</li> <li>Nous avons vu que si la base utilis\u00e9e est plus grande que dix alors il est courant d'utiliser les lettres de l'alphabet comme symboles graphiques pour repr\u00e9senter les chiffres apr\u00e8s 9. Mais il existe une autre mani\u00e8re de repr\u00e9senter ces \u00ab grandes \u00bb bases. Laquelle ? Tic tac...</li> <li>Lorsqu'on \u00e9crit \\((256)_8\\) \u00a0\u2014 256 en base octal \u2014 dans quelle base est \u00e9crit le nombre \u00ab \\(8\\) \u00bb ? Mettre en \u00e9vidence une incoh\u00e9rence dans ce syst\u00e8me de notation.</li> <li>Comment s'\u00e9crire huit en base octale ? Et seize en base hexad\u00e9cimale ? Peut-on dire que toutes les bases sont la base \u00ab 10 \u00bb ?</li> </ol> Exercice 4 <p>Finalement, pourquoi la notation positionnelle est plus int\u00e9ressante que la num\u00e9ration \u00e9gyptienne ou romaine ?</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#la-base-binaire","title":"La base binaire","text":"<p>Une histoire de bits</p> <p>Un chiffre binaire (0 ou 1), en anglais binary digit, est appel\u00e9 bit.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#conversion-base-2-base-10","title":"Conversion base 2  base 10","text":"<p>Exemple</p> <p>Convertissons \\((10110011)_2\\) en base d\u00e9cimale. On d\u00e9compose :</p> \\[ \\begin{align*} (\\textcolor{#71d4e2}{10110011})_\\textcolor{#ff6188}{2} &amp;= \\textcolor{#71d4e2}{1} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{7} + \\textcolor{#71d4e2}{0} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{6} + \\textcolor{#71d4e2}{1} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{5} + \\textcolor{#71d4e2}{1} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{4} + \\textcolor{#71d4e2}{0} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{3} + \\textcolor{#71d4e2}{0} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{2} + \\textcolor{#71d4e2}{1} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{1} + \\textcolor{#71d4e2}{1} \\times \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{0} \\\\ &amp;= \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{7} +    \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{5} +    \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{4} +     \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{1} +     \\textcolor{#ff6188}{2}^\\textcolor{#A5D6A7}{0} \\\\ &amp;= 128 + 32 + 16 + 2 + 1 \\\\ &amp;= (179)_{10} \\end{align*} \\] <p>Finalement, un nombre binaire se d\u00e9compose comme une somme de puissances de 2 ! Il est donc courant d'\u00e9crire directement la 2\u00e8me ou 3\u00e8me \u00e9quation.</p> Exercice 5 <p>Compl\u00e9ter la table des puissances de 2 suivante : </p> Puissance Valeur \\(2^0\\) \\(1\\) \\(2^1\\) \\(2^2\\) \\(2^3\\) \\(2^4\\) \\(2^5\\) \\(2^6\\) \\(2^7\\) Exercice 6 <p>Convertir les nombres suivants en base d\u00e9cimale :</p> <ul> <li> <p>\\((1010)_2\\)</p> </li> <li> <p>\\((101110)_2\\)</p> </li> <li> <p>\\((10001101)_2\\)</p> </li> <li> <p>\\((11111111)_2\\)</p> </li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#conversion-base-10-base-2","title":"Conversion base 10  base 2","text":"<p>Comment s'\u00e9crit \\((181)_{10}\\) en base binaire ? L'op\u00e9ration inverse est de trouver les bits qui vont bien dans la d\u00e9composition :</p> \\[ (181)_{10} ~=~ \\textcolor{#71d4e2}{?} \\cdot 2^0 ~+~ \\textcolor{#71d4e2}{?} \\cdot 2^1 ~+~ \\textcolor{#71d4e2}{?} \\cdot 2^2 ~+~ \\textcolor{#71d4e2}{?} \\cdot 2^3 ~+~ \\cdots \\] <p>Il existe deux m\u00e9thodes it\u00e9ratives. Une m\u00e9thode sp\u00e9cifique \u00e0 la base binaire (la m\u00e9thode des soustractions successives), et une derni\u00e8re plus g\u00e9n\u00e9rale qui permet de convertir vers une base quelconque (la m\u00e9thode des divisions successives).</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#la-methode-des-soustractions-successives","title":"La m\u00e9thode des soustractions successives","text":"<p>Cette m\u00e9thode repose sur la remarque suivante : s'il on arrive \u00e0 exprimer un nombre sous la forme d'une somme de puissance de 2 alors il est facile de l'\u00e9crire en base binaire. Par exemple :</p> \\[ \\begin{align*} (179)_{10} &amp;= 128 + 32 + 16 + 2 + 1 \\\\            &amp;= 2^7 + 2^5 + 2^4 + 2^1 + 2^0 \\\\            &amp;= (10110011)_2 \\end{align*} \\] <p>M\u00e9thode des soustractions successives</p> <p>On soustrait du nombre la plus grande puissance de 2 possible, et on recommence jusqu'\u00e0 obtenir 0 :</p> \\[ \\begin{align*} &amp;181 &amp;&amp; \\textcolor{#ff6188}{- 128} &amp;&amp;= 53 \\\\ &amp;53  &amp;&amp; \\textcolor{#ff6188}{- 32 } &amp;&amp;= 21   \\\\ &amp;21  &amp;&amp; \\textcolor{#ff6188}{- 16 } &amp;&amp;= 5    \\\\ &amp;5   &amp;&amp; \\textcolor{#ff6188}{- 4  } &amp;&amp;= 1      \\\\ &amp;1   &amp;&amp; \\textcolor{#ff6188}{- 1  } &amp;&amp;= 0      \\\\ \\end{align*} \\] <p>Finalement :</p> \\[\\begin{align*} (181)_{10} &amp;= \\textcolor{#ff6188}{128 + 32 + 16 + 4 + 1} \\\\ &amp;= 2^7 + 2^5 + 2^4 + 2^2 + 2^0 \\\\ &amp;= (10110101)_2 \\end{align*} \\] <p>Cette m\u00e9thode n\u00e9cessite imp\u00e9rativement de conna\u00eetre les puissances de 2. Avec un peu de pratique, il est possible de directement \u00e9crire la somme des puissances de 2.</p> Exercice 7 <p>Convertir les nombres en base d\u00e9cimal suivant en base binaire :</p> <ol> <li>17</li> <li>34</li> <li>68</li> <li>100</li> <li>200</li> </ol> <p>Que remarquez-vous dans l'\u00e9criture binaire quand on passe d'un nombre \u00e0 son double ?</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#la-methodes-des-divisions-successives","title":"La m\u00e9thodes des divisions successives","text":"<p>M\u00e9thode des divisions successives</p> <p>On divise le nombre par la base souhait\u00e9e, et on recommence jusqu'\u00e0 obtenir un quotient de 0. L'\u00e9criture du nombre dans la base souhait\u00e9e est alors donn\u00e9e par les restes lus de bas en haut.</p> <p></p> C'est magique ? <p>Pour se convaincre de la m\u00e9thode, regardons ce que l'on fait math\u00e9matiquement sur un exemple. Convertissons 19 en binaire. Rappelons qu'une division revient \u00e0 \u00e9crire :</p> \\[ \\text{dividende} = \\text{quotient} \\times \\textcolor{#71d4e2}{\\text{diviseur}} + \\textcolor{#ff6188}{\\text{reste}} \\] <p>Ainsi :</p> \\[ 19 = 9 \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1} \\] <p>On poursuit l'algorithme :</p> \\[ \\begin{align*} 19 &amp;= (4 \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1} \\\\ &amp;= ((2 \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{0}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1} \\\\ &amp;= (((\\textcolor{#ff6188}{1} \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{0}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{0}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1}) \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1} \\end{align*} \\] <p>Ensuite, on distribue les 2 pour faire appara\u00eetre nos puissances :</p> \\[ \\begin{align*} 19 &amp;= \\textcolor{#ff6188}{1} \\cdot \\textcolor{#71d4e2}{2^4} +  \\textcolor{#ff6188}{0} \\cdot \\textcolor{#71d4e2}{2^3} + \\textcolor{#ff6188}{0} \\cdot \\textcolor{#71d4e2}{2^2} + \\textcolor{#ff6188}{1} \\cdot \\textcolor{#71d4e2}{2} + \\textcolor{#ff6188}{1} \\\\ &amp;= (\\textcolor{#ff6188}{10011})_2 \\end{align*} \\] <p>Ici, on voit bien que le premier reste correspond bien au premier bit (celui tout \u00e0 droite, qu'on appelle le bit de poids faible).</p> <p>D\u00e9finition</p> <p>Le bit de poids fort (respectivement de poids faible) est le bit ayant le plus grand (resp. petit) poids ou position, c'est-\u00e0-dire celui tout \u00e0 gauche (resp. droite).</p> Exercice 8 <p>Convertir les nombres d\u00e9cimaux suivant vers la base mentionn\u00e9e gr\u00e2ce \u00e0 l'algorithme des divisions successives. </p> <ul> <li> <p>231 en base 2</p> </li> <li> <p>47 en base 5</p> </li> <li> <p>92 en base 4</p> </li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#difference-entre-mot-et-nombre-binaire","title":"Diff\u00e9rence entre mot et nombre binaire","text":"<p>D\u00e9finition</p> <ul> <li> <p>Un mot binaire est une s\u00e9quence finie de bits. Par exemple, \\(\\texttt{1001}\\) est un mot binaire de 4 bits.</p> </li> <li> <p>Un octet (ou byte en anglais) est un mot binaire de 8 bits. Par exemple, \\(\\texttt{10111010}\\) est un octet.</p> </li> </ul> <p>La signification d'un mot binaire en machine d\u00e9pend enti\u00e8rement de son interpr\u00e9tation. Interpr\u00e9t\u00e9 diff\u00e9remment, le mot binaire \\(\\texttt{10110011}\\) peut  signifier :</p> <ul> <li>naturellement le nombre binaire \\((10110011)_2 = 179\\) </li> <li>\\(-77\\) suivant la repr\u00e9sentation classique des nombres relatifs</li> <li>\\(44.75\\) en supposant une virgule fixe de 2 bits</li> <li>le caract\u00e8re \u00ab \u00b3 \u00bb d'apr\u00e8s la table ASCII \u00e9tendue</li> <li>etc.</li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#importance-de-la-base-binaire-dans-linformatique","title":"Importance de la base binaire dans l'informatique","text":"<p>La base binaire est au c\u0153ur de toutes les machines, car toute donn\u00e9e (nombre, texte, image, vid\u00e9o, son etc.) peut \u00eatre arbitrairement repr\u00e9sent\u00e9e par une suite de 0 et de 1. Les machines se basent sur diff\u00e9rents ph\u00e9nom\u00e8nes physiques pour manipuler, transmettre ou m\u00e9moriser ces deux \u00e9tats possibles :</p> <ul> <li> <p> Courant \u00e9lectrique : Tension nulle ou tension positive.</p> </li> <li> <p> Aimantation : Aimantation dans un sens ou dans l'autre.</p> </li> <li> <p> Lumi\u00e8re : Lumi\u00e8re ou absence de lumi\u00e8re.</p> </li> <li> <p>etc.</p> </li> </ul> <p>La base binaire est utilis\u00e9e pour trois grandes raisons :</p> <ul> <li> <p>R\u00e9sistance au bruit : il est plus facile de distinguer deux valeurs dans un signal digital bruit\u00e9.</p> </li> <li> <p>Simplicit\u00e9 des op\u00e9rations : la simplicit\u00e9 des op\u00e9rations arithm\u00e9tiques (addition, soustraction etc.) et logiques en base binaire permet l'\u00e9laboration de circuits \u00e9lectroniques moins complexes. </p> </li> <li> <p>Inertie technologique : revenir en arri\u00e8re aurait un co\u00fbt immense.</p> </li> </ul> Exercice 9 <ol> <li> <p>Donner les bits transmis par le signal fortement bruit\u00e9 suivant. Le d\u00e9bit (bitrate en anglais) est d'un octet par seconde. Id\u00e9alement, 0V correspond \u00e0 0 et 5V \u00e0 1. </p> <p></p> </li> <li> <p>Le code ASCII associe \u00e0 chaque mot binaire d'un octet, un caract\u00e8re sp\u00e9cifique (comme une lettre). En utilisant la table de correspondance, donner le message transmis par ce signal.</p> </li> <li> <p>En base binaire, que vaut \\(0 + 0\\) ? \\(0 + 1\\) ? \\(1 + 1\\) ? \\(1 + 1 + 1\\) ?</p> </li> <li> <p>Calculer directement \\((110110)_2 + (110100)_2\\) en posant l'addition.</p> </li> <li> <p>Dresser la table de multiplication de la base binaire.</p> </li> <li> <p>Calculer directement \\((110110)_2 \\times (11)_2\\) en posant la multiplication.</p> </li> </ol> Exercice 10 <ol> <li>Combien de valeurs (mots binaires uniques) peut-on distinguer avec 1 bit ? 2 bits ? 3 bits ? 4 bits ? 5 bits ?</li> <li>Plus g\u00e9n\u00e9ralement, combien de valeurs peut-on distinguer avec \\(n\\) bits ?</li> <li>Jusqu'\u00e0 combien peut-on compter avec nos deux mains en base binaire ?</li> <li>Combien de caract\u00e8res uniques puis-je repr\u00e9senter en code ASCII ?</li> <li>Quel est le plus grand entier positif que l'on puisse repr\u00e9senter sur un octet ? En utilisant une repr\u00e9sentation naturelle des nombres entiers, c'est-\u00e0-dire que l'octet \\(\\texttt{11111111}\\) est \u00e9gal au nombre \\((11111111)_2\\).</li> <li>Plus g\u00e9n\u00e9ralement, si l'on a \\(n\\) bits, quel est le plus grand entier positif que l'on puisse repr\u00e9senter ?</li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#relation-avec-la-base-hexadecimale-base-16","title":"Relation avec la base hexad\u00e9cimale (base 16)","text":"<p>La base hexad\u00e9cimale (hexa 6, d\u00e9ci 10) est la base utilisant 16 chiffres not\u00e9s 0, 1, 2, ..., 9, A, B, C, D, E, F.</p> <p>Lire ou \u00e9crire en binaire devient vite fastidieux. C'est pourquoi la base hexad\u00e9cimale est tr\u00e8s utile en informatique puisque la conversion entre cette base et la base binaire se fait sans calcul (du fait que \\(16 = 2^4\\)). On regroupe les bits par paquet de 4 et on effectue la correspondance gr\u00e2ce au tableau suivant :</p> Base 10 Base 2 Base 16 \\(\\texttt{ 0}\\) \\(\\texttt{   0}\\) \\(\\texttt{0}\\) \\(\\texttt{ 1}\\) \\(\\texttt{   1}\\) \\(\\texttt{1}\\) \\(\\texttt{ 2}\\) \\(\\texttt{  10}\\) \\(\\texttt{2}\\) \\(\\texttt{ 3}\\) \\(\\texttt{  11}\\) \\(\\texttt{3}\\) \\(\\texttt{ 4}\\) \\(\\texttt{ 100}\\) \\(\\texttt{4}\\) \\(\\texttt{ 5}\\) \\(\\texttt{ 101}\\) \\(\\texttt{5}\\) \\(\\texttt{ 6}\\) \\(\\texttt{ 110}\\) \\(\\texttt{6}\\) \\(\\texttt{ 7}\\) \\(\\texttt{ 111}\\) \\(\\texttt{7}\\) \\(\\texttt{ 8}\\) \\(\\texttt{1000}\\) \\(\\texttt{8}\\) \\(\\texttt{ 9}\\) \\(\\texttt{1001}\\) \\(\\texttt{9}\\) \\(\\texttt{10}\\) \\(\\texttt{1010}\\) \\(\\texttt{A}\\) \\(\\texttt{11}\\) \\(\\texttt{1011}\\) \\(\\texttt{B}\\) \\(\\texttt{12}\\) \\(\\texttt{1100}\\) \\(\\texttt{C}\\) \\(\\texttt{13}\\) \\(\\texttt{1101}\\) \\(\\texttt{D}\\) \\(\\texttt{14}\\) \\(\\texttt{1110}\\) \\(\\texttt{E}\\) \\(\\texttt{15}\\) \\(\\texttt{1111}\\) \\(\\texttt{F}\\) <p>Exemple de conversion imm\u00e9diate</p> <p>Le nombre \\((10110011)_2\\) est compos\u00e9 de 2 groupes de 4 bits, \\(1011\\) et \\(0011\\). On lit sur le tableau que \\((1011)_2 = (B)_{16}\\) et \\((0011)_2 = (3)_{16}\\) :</p> \\[ (10110011)_2 = (B3)_{16} \\] <p>Le raisonnement inverse est tout aussi imm\u00e9diat.</p> Exercice 11 <ol> <li> <p>Convertir \\((110111)_2\\) en hexad\u00e9cimal.</p> </li> <li> <p>Convertir \\((1011110100111)_2\\) en hexad\u00e9cimal.</p> </li> <li> <p>Convertir \\((CAFE)_{16}\\) en binaire.</p> </li> <li> <p>Convertir \\((C1)_{16}\\) en binaire.</p> </li> <li> <p>Combien de chiffres en base hexad\u00e9cimal sont n\u00e9cessaires pour \u00e9crire un octet ?</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/1entier/#quelques-fonctions-python-utiles","title":"Quelques fonctions Python utiles","text":"<p>Notation</p> <p>Dans la plupart des langages de programmation, on diff\u00e9rencie :</p> <ul> <li> <p>La base binaire par le pr\u00e9fixe <code>0b</code> (e.g. <code>variable = 0b10110011</code>).</p> </li> <li> <p>La base hexad\u00e9cimale par le pr\u00e9fixe <code>0x</code> (e.g. <code>variable = 0xD3</code>).</p> </li> <li> <p>La base d\u00e9cimale par aucun pr\u00e9fixe particulier.</p> </li> </ul> <p>La fonction <code>bin</code> (respectivement <code>hex</code>) renvoie la repr\u00e9sentation binaire (resp. h\u00e9xad\u00e9cimale) d'un nombre donn\u00e9 sous forme d'une cha\u00eene de caract\u00e8re :</p> <pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n&gt;&gt;&gt; hex(42)\n'0x2a'\n</code></pre> <p>R\u00e9ciproquement, on utilise la fonction <code>int</code> pour convertir un nombre \u00e9crit en base quelconque donn\u00e9e (par d\u00e9faut 10) dans une cha\u00eene de caract\u00e8re donn\u00e9e :</p> <pre><code>&gt;&gt;&gt; int('0xCAFE', 16)\n51966\n&gt;&gt;&gt; int('0b111100001111', 2)\n3855\n</code></pre>"},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/","title":"Repr\u00e9sentation des entiers relatifs","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#representation-des-entiers-relatifs","title":"Repr\u00e9sentation des entiers relatifs","text":"<p>Comme vu pr\u00e9c\u00e9demment, une machine ne peut stocker ou manipuler que des 0 et des 1 sous la forme de mots binaires. Une question se pose alors, comment la machine repr\u00e9sente les entiers n\u00e9gatifs puisque le signe \u00ab moins \u00bb n'est pas disponible ?</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#representation-naive","title":"Repr\u00e9sentation na\u00efve","text":"<p>Une premi\u00e8re id\u00e9e serait de r\u00e9server, sur un mot binaire de taille fix\u00e9e, un bit pour distinguer les nombres positifs des nombres n\u00e9gatifs, c'est le bit de signe. Le reste des bits repr\u00e9sentera alors la valeur absolue du nombre.</p> <p></p> Repr\u00e9sentation na\u00efve de -52 sur un octet. <p>Le bit de signe</p> <p>Deux choix int\u00e9ressants sur le bit de signe :</p> <ul> <li> <p>Le bit de signe vaut \\(\\texttt{0}\\) si le nombre est positif, \\(\\texttt{1}\\) si n\u00e9gatif.</p> </li> <li> <p>Le bit de signe se situe sur le bit de poids fort.</p> </li> </ul> <p>De cette mani\u00e8re, si le nombre est positif, il aura la m\u00eame repr\u00e9sentation binaire que les entiers positifs.</p> Exercice 1 - Inconv\u00e9nients de la repr\u00e9sentation na\u00efve <ol> <li> <p>Dresser un tableau qui met en correspondance les mots binaires de 4 bits avec les nombres relatifs correspondants suivant la repr\u00e9sentation na\u00efve des relatifs. Cette repr\u00e9sentation est-elle efficiente ?</p> </li> <li> <p>L'addition binaire fonctionne-t-elle suivant cette repr\u00e9sentation ?</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#representation-par-le-complement-a-2","title":"Repr\u00e9sentation par le compl\u00e9ment \u00e0 2","text":"<p>Pour rem\u00e9dier aux probl\u00e8mes pos\u00e9s par une repr\u00e9sentation na\u00efve, John von Neumann a introduit en 1945 une m\u00e9thode plus efficace pour repr\u00e9senter les nombres relatifs, la repr\u00e9sentation par le compl\u00e9ment \u00e0 deux. Dans cette repr\u00e9sentation :</p> <ul> <li> <p>Un nombre positif est repr\u00e9sent\u00e9 de mani\u00e8re usuelle (comme la repr\u00e9sentation na\u00efve, bit de signe inclus).</p> </li> <li> <p>Un nombre n\u00e9gatif est repr\u00e9sent\u00e9 suivant la m\u00e9thode du compl\u00e9ment \u00e0 2, c'est-\u00e0-dire les op\u00e9rations successives :</p> <ul> <li>Coder en binaire sa valeur absolue sur un nombre fix\u00e9 de bits</li> <li>Inverser tous les bits</li> <li>Ajouter 1 (les d\u00e9passements sont ignor\u00e9s)</li> </ul> </li> </ul> Exemple de la repr\u00e9sentation par le compl\u00e9ment \u00e0 2 <p>D\u00e9terminons le compl\u00e9ment \u00e0 2 de \\(-42\\) sur un octet :</p> <ul> <li>Coder en binaire sa valeur absolue sur un octet : \\((42)_{10} = (101010)_2\\), on obtient le mot binaire \\(\\texttt{00101010}\\)</li> <li>Inverser tous les bits : \\(\\texttt{11010101}\\)</li> <li>Ajouter 1 : \\(\\texttt{11010110}\\)</li> </ul> <p>Ainsi, \\(-42\\) est repr\u00e9sent\u00e9 par le mot binaire \\(\\texttt{11010110}\\).</p> Exercice 2 <p>Donner la repr\u00e9sentation binaire (compl\u00e9ment \u00e0 2) des nombres sur un octet :</p> <ul> <li>56</li> <li>-24</li> <li>27</li> <li>-89</li> </ul> <p></p> Repr\u00e9sentation par le compl\u00e9ment \u00e0 2 de -52 sur un octet. <p>Pour d\u00e9terminer l'entier \u00e0 partir de sa repr\u00e9sentation binaire :</p> <ul> <li> <p>Si le bit de signe vaut \\(\\texttt{0}\\) alors l'entier est positif, donc on le convertit en base d\u00e9cimale directement.</p> </li> <li> <p>Sinon le bit de signe vaut \\(\\texttt{1}\\) alors l'entier est n\u00e9gatif, on applique alors la m\u00e9thode inverse du compl\u00e9ment \u00e0 2 :</p> <ul> <li>Soustraire 1</li> <li>Inverser tous les bits</li> <li>Le mot binaire obtenu correspond \u00e0 la valeur absolue du nombre</li> </ul> </li> </ul> Exercice 3 <p>Quels sont les entiers relatifs dont la repr\u00e9sentation binaire (compl\u00e9ment \u00e0 2) est :</p> <ul> <li>\\(\\texttt{01100111}\\)</li> <li>\\(\\texttt{10011001}\\) </li> </ul> Exercice 4 - Int\u00e9r\u00eat de cette nouvelle repr\u00e9sentation <ol> <li> <p>Faites l\u2019addition binaire de des deux repr\u00e9sentations binaires de 56 et \u221224. Le r\u00e9sultat est-il correct dans cette nouvelle repr\u00e9sentation ?</p> </li> <li> <p>Faites l\u2019addition binaire de ces deux repr\u00e9sentations binaires de 27 et \u221289. Convertissez le r\u00e9sultat en base d\u00e9cimale et v\u00e9rifiez le calcul.</p> </li> </ol> Exercice 5 - Visualisation <ol> <li> <p>Dresser un tableau qui met en correspondance les mots binaires de 4 bits avec les nombres relatifs correspondants suivant la repr\u00e9sentation par le compl\u00e9ment \u00e0 2 des relatifs.</p> </li> <li> <p>Sur la droite des entiers relatifs, y inscrire leur repr\u00e9sentation binaire (compl\u00e9ment \u00e0 2).</p> </li> </ol> Exercice 6 - Intervalle <p>Donner l'intervalle des nombres entiers relatifs que l'on peut repr\u00e9senter sur :</p> <ul> <li>2 bits</li> <li>4 bits</li> <li>8 bits</li> <li>16 bits</li> <li>\\(n\\) bits</li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#en-programmation","title":"En programmation","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#types-dentiers-signes-et-non-signes","title":"Types d'entiers sign\u00e9s et non-sign\u00e9s","text":"<p>La plupart des langages de programmation offrent souvent 4 types d'entiers cod\u00e9s sur 8, 16, 32 ou 64 bits (1, 2, 4 ou 8 octets) que l'on peut d\u00e9finir comme sign\u00e9 ou non suivant l'utilisation souhait\u00e9e. Par exemple en Julia, on peut d\u00e9clarer une variable de type <code>UInt32</code> ou <code>Int32</code> (U pour Unsigned, non-sign\u00e9).</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/2relatifs/#overflow","title":"Overflow","text":"<p>Comme expliqu\u00e9 pr\u00e9c\u00e9demment, il est possible de coder uniquement un nombre limit\u00e9 d'entiers en fonction de la longueur du mot binaire. Par exemple dans le cas non-sign\u00e9, un octet peut repr\u00e9senter un entier positif entre 0 et 255. Tout calcul dont le r\u00e9sultat ne fait pas partie de cet intervalle donnera un r\u00e9sultat faux, il sera tronqu\u00e9 ! On parle de d\u00e9passement de capacit\u00e9, ou overflow en anglais.</p> <pre><code>&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; np.uint8(250) + np.uint8(10)\n&lt;stdin&gt;:1: RuntimeWarning: overflow encountered in scalar add\n4\n</code></pre> <p>En python, le type <code>int</code> est un peu particulier car il utilise un nombre variable de bits pour stocker un entier, il n'y a donc aucun soucis \u00e0 se faire. Pour s'en convaincre, il suffit d'essayer de calculer une tr\u00e8s grosse puissance.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/","title":"Repr\u00e9sentation approximative des nombres r\u00e9els","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#representation-approximative-des-nombres-reels","title":"Repr\u00e9sentation approximative des nombres r\u00e9els","text":"<p>Dans cette partie, nous allons comprendre l'origine de ce bug commun \u00e0 quasiment tous les langages de programmation :</p> <pre><code>&gt;&gt;&gt; 0.1 + 0.2 == 0.3\nFalse\n</code></pre> <p>Ce bug ne vient non pas du langage Python mais de la repr\u00e9sentation en binaire des nombres r\u00e9els. En python, un nombre flottant est du type <code>float</code>.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#ecriture-binaire-dun-reel","title":"\u00c9criture binaire d'un r\u00e9el","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#base-2-base-10","title":"Base 2 \u25b8 Base 10","text":"<p>La d\u00e9composition suivante est naturelle en base 10 :</p> \\[ \\begin{align*} (314.15)_{10} &amp;= 300 + 10 + 4 + 0.1 + 0.5 \\\\ &amp;= 3 \\times 10^2 + 1 \\times 10^1 + 4 \\times 10^0 +  1 \\times 10^{-1} + 5 \\times 10^{-2} \\end{align*} \\] <p>Finalement, rien ne nous emp\u00eache d'utiliser les puissances n\u00e9gatives de la base ! Un autre exemple en base binaire :</p> \\[ \\begin{align*}     (101.011)_2 &amp;= 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 + 0\\times 2^{-1} + 1 \\times 2^{-2} + 1 \\times 2^{-3} \\\\     &amp;= 2^2 + 2^0 + 2^{-2} + 2^{-3} \\\\     &amp;= 4 + 1 + 0.25 + 0.125 \\\\     &amp;= 5.375 \\end{align*} \\] Exercices <ol> <li>Convertir \\((1010.1011)_2\\) en base d\u00e9cimale.</li> <li>Est-il vrai que seuls les bits apr\u00e8s la virgule contribuent \u00e0 la partie d\u00e9cimale ?</li> <li>Que vaut \\((0.11111111...)_2\\) ?</li> <li>Si l'\u00e9criture d'un nombre r\u00e9el en base 2 est finie, peut-on en dire de m\u00eame de son \u00e9criture en base 10 ? </li> </ol> Une m\u00e9thode (parfois) plus rapide <p>Les puissances de 2 n\u00e9gatives sont difficiles \u00e0 calculer. Il existe une m\u00e9thode plus rapide en remarquant par exemple en base 10 que :</p> \\[     1745.861 = \\frac{1745861}{10^3} \\] <p>De la m\u00eame mani\u00e8re, en base 2 :</p> \\[     (101.011)_2 = \\frac{(101011)_2}{2^3} \\] <p>Si on souhaite convertir \\((101.011)_2\\) en base d\u00e9cimale. On peut alors calculer le nombre binaire sans la virgule puis le diviser par le bonne puissance de 2 :</p> \\[     (101011)_2 =  1 + 2 + 8 + 32 = 43 \\implies (101.011)_2 = \\frac{43}{2^3} = 5.375 \\] <p>Aucune puissance de 2 n\u00e9gative n'a \u00e9t\u00e9 calcul\u00e9e !</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#base-10-base-2","title":"Base 10 \u25b8 Base 2","text":"<p>Prenons le nombre \\(3.6875\\), il se d\u00e9compose en :</p> <ul> <li>une partie enti\u00e8re \\(3\\)</li> <li>une partie d\u00e9cimale \\(0.6875\\)</li> </ul> Faire comme avant ? <p>On peut tout \u00e0 fait appliquer l'algorithme de soustraction \u00e9tendu aux puissances de 2 n\u00e9gatives afin de d\u00e9terminer ces bits apr\u00e8s la virgule : $$ 3.6875 = 2 + 1 + 0.5 + 0.125 + 0.0625     = (11.1011)_2 $$ Cependant, les puissances n\u00e9gatives de 2 sont bien moins triviales.</p> <p>On a vu pr\u00e9c\u00e9demment que seuls les bits apr\u00e8s la virgule contribue \u00e0 la partie d\u00e9cimale. Ainsi, on sait d\u00e9j\u00e0 que la partie enti\u00e8re en base binaire s'\u00e9crira \\(3 = (11)_2\\). Prochaine \u00e9tape, la partie d\u00e9cimale.</p> <p>L'algorithme des divisions par 2 successives devient l'algorithme des multiplications par 2 successives. On ne s\u2019int\u00e9resse qu'\u00e0 la partie d\u00e9cimale \u00e0 chaque it\u00e9ration :</p> \\[ \\begin{align*} 0.6875 \\times 2 &amp;= \\textcolor{#ff6188}{1}.\\textcolor{#71d4e2}{375} \\\\ 0.\\textcolor{#71d4e2}{375}  \\times 2 &amp;= \\textcolor{#ff6188}{0}.\\textcolor{#69ba76}{75} \\\\ 0.\\textcolor{#69ba76}{75}   \\times 2 &amp;= \\textcolor{#ff6188}{1}.\\textcolor{#ffd866}{5} \\\\ 0.\\textcolor{#ffd866}{5}    \\times 2 &amp;= \\textcolor{#ff6188}{1}.0 \\end{align*} \\] <p>Ainsi, on a \\(0.6875 = (0.\\textcolor{#ff6188}{1011})_2\\) et donc avec la partie enti\u00e8re : \\(3.6875 = (11.1011)_2\\). Pouvez-vous expliquer pourquoi \u00e7a fonctionne ?</p> Exercices <ol> <li> <p>Donner l'\u00e9criture binaire de \\(20.875\\).</p> </li> <li> <p>Donner l'\u00e9criture binaire de \\(0.1\\).</p> </li> <li> <p>En d\u00e9duire celle de \\(0.2\\).</p> </li> <li> <p>Expliquer alors le comportement \u00e9trange de ce code :     </p><pre><code>&gt;&gt;&gt; 0.1 + 0.2 == 0.3\nFalse\n</code></pre> </li> </ol> \u00c9critures binaires infinies <p>Un nombre r\u00e9el ayant une \u00e9criture d\u00e9cimale finie peut avoir une \u00e9criture binaire infinie ! Or la m\u00e9moire d'un ordinateur est finie. Certains nombres ne peuvent donc pas \u00eatre repr\u00e9sent\u00e9s correctement en machine, c'est une impossibilit\u00e9 th\u00e9orique.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#precautions-dusage","title":"Pr\u00e9cautions d'usage","text":"<p>Puisqu'un nombre admettant une \u00e9criture binaire infinie ne peut pas \u00eatre parfaitement repr\u00e9sent\u00e9, le nombre manipul\u00e9 sur la machine est donc une valeur approch\u00e9e. Ainsi, il faut garder en t\u00eate que les calculs sont potentiellement faux, ou du moins impr\u00e9cis, lorsque des flottants interviennent.</p> On ne teste JAMAIS l'\u00e9galit\u00e9 entre deux flottants <p></p><pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; if a == b:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont diff\u00e9rents\n&gt;&gt;&gt; \n</code></pre> Le calcul <code>0.3 - 0.2</code> est impr\u00e9cis et donnera une autre valeur approch\u00e9e que <code>0.1</code>. L'op\u00e9rateur d'\u00e9galit\u00e9 <code>==</code> v\u00e9rifie en fait une \u00e9galit\u00e9 bit par bit. On pr\u00e9f\u00e8re alors tester si deux nombres sont suffisamment proches, c'est-\u00e0-dire s'il existe un faible \u00e9cart entre-eux. On teste alors si la diff\u00e9rence en valeur absolue est inf\u00e9rieure \u00e0 une pr\u00e9cision donn\u00e9e (suffisamment petite) : <pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; epsilon = 10 ** (-12)\n&gt;&gt;&gt; if abs(a - b) &lt; epsilon:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont \u00e9gaux\n&gt;&gt;&gt;\n</code></pre> La cumulation d'impr\u00e9cisions <p>Effectuer des calculs impr\u00e9cis avec les flottants g\u00e9n\u00e8rent des impr\u00e9cisions qui vont se cumuler.</p> <p>Lors de la guerre du Golfe, en 1991, les am\u00e9ricains disposaient de syst\u00e8mes d'antimissiles Patriot pour intercepter les missiles Scud irakiens. Les Patriot disposaient d'une horloge interne \u00e9mettant un signal tous les \\(0.1\\) secondes, d\u00e8s leur mise sous tension. Une dur\u00e9e \u00e9coul\u00e9e est donc : \\(0.1 \\times\\) le nombre de \u00ab tics \u00bb.</p> <p>Sur ces syst\u00e8mes, les nombres sont cod\u00e9s en virgule fixe sur 24 bits : c'est tout simplement une troncature de l'\u00e9criture binaire.</p> <p>Or \\(0.1 = 0.00011001100110011001100 ~|~ 1100 \\ldots\\)</p> <p>L'erreur commise est donc d'environ \\(0.000000000000000000000001100 \\approx 9.54 \\cdot 10^{-8}\\).</p> <p>Sur 100 heures de surveillance cela entra\u00eene donc un d\u00e9calage d'horloge interne de \\(9.54 \\cdot 10^{-8} \\cdot 10 \\cdot 100 \\cdot 3600 = 0.34\\) seconde... ce qui correspond \u00e0 une distance de plus de 500 m\u00e8tres \u00e0 la vitesse d'un missile Scud (1676 m/s).</p> <p>Ainsi un Patriot est pass\u00e9 \u00e0 plus de 500 m\u00e8tres d'un Scud le 25 f\u00e9vrier 1991 qui s'est abattu sur la caserne de Dhahran et a caus\u00e9 ainsi la mort de 28 personnes et 98 bl\u00e9ss\u00e9s. Une fameuse frappe chirurgicale am\u00e9ricaine.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#representation-en-machine-dun-reel","title":"Repr\u00e9sentation en machine d'un r\u00e9el","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#virgule-fixe","title":"Virgule fixe","text":"<p>Sur certains syst\u00e8mes informatiques, on utilise un codage \u00e0 virgule fixe : on sp\u00e9cifie un nombre fixe de bits apr\u00e8s la virgule. Par exemple, le mot binaire \\(\\texttt{10110001}\\) peut signifier \\((10110.001)_2\\) si on le code avec 3 bits apr\u00e8s la virgule.</p> Exercices <ol> <li> <p>Soit le mot binaire \\(\\texttt{10011111}\\). Donner sa valeur en base d\u00e9cimale si on le code avec 4 bits apr\u00e8s la virgule.</p> </li> <li> <p>De m\u00eame pour 3 bits, 2 bits et 1 bit apr\u00e8s sa virgule.</p> </li> <li> <p>Soit \\(n\\) le nombre de bits apr\u00e8s la virgule, quelle est la distance entre les valeurs repr\u00e9sent\u00e9es par deux mots binaires successifs ?</p> </li> <li> <p>Et les nombres r\u00e9els n\u00e9gatifs dans ce codage ?</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#virgule-flottante-norme-ieee-754-hors-programme","title":"Virgule flottante : Norme IEEE 754 (Hors-Programme)","text":"<p>On a vu que le code \u00e0 virgule fixe a un inconv\u00e9nient notable : l\u2019erreur relative commise sur le codage des nombres peut devenir tr\u00e8s grande lorsque les nombres sont petits. D'o\u00f9 la n\u00e9cessit\u00e9 d'un codage plus flexible. Pour justement s'adapter \u00e0 tous les ordres de grandeur de nombres, l'id\u00e9e est de coder les nombres r\u00e9els dans une \u00e9criture scientifique :</p> \\[ \\pm \\underbrace{1, \\ldots}_{\\text{mantisse } m} \\times 2^e \\] <p>Nous avons trois informations \u00e0 retenir :</p> <ul> <li> <p>Le signe \\(\\pm\\).</p> </li> <li> <p>la mantisse \\(m\\), les chiffres significatifs.</p> </li> <li> <p>l'exposant \\(e\\). </p> </li> </ul> <p>Deux formats les plus courants, standardis\u00e9s par l'organisation IEEE :</p> <ul> <li> <p>32 bits : 1 bit pour le signe, 8 bits pour pour l'exposant, 23 bits pour la mantisse. Aussi appel\u00e9 simple pr\u00e9cision.</p> </li> <li> <p>64 bits : 1 bit pour le signe, 11 bits pour l'exposant, 52 bits pour la mantisse. Aussi appel\u00e9 double pr\u00e9cision.</p> </li> </ul> <p>Les deux formats utilisent la m\u00eame m\u00e9thode pour stocker et repr\u00e9senter les nombres r\u00e9els, on se place alors dans cas d'un flottant 32 bits sans perte de g\u00e9n\u00e9ralit\u00e9.</p> <p></p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#le-signe","title":"Le signe","text":"<p>Un bit 1 indique un nombre n\u00e9gatif et un bit 0 indique un nombre positif.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#lexposant","title":"L'exposant","text":"<p>L'exposant \\(e\\) est un entier relatif entre \\(-127\\) et \\(128\\) cod\u00e9 sur un octet. Il est repr\u00e9sent\u00e9 par un entier positif \\(E = e + 127\\) appel\u00e9 l'exposant biais\u00e9.</p> Exposant \\(e\\) Exposant biais\u00e9 \\(E\\) Repr\u00e9sentation binaire de \\(E\\) -10 117 \\(\\texttt{01110101}\\) 0 127 \\(\\texttt{01111111}\\) 5 132 \\(\\texttt{10000100}\\) 108 235 \\(\\texttt{11101011}\\) <p>Ce d\u00e9calage est donc une repr\u00e9sentation des entiers relatifs sans utiliser de bit de signe.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#la-mantisse","title":"La mantisse","text":"<p>Avant toute chose, la mantisse doit \u00eatre normalis\u00e9e. C'est le m\u00eame processus de normalisation qu'en base d\u00e9cimale. Par exemple, \\(1234.567\\) est normalis\u00e9 comme \\(1.234567 \\cdot 10^3\\) de telle mani\u00e8re qu'il n'y a plus qu'un seul chiffre devant la virgule.</p> <p>De la m\u00eame mani\u00e8re, \\((1101.101)_2\\) est normalis\u00e9 comme \\((1.0101101)_2 \\cdot 2^3\\) en d\u00e9calant la virgule 3 fois vers la gauche. Quelques exemples :</p> Nombre Normalis\u00e9 Exposant \\(1101.101\\) \\(1.101101\\) \\(3\\) \\(0.00101\\) \\(1.01\\) \\(-3\\) \\(1.0001\\) \\(1.0001\\) \\(0\\) \\(10000011.0\\) \\(1.0000011\\) \\(7\\) <p>Vous avez peut-\u00eatre remarqu\u00e9 que dans une mantisse normalis\u00e9e, le chiffre \\(1\\) appara\u00eet toujours \u00e0 gauche de la virgule. En fait, le \\(\\texttt{1}\\) initial est omis du stockage r\u00e9el de la mantisse car non-n\u00e9cessaire.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#conclusion","title":"Conclusion","text":"<p>Combinons maintenant le signe, l'exposant et la mantisse normalis\u00e9e pour repr\u00e9senter un nombre r\u00e9el sur 32 bits. Par exemple, on souhaite coder \\(-13.625\\) suivant la norme IEE 754 :</p> \\[ \\begin{align*} -13.625 &amp;= (-1101.101)_{\\small 2} \\\\          &amp;= (-1.101101)_{\\small 2} \\times 2^3 \\\\ \\end{align*} \\rule{0pt}{4ex} \\] <ul> <li>Le nombre est n\u00e9gatif donc le bit de signe est \u00e0 \\(\\texttt{1}\\)</li> <li>L'exposant biais\u00e9 \\(E = e + 127 = 3 + 127 = 130 = (10000010)_2\\) donc \\(\\texttt{10000010}\\)</li> <li>La mantisse sera cod\u00e9e \\(\\texttt{10110100000000000000000}\\)</li> </ul> <p>Somme toute, le nombre \\(-13.625\\) suivant la norme IEE 754 est cod\u00e9 en machine comme : $$ \\texttt{11000001010110100000000000000000} $$</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#cas-particuliers","title":"Cas particuliers","text":"<p>Il existe quelques valeurs sp\u00e9ciales dans ce codage IEEE 754 en simple pr\u00e9cision. Suivant les valeurs de l\u2019exposant biais\u00e9 \\(E\\) (notez que le d\u00e9calage vaut \\(2^{b-1} - 1\\) o\u00f9 \\(b\\)  est le nombre de bits utilis\u00e9s pour coder l\u2019exposant) et de la mantisse, le nombre final peut appartenir \u00e0 l'une ou l'autre des cat\u00e9gories suivantes :</p> Type Exposant biais\u00e9 \\(E\\) Mantisse Z\u00e9ros \\(0\\) \\(0\\) Nombres d\u00e9normalis\u00e9s \\(0\\) \\(\\neq 0\\) Nombres normalis\u00e9s \\(1\\) \u00e0 \\(254\\) Quelconque Infinis \\(255\\) 0 Nombres ind\u00e9finis (Not A Number, NaN) \\(255\\) \\(\\neq 0\\) <p>Un nombre d\u00e9normalis\u00e9 s'\u00e9crit sous la forme \\(\\pm \\cdot 0,m \\cdot 2^{-126}\\).</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/3flottants/#exercices","title":"Exercices","text":"<p>Exercice 1</p> <p>Donner la repr\u00e9sentation IEEE 754 du nombre \\(3.6875\\) en simple pr\u00e9cision.</p> <p>Exercice 2</p> <p>Quel nombre s'\u00e9crit en virgule flottante simple pr\u00e9cision : <code>11000101000000101100001101000000</code> ?</p> <p>Exercice 3</p> <p>On imagine un codage en virgule flottante sur simplement 6 bits, avec 1 bit pour le signe, 3 bits pour l'exposant et 2 pour la mantisse. On a donc \\(E = e + 3\\).</p> <ol> <li> <p>D\u00e9terminer les nombres ind\u00e9finis.</p> </li> <li> <p>D\u00e9terminer l'\u00e9criture de  \\(+\\infty\\) et \\(-\\infty\\).</p> </li> <li> <p>Placer sur une droite gradu\u00e9e les nombres normalis\u00e9s positifs.</p> </li> <li> <p>Placer sur une autre droite gradu\u00e9e les nombres d\u00e9normalis\u00e9s positifs.</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/4char/","title":"Repr\u00e9sentation des caract\u00e8res","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/4char/#representation-des-caracteres","title":"Repr\u00e9sentation des caract\u00e8res","text":"<p>Pour coder un ensemble de caract\u00e8res en machine, il faut expliciter quel mot binaire est associ\u00e9 \u00e0 chacun de ces caract\u00e8res. Math\u00e9matiquement, on parle de l'application bijective entre l'ensemble des mots binaires (de \\(n\\) bits) et de l'ensemble des caract\u00e8res.</p> <p></p> <p>Nous avons en fait d\u00e9termin\u00e9 plusieurs applications auparavant : entre les mots binaires et les nombres entiers positifs, les nombres entiers relatifs, les r\u00e9els etc. Ici, nous allons consid\u00e9rer trois mani\u00e8res courantes d'associer des mots binaires \u00e0 des caract\u00e8res : les normes de codage de caract\u00e8res ASCII, Latin-1 et Unicode.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/4char/#norme-ascii","title":"Norme ASCII","text":"<p>Le code ASCII (American Standard Code for Information Interchange) a \u00e9t\u00e9 con\u00e7u dans les ann\u00e9es 60 pour des textes \u00e9crits en anglais et permet de repr\u00e9senter 128 caract\u00e8res. La norme utilise donc des mots binaires de 7 bits (\\(2^7 = 128\\)). Cependant, la plupart des ordinateurs travaillant presque tous sur un multiple de huit bits (un octet) depuis les ann\u00e9es 1970, chaque caract\u00e8re d'un texte en ASCII est souvent stock\u00e9 dans un octet dont le dernier bit est 0.</p> <p></p> Exercices <ol> <li> <p>Quelle est la repr\u00e9sentation h\u00e9xad\u00e9cimale du mot \"NSI\" en code ASCII ?</p> </li> <li> <p>En code ASCII, comment passer facilement d'une lettre minuscule \u00e0 une lettre majuscule ? </p> </li> <li> <p>D\u00e9terminer une fonction \\(f\\) pour passer d'une lettre majuscule cod\u00e9e en ASCII \u00e0 sa position dans l'alphabet (\\(f(\\texttt{'A'}) = 0\\), \\(f(\\texttt{'B'}) = 1\\) etc.).</p> </li> <li> <p>Le chiffrement par d\u00e9calage (code de C\u00e9sar) consiste \u00e0 remplacer chaque lettre par une lettre \u00e0 distance fixe \\(d\\), vers la droite dans l'ordre de l'alphabet. Pour les derni\u00e8res lettres, on reprend au d\u00e9but :</p> <p> </p> <p>D\u00e9terminer une fonction \\(g(c, d)\\) qui prend le code ASCII \\(c\\) d'une lettre majuscule et renvoie le code ASCII de la lettre d\u00e9cal\u00e9e de \\(d\\). Par exemple, \\(g(\\texttt{'A'}, 3) = \\texttt{'D'}\\).</p> </li> <li> <p>Comment convertir un mot binaire ASCII qui repr\u00e9sente le caract\u00e8re d'un chiffre vers la valeur binaire de ce dernier ?</p> </li> </ol> <p>La limitation majeure est donc l\u2019absence de codage pour les  lettres accentu\u00e9es ou des caract\u00e8res de langues \u00e9trang\u00e8res ! Une nouvelle norme de codage devient n\u00e9cessaire pour bien \u00e9crire les textes de Proust.</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/4char/#norme-iso-8859-1-ou-latin-1","title":"Norme ISO 8859-1 (ou Latin-1)","text":"<p>La norme Latin-1, cr\u00e9\u00e9e en 1986, est une extension \u00e0 la norme ASCII qui code 191 caract\u00e8res sur un octet, on utilise donc cette fois-ci le 8\u00e8me bit.</p> <p>Dans cette repr\u00e9sentation de la table Latin-1, une colonne indique les 4 derniers bits, et une ligne les 4 premiers :</p> <p></p> <p>Ansi, le caract\u00e8re A est cod\u00e9 par le nombre h\u00e9xad\u00e9cimale 41, soit l'octet 01000001.</p> <p>Exercice</p> <p>Quel est le caract\u00e8re repr\u00e9sent\u00e9 par nombre d\u00e9cimal 233 ?</p> <p>La norme Latin-1 reste cependant une page de code nationale r\u00e9serv\u00e9e notamment pour les langues europ\u00e9ennes. D'autres normes d'encodage existent pour l'alphabet grec, cyrilique, japonais, chinois...</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/4char/#norme-unicode","title":"Norme Unicode","text":"<p>Un format universel, Unicode, a \u00e9t\u00e9 d\u00e9velopp\u00e9 en 1991 dans le but de remplacer l'utilisation de pages de code nationales, c'est-\u00e0-dire de faire coexister tous les alphabets et autres symboles sous un m\u00eame standard.</p> <p>La derni\u00e8re version en date d'Unicode contient 149186 caract\u00e8res. Chaque caract\u00e8re est associ\u00e9 \u00e0 un nombre, appel\u00e9 codepoint. Les 128 premiers caract\u00e8res sont les m\u00eames que ceux de la norme ASCII. Cependant, il existe diff\u00e9rentes fa\u00e7ons de repr\u00e9senter ces codepoints sous forme de bits :</p> <ul> <li> <p>Encodage UTF-8 : les codepoints peuvent \u00eatre cod\u00e9s sur 8 bits et jusqu'\u00e0 48 bits. Les codepoints entre 0 et 127 sont cod\u00e9s sur 8 bits, ce qui les rend compatibles avec l'ASCII, tandis que les codepoints plus \u00e9lev\u00e9s sont cod\u00e9s sur un plus grand nombre de bits (par exemple, les nombres entre 128 et 2047 sont cod\u00e9s sur 16 bits).</p> </li> <li> <p>Encodage UTF-16 : l'unit\u00e9 de base a une largeur de 16 bits, donc par exemple les codepoints entre 0 et 55295 sont encod\u00e9s avec 16 bits. Cela rend donc l'UTF-16 incompatible avec l'ASCII.</p> </li> </ul>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/","title":"Les bool\u00e9ens","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#les-booleens","title":"Les bool\u00e9ens","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#un-peu-dhistoire","title":"Un peu d'histoire","text":"<p>George Boole (1815-1864) \u00e9tait un math\u00e9maticien et logicien britannique c\u00e9l\u00e8bre pour avoir d\u00e9velopp\u00e9 la logique moderne, oui plus pr\u00e9cis\u00e9ment l'alg\u00e8bre de Boole. Cette alg\u00e8bre comprend seulement deux valeurs : Vrai et Faux. Elle trouve de nombreuses et significatives applications dans le domaine de l'informatique (typiquement le type <code>bool</code>).</p> Qu'est-ce qu'une alg\u00e8bre ? <p>En math\u00e9matiques, une alg\u00e8bre se compose d'un ensemble d'\u00e9l\u00e9ments et d'op\u00e9rations d\u00e9finies sur ces \u00e9l\u00e9ments (et quelques autres propri\u00e9t\u00e9s que nous passons sous silence). Typiquement l'alg\u00e8bre sur les r\u00e9els utilise les \u00e9l\u00e9ments de \\(\\mathbb{R}\\) avec les op\u00e9rations arithm\u00e9tiques classiques \\(+\\), \\(\\times\\). L'alg\u00e8bre bool\u00e9enne utilise les deux \u00e9l\u00e9ments \\(\\{ \\texttt{Vrai}, \\texttt{Faux} \\}\\) et les trois op\u00e9rateurs logiques \\(\\texttt{et}\\), \\(\\texttt{ou}\\) et \\(\\texttt{non}\\).</p>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#introduction","title":"Introduction","text":"<p>En logique, une proposition est une phrase qui est soit vraie, soit fausse. Par exemple, la proposition \u00ab \\(1 + 1 = 42\\) \u00bb est fausse, tandis que la proposition \u00ab \\(2 + 2 = 4\\) \u00bb est vraie.</p> Les deux principes de la logique <ul> <li>Principe du de non-contradiction\u202f : une proposition ne peut pas \u00eatre vraie et fausse \u00e0 la fois.</li> <li>Principe du tiers-exclu : ou bien une proposition est vraie, ou bien sa n\u00e9gation est vraie.</li> </ul> Question 1 <p>Pour chacune de ces phrases, indiquer si elle est une proposition ou non : si tel est le cas, indiquer si elle est vraie ou fausse.</p> <ol> <li> <p>Vous \u00eates en classe de premi\u00e8re</p> </li> <li> <p>Antoine de Saint-Exup\u00e9ry a \u00e9crit Le Petit Prince</p> </li> <li> <p>Le ciel est magnifique ce soir</p> </li> <li> <p>\\(3 \\cdot 4 = 12\\)</p> </li> <li> <p>La lettre <code>'e'</code> est dans le mot <code>'abracadabra'</code></p> </li> <li> <p>\\(2^{10} &lt; 10^3\\)</p> </li> <li> <p>La couleur orange est la plus belle des couleurs</p> </li> <li> <p>\\(x + 3 = y\\)</p> </li> <li> <p>Taisez-vous !</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#lalgebre-de-boole","title":"l'alg\u00e8bre de Boole","text":""},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#les-booleens_1","title":"Les bool\u00e9ens","text":"<p>L'alg\u00e8bre de Boole consiste \u00e0 \u00e9tudier des op\u00e9rations sur un ensemble uniquement constitu\u00e9 de deux \u00e9l\u00e9ments qu'on appelle bool\u00e9ens. Selon le contexte, ces deux \u00e9l\u00e9ments sont not\u00e9s :</p> <ul> <li> <p>\\(\\texttt{Vrai}\\) et \\(\\texttt{Faux}\\)</p> </li> <li> <p>0 et 1</p> </li> <li> <p><code>False</code> et <code>True</code> en Python</p> </li> <li> <p>etc.</p> </li> </ul> Les valeurs bool\u00e9ennes en Python <p>On rappelle qu'il existe un type bool\u00e9en en Python, le type <code>bool</code>. Une variable de ce type ne peut prendre que deux valeurs, soit <code>False</code> soit <code>True</code>.</p> <pre><code>&gt;&gt;&gt; type(True)\n&lt;class 'bool'&gt;\n&gt;&gt;&gt; x = False\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; type(x)\n&lt;class 'bool'&gt;\n</code></pre> <p>En Python, les valeurs bool\u00e9ennes apparaissent notamment lorsqu'on utilise les op\u00e9rateurs de comparaison (<code>==</code>, <code>&lt;</code>, <code>&lt;=</code> etc.) :</p> <pre><code>&gt;&gt;&gt; a = 2\n&gt;&gt;&gt; a == 3\nFalse\n&gt;&gt;&gt; a == 2\nTrue\n&gt;&gt;&gt; a != 1\nTrue\n&gt;&gt;&gt; a &gt; 2\nFalse\n&gt;&gt;&gt; a &lt;= 5\nTrue\n&gt;&gt;&gt; a % 2 == 0\nTrue\n&gt;&gt;&gt; x = (0 == 1)\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; y = (3 + 2 == 5)\n&gt;&gt;&gt; y\nTrue\n&gt;&gt;&gt; 'e' in 'abracadabra'\nFalse\n&gt;&gt;&gt; 'b' in 'abracadabra'\nTrue\n&gt;&gt;&gt; 'A' not in 'abracadabra'\nTrue\n&gt;&gt;&gt; 42 in [10, 20, 30, 40, 42]\nTrue\n</code></pre> Question 2 <ol> <li> <p>Dans l'exemple pr\u00e9c\u00e9dent, que fait l'op\u00e9rateur d'appartenance <code>in</code> en Python ?</p> </li> <li> <p>Pr\u00e9dire, sans utiliser Python, le contenu des variables suivantes :</p> <pre><code>a = (2 &gt; 1)\nb = (3 == 1 + 2)\nc = (1 &lt; 0)\nd = (2 != 5/2)\ne = (2 != 5//2)\nf = ('a' == 'A')\n</code></pre> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#les-operateurs-logiques","title":"Les op\u00e9rateurs logiques","text":"<p>Les op\u00e9rations fondamentales sur ces deux valeurs sont d\u00e9finies par les op\u00e9rateurs logiques. En posant \\(x\\) et \\(y\\) deux bool\u00e9ens, on a les op\u00e9rations suivantes :</p> <ul> <li> <p>La n\u00e9gation, que l'on note \\(\\bar{x}\\), ou plus simplement \\(\\texttt{non } x\\), <code>not x</code> en Python.</p> </li> <li> <p>La conjonction, que l'on note \\(x \\cdot  y\\), ou plus simplement \\(x \\texttt{ et } y\\), <code>x and y</code> en Python.</p> </li> <li> <p>La disjonction, que l'on note \\(x + y\\), ou plus simplement \\(x \\texttt{ ou } y\\), <code>x or y</code> en Python.</p> </li> </ul> <p>Le r\u00e9sultat de ces op\u00e9rateurs entre bool\u00e9ens est encore un bool\u00e9en. On peut tester l'op\u00e9rateur \\(\\texttt{et}\\) en Python :</p> <pre><code>&gt;&gt;&gt; False and False\nFalse\n&gt;&gt;&gt; False and True\nFalse\n&gt;&gt;&gt; True and False\nFalse\n&gt;&gt;&gt; True and True\nTrue\n</code></pre> <p>On peut alors dresser une table de v\u00e9rit\u00e9 pour d\u00e9finir compl\u00e8tement cet op\u00e9rateur :</p> <p></p> \\(x\\) \\(y\\) \\(x \\cdot y\\) 0 0 0 0 1 0 1 0 0 1 1 1 <p></p> <p>Pour des raisons de praticit\u00e9, on \u00e9crit 0 pour signifier \\(\\texttt{Faux}\\) et 1 pour \\(\\texttt{Vrai}\\).</p> <p>\u00c0 gauche se trouve toutes les entr\u00e9es \\(x\\) et \\(y\\) possibles (on compte en binaire finalement), et \u00e0 droite se trouve le r\u00e9sultat \\(x \\cdot y\\).</p> Question 3 <ol> <li> <p>Gr\u00e2ce \u00e0 Python, dresser les tables de v\u00e9rit\u00e9 des deux autres op\u00e9rateurs.</p> </li> <li> <p>Pourquoi utilise-t-on la symbole \\(\\cdot\\) pour l'op\u00e9rateur \\(\\texttt{et}\\) et le symbole \\(+\\) pour l'op\u00e9rateur \\(\\texttt{ou}\\) ?</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#les-expressions-booleennes","title":"Les expressions bool\u00e9ennes","text":"<p>On peut s'amuser alors \u00e0 \u00e9crire des expressions bool\u00e9ennes plus complexes avec ces trois op\u00e9rateurs de base. Par exemple, soient \\(x\\), \\(y\\) et \\(z\\) trois bool\u00e9ens :</p> \\[     f(a, b, c) = (a \\cdot b) + (a \\cdot c)  \\] <p>Par exemple, \\(f(1, 0, 1) = (1 \\cdot 0) + (1 \\cdot 1) = 0 + 1 = 1\\).</p> Question 4 <p>Dresser la table de v\u00e9rit\u00e9 de \\((x \\cdot y) + z\\) o\u00f9 \\(x\\), \\(y\\) et \\(z\\) sont trois bool\u00e9ens.</p> Question 5 <ol> <li> <p>Dresser la table de v\u00e9rit\u00e9 pour chacune de ces expressions bool\u00e9ennes :</p> <ul> <li> <p>\\((a \\cdot b) + (a \\cdot c)\\)</p> </li> <li> <p>\\(a \\cdot (b + c)\\)</p> </li> </ul> <p>Que peut-on dire sur ces deux expressions ?</p> </li> <li> <p>Faire de m\u00eame avec les deux expressions suivantes :</p> <ul> <li> <p>\\(a + (\\overline{a} \\cdot b)\\)</p> </li> <li> <p>\\(a + b\\) </p> </li> </ul> <p>Que peut-on dire sur ces deux expressions ?</p> </li> <li> <p>Simplifier alors l'expression bool\u00e9enne \\((a \\cdot b) + (a \\cdot \\overline{b} \\cdot c)\\) avec les r\u00e9sultats des questions pr\u00e9c\u00e9dentes.</p> </li> </ol> Question 6 <p>\u00c0 l'aide de tables de v\u00e9rit\u00e9, d\u00e9montrer les lois de De Morgan :</p> <ul> <li> <p>\\(\\overline{x + y} = \\overline{x} \\cdot \\overline{y}\\)</p> </li> <li> <p>\\(\\overline{x \\cdot y} = \\overline{x} + \\overline{y}\\)</p> </li> </ul> Question 7 <p>Un autre op\u00e9rateur logique important est le ou exclusif, ou disjonction exclusive. C'est le sens du mot \u00ab ou \u00bb dans le langage commun. Quand on vous demande \u00ab Fromage ou dessert ? \u00bb, c'est soit l'un, soit l'autre. Pas les deux. Sauf pour les gourmands. On note l'op\u00e9rateur \\(\\oplus\\), ou <code>xor</code>. En Python, il se note <code>^</code>. Voici sa table de v\u00e9rit\u00e9 :</p> <p></p> \\(x\\) \\(y\\) \\(x \\oplus y\\) 0 0 0 0 1 1 1 0 1 1 1 0 <p></p> <ol> <li> <p>Qu'est-ce qui change par rapport \u00e0 la table de v\u00e9rit\u00e9 du \\(\\texttt{ou}\\) logique ?</p> </li> <li> <p>\u00c9crire \\(x \\oplus y\\) en fonctions des trois op\u00e9rateurs logiques de base.</p> </li> </ol>"},{"location":"1%20%E2%80%93%20Types%20de%20base/5bool/#mini-projet-additionneur-binaire-en-portes-logiques","title":"Mini-projet : additionneur binaire en portes logiques","text":"<p>L'invention du transistor dans les ann\u00e9es 60 a permis de r\u00e9aliser des circuits \u00e9lectroniques qui suivent l'alg\u00e8bre de Boole, ce sont les portes logiques. Pour les trois op\u00e9rations de base, nous en avons donc trois portes logiques :</p> Circuit simplePorte NONPorte ETPorte OU <p> </p> <p> </p> <p> </p> <p> </p> <p>On se propose de r\u00e9aliser un circuit compos\u00e9 de portes logiques pour additionner deux nombres binaires de trois bits (un nombre sera donc repr\u00e9sent\u00e9 par 3 interrupteurs). Un tel circuit se trouve au sein du processeur.</p> <p>S'amuser avec les portes logiques</p> <p>Le site Logic.ly permet de tester justement toutes ces portes logiques et cr\u00e9er de petits circuits logiques !</p> Question 8 <ol> <li> <p>Dresser la table de v\u00e9rit\u00e9 de l'addition entre deux bits. Il y a deux sorties : le r\u00e9sultat et la retenue.</p> </li> <li> <p>Sch\u00e9matiser cette table sous forme d'un circuit logique \u00e0 deux entr\u00e9es.</p> </li> <li> <p>On veut additionner deux bits et un bit de retenue, dresser la table de v\u00e9rit\u00e9 \u00e0 trois entr\u00e9es et deux sorties (bit de r\u00e9sulat et retenue).</p> </li> <li> <p>Sch\u00e9matiser cette table sous forme d'un circuit logique \u00e0 trois entr\u00e9es.</p> </li> <li> <p>Vous avez maintenant les blocs de base pour cr\u00e9er un additionneur binaire entre deux nombres de 3 bits (ou plus avec quelques copier-coller). R\u00e9aliser le circuit sur Logic.ly et m'appeler.</p> </li> </ol>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/","title":"Introduction aux tableaux","text":""},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#introduction-aux-tableaux","title":"Introduction aux tableaux","text":"<p>Liens Capytale</p> <ul> <li>Exercices :  Notebook Capytale 132b-2248053</li> <li>Correction : Disponible plus tard !</li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#limitations-actuelles","title":"Limitations actuelles","text":"<p>Imaginons que vous ayez besoin de calculer la moyenne de 100 notes saisies par l'utilisateur. Actuellement, la seule option \u00e0 votre disposition serait de r\u00e9aliser 100 op\u00e9rations <code>input()</code> pour affecter les notes \u00e0 100 variables distinctes, puis de calculer la moyenne \u00e0 partir de celles-ci. Cela serait clairement laborieux, d'o\u00f9 l'importance du concept de tableau.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#definition","title":"D\u00e9finition","text":"<ul> <li>Un tableau est une s\u00e9quence ordonn\u00e9e de valeurs de m\u00eame type. Il peut se voir comme une s\u00e9quence de \u00ab plusieurs variables \u00bb. </li> </ul> Repr\u00e9sentation usuelle d'un tableau de 6 entiers. <ul> <li>Les valeurs d'un tableau sont appel\u00e9es \u00e9l\u00e9ments et sont accessibles par le biais de leur indice, c'est-\u00e0-dire leur position dans le tableau.</li> </ul> Il est important de noter que l'indice de d\u00e9part est 0. <ul> <li> <p>Pour un tableau <code>tab</code>, <code>tab[i]</code> d\u00e9signe l'\u00e9l\u00e9ment d'indice <code>i</code> du tableau <code>tab</code>. Sur l'exemple, <code>tab[3]</code> correspond \u00e0 l'\u00e9l\u00e9ment <code>42</code>.</p> </li> <li> <p>La taille ou longueur d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient.</p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#les-tableaux-en-python","title":"Les tableaux en Python","text":"<ul> <li> <p>En Python, un tableau est de type <code>list</code>. Un tableau est d\u00e9finit avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage, on parle parfois de liste plut\u00f4t que de tableau.</p> Cr\u00e9ation explicite d'un tableau<pre><code>&gt;&gt;&gt; tab = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; type(tab)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; tab[3]\n42\n</code></pre> </li> <li> <p>Il est possible de r\u00e9cup\u00e9rer la longueur d'un tableau avec la fonction <code>len</code> (de l'anglais length, longueur). \u00c0 noter que cette fonction marche sur n'importe quel it\u00e9rable, notamment les cha\u00eenes de caract\u00e8res !     </p><pre><code>&gt;&gt;&gt; len(tab)\n6\n&gt;&gt;&gt; len(\"chat\")\n4\n</code></pre> </li> </ul> Exercice 1 <p>Sur une console Python, ex\u00e9cuter les instructions suivantes :</p> <pre><code>&gt;&gt;&gt; tab = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; len(tab)\n&gt;&gt;&gt; tab[5]\n&gt;&gt;&gt; tab[6]\n&gt;&gt;&gt; tab[-1]\n&gt;&gt;&gt; tab[-2]\n</code></pre> <ol> <li>Pourquoi la 4\u00e8me instruction \u00e9choue ?</li> <li>Exprimer le dernier indice d'un tableau <code>tab</code> quelconque en fonction de <code>len(tab)</code>.</li> <li>Surprenamment, Python supporte aussi les indices n\u00e9gatifs. Dans un tableau quelconque, quel \u00e9l\u00e9ment est \u00e0 l'indice <code>-1</code> ? Et <code>-2</code> ? Conclure.</li> </ol>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#modifier-un-tableau","title":"Modifier un tableau","text":"<p>En python, les tableaux <code>list</code> sont modifiables \u2013 ou plut\u00f4t mutables \u2013 apr\u00e8s leur initialisation.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#modifier-un-element-a-un-indice-particulier","title":"Modifier un \u00e9l\u00e9ment \u00e0 un indice particulier","text":"<p>Un tableau est semblable \u00e0 une s\u00e9quence de variables rep\u00e9r\u00e9es par leurs indices. Il n'est pas surprenant de pouvoir modifier un \u00e9l\u00e9ment du tableau gr\u00e2ce \u00e0 une affectation :</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[0] = \"Bartholomew\"\n&gt;&gt;&gt; famille\n['Bartholomew', 'Lisa', 'Maggie']   \n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#ajouter-un-element-en-fin-de-liste","title":"Ajouter un \u00e9l\u00e9ment en fin de liste","text":"<p>La m\u00e9thode <code>append</code> (ajouter en anglais) permet d'ajouter un \u00e9l\u00e9ment en fin de tableau. Ceci incr\u00e9mente \u00e9videmment la taille du tableau :</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille.append(\"Homer\")\n&gt;&gt;&gt; famille\n['Bartholomew', 'Lisa', 'Maggie', 'Homer']\n</code></pre> Une m\u00e9thode ? <ul> <li> <p>Si <code>append</code> \u00e9tait une fonction classique, on aurait plut\u00f4t \u00e9crit <code>append(tableau, nouvel_\u00e9l\u00e9ment)</code>. Or <code>append</code> est une fonction sp\u00e9cifique aux objets de type <code>list</code>. Ainsi, on appelle cette fonction \u2013 ou plut\u00f4t cette m\u00e9thode \u2013 comme <code>tableau.append(nouvel_\u00e9l\u00e9ment)</code>.</p> </li> <li> <p>Si ce genre de notation appara\u00eetra tout au long de l'ann\u00e9e, il faudra attendre le programme de terminale pour la comprendre v\u00e9ritablement. </p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#supprimer-un-element","title":"Supprimer un \u00e9l\u00e9ment","text":"<ul> <li> <p>La m\u00e9thode <code>remove</code> permet de supprimer la premi\u00e8re occurrence (la premi\u00e8re apparition) de l'\u00e9l\u00e9ment (et seulement la premi\u00e8re). \u00c0 condition bien entendu que l'\u00e9l\u00e9ment soit dans le tableau.</p> <pre><code>&gt;&gt;&gt; matieres = [\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"maths\")\n&gt;&gt;&gt; matieres\n[\"nsi\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"espagnol\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre> </li> <li> <p>La m\u00e9thode <code>pop</code> permet de supprimer un \u00e9l\u00e9ment \u00e0 un indice pr\u00e9cis.</p> <pre><code>&gt;&gt;&gt; matieres = [\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.pop(4)\n&gt;&gt;&gt; matieres\n[\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\"]\n</code></pre> </li> </ul> Exercice 2 <p>Dans la liste suivante :</p> <ul> <li>Remplacer <code>\"Loki\"</code> par <code>\"Thor\"</code></li> <li>Ajouter <code>\"Dr. Strange\"</code></li> <li>Supprimer l'intrus</li> </ul> <pre><code>avengers = [\"Black Widow\", \"Captain America\", \"Loki\", \"Iron Man\", \"Hulk\", \"Batman\", \"Hawkeye\"]\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#parcourir-un-tableau","title":"Parcourir un tableau","text":"<p>Imaginons que vous vouliez d\u00e9terminer la somme des nombres contenus dans un tableau. Il sera alors n\u00e9cessaire de regarder un \u00e0 un tous les \u00e9l\u00e9ments que contient ce tableau. On dit qu'on parcourt le tableau. Il existe deux mani\u00e8res de parcourir un tableau :</p> <ul> <li> <p>Le parcours par \u00e9l\u00e9ments</p> </li> <li> <p>Le parcours par indices</p> </li> </ul> <p>Dans les deux cas, on utilisera une boucle <code>for</code>.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#parcours-par-elements","title":"Parcours par \u00e9l\u00e9ments","text":"<p>Comme vu dans le chapitre sur la boucle <code>for</code>, un tableau est un it\u00e9rable, c'est-\u00e0-dire qu'on peut le d\u00e9composer comme la suite de ses \u00e9l\u00e9ments :</p> Script - Parcours par \u00e9l\u00e9ments<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfor membre in famille:\n    print(membre)\n</code></pre> Sortie<pre><code>Bart\nLisa\nMaggie\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#parcours-par-indices","title":"Parcours par indices","text":"<ul> <li>Le premier indice d'un tableau est <code>0</code> et son dernier indice est <code>len(tab) - 1</code>. L'id\u00e9e est de g\u00e9n\u00e9rer la s\u00e9quence des indices <code>0</code>, <code>1</code>, <code>2</code>, ..., <code>len(tab) - 1</code> gr\u00e2ce \u00e0 <code>range</code> :</li> </ul> Script - Parcours par indices<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfor i in range(len(famille)):\n    print(i, famille[i])\n</code></pre> Sortie<pre><code>0 Bart\n1 Lisa\n2 Maggie\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#difference-entre-les-parcours","title":"Diff\u00e9rence entre les parcours","text":"<ul> <li> <p>Le parcours par indices est donc plus g\u00e9n\u00e9ral que le parcours par \u00e9l\u00e9ments. On parcourt par indices si on a besoin de l'indice dans le corps de la boucle. </p> </li> <li> <p>Le parcours par indices est aussi plus flexible que le parcours par \u00e9l\u00e9ments : il permet par exemple de parcourir qu'une tranche du tableau, parcourir le tableau \u00e0 l'envers, parcourir deux tableaux en m\u00eame temps etc.</p> </li> <li> <p>\u26a0\ufe0f Le parcours par \u00e9l\u00e9ments ne permet pas de modifier les \u00e9l\u00e9ments d'un tableau ! Un parcours par indice le peut.</p> </li> </ul> Exercice 3 <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li> <p>Les deux listes ont la m\u00eame taille.</p> </li> <li> <p>Vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>.</p> </li> </ul> <pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> Exercice 4 <p>\u00c9crire la fonction <code>recherche</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence (apparition) de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau. Exemples :</p> <pre><code>&gt;&gt;&gt; recherche([5, 3], 1)\n2\n&gt;&gt;&gt; recherche([2, 4], 2)\n0\n&gt;&gt;&gt; recherche([2, 3, 5, 2, 4], 2)\n3\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#creer-un-tableau","title":"Cr\u00e9er un tableau","text":""},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#initialisation-explicite","title":"Initialisation explicite","text":"<pre><code>tab = [11, 19, 21, 29, 46]\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#elements-identiques","title":"\u00c9l\u00e9ments identiques","text":"<p>Il est souvent pratique d'initialiser un tableau de taille donn\u00e9e en la remplissant de la m\u00eame valeur. Par exemple, pour initialiser un tableau contenant 26 z\u00e9ros :</p> <pre><code>&gt;&gt;&gt; tab = [0] * 26\n&gt;&gt;&gt; tab\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre> Exercice 5 <p>Construire une liste de 100 \u00e9l\u00e9ments tous \u00e9gaux \u00e0 0. Puis remplacer tous les \u00e9l\u00e9ments d'indice impair par des 1.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#avec-une-boucle-for","title":"Avec une boucle <code>for</code>","text":"<ul> <li>On cr\u00e9e un tableau vide, puis on lui ajoute (<code>append</code>) les \u00e9l\u00e9ments au fur et \u00e0 mesure gr\u00e2ce \u00e0 une boucle <code>for</code>. Par exemple, pour g\u00e9n\u00e9rer la s\u00e9quence des 10 premiers carr\u00e9s :</li> </ul> Script<pre><code>carr\u00e9s = []\nfor i in range(10):\n    carr\u00e9s.append(i * i)\nprint(carr\u00e9s)\n</code></pre> Sortie<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <ul> <li>Le corps de la boucle peut \u00eatre bien plus complexe ! Par exemple, la cr\u00e9ation d'un tableau contenant les entiers multiples de 3 et 7 inf\u00e9rieurs \u00e0 100 :</li> </ul> Script<pre><code>multiples = []\nfor i in range(101):\n    if i % 3 == 0 and i % 7 == 0:\n        multiples.append(i)\nprint(multiples)\n</code></pre> Sortie<pre><code>[0, 21, 42, 63, 84]\n</code></pre> Exercice 6 <p>On consid\u00e8re le tableau suivant : </p><pre><code>tab = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> Construire la liste <code>tab_positif</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>tab</code>."},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#liste-en-comprehension","title":"Liste en compr\u00e9hension","text":""},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#syntaxe-de-base","title":"Syntaxe de base","text":"<p>Cette derni\u00e8re m\u00e9thode de cr\u00e9ation de listes permet d'\u00e9crire moins de lignes de code, on parle de \u00ab sucre syntaxique \u00bb en programmation. La syntaxe la plus simple est :</p> <pre><code>tableau = [expression for \u00e9l\u00e9ment in it\u00e9rable]\n</code></pre> <p>En reprenant l'exemple pr\u00e9c\u00e9dent :</p> Cr\u00e9ation classique<pre><code>carr\u00e9s = []\nfor i in range(10):\n    carr\u00e9s.append(i * i)\n</code></pre> Liste en compr\u00e9hension<pre><code>carr\u00e9s = [i * i for i in range(10)]\n</code></pre> <p>L'id\u00e9e est de \u00ab glisser la boucle <code>for</code> entre les crochets \u00bb. </p> No limit <ul> <li> <p><code>it\u00e9rable</code> correspond \u00e0 un it\u00e9rable, cela peut \u00eatre une s\u00e9quence d'entiers <code>range</code>, une cha\u00eene de caract\u00e8res, un autre tableau etc.</p> </li> <li> <p><code>expression</code> peut faire appel \u00e0 une fonction si elle est trop complexe \u00e0 \u00e9crire en un seul calcul.</p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#syntaxe-avec-filtre","title":"Syntaxe avec filtre","text":"<p>La syntaxe d'une liste en compr\u00e9hension avec filtre :</p> <pre><code>tableau = [expression for \u00e9l\u00e9ment in it\u00e9rable if condition]\n</code></pre> <p>En reprenant l'exemple pr\u00e9c\u00e9dent (simplifi\u00e9) :</p> Cr\u00e9ation classique<pre><code>multiples = []\nfor i in range(101):\n    if i % 7 == 0:\n        multiples.append(i)\n</code></pre> Liste en compr\u00e9hension<pre><code>multiples = [i for i in range(101) if i % 7 == 0]\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/1tab/#exercices","title":"Exercices","text":"<p>R\u00e9pondre aux exercices restant sur le notebook Capytale, bon courage ! \ud83d\udc4c</p>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/","title":"Tableaux \u00e0 deux dimensions","text":""},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#tableaux-a-deux-dimensions","title":"Tableaux \u00e0 deux dimensions","text":""},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#une-liste-de-listes","title":"Une liste de listes","text":"<p>Nous avons vu qu'un tableau <code>list</code> pouvait contenir des \u00e9l\u00e9ments de tous types : des entiers, des flottants, des chaines des caract\u00e8res... et pourquoi pas des tableaux ? On obtient alors un tableau \u00e0 deux dimensions qui est similaire au concept math\u00e9matique de matrice.</p> \\[ \\begin{pmatrix}     3 &amp; 5 &amp; 2 \\\\     7 &amp; 1 &amp; 4 \\\\     8 &amp; 6 &amp; 9 \\\\ \\end{pmatrix} \\] Une matrice d'entiers de taille 3\u00d73 <p>Les tableaux \u00e0 deux dimensions servent \u00e0 repr\u00e9senter bien des choses ! Une table de donn\u00e9es, le plateau du jeu du Puissance 4, une grille d'un automate cellulaire, une image etc.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#exemple","title":"Exemple","text":"<p>Le tableau <code>tab</code> initialis\u00e9 ci-dessous est compos\u00e9 de 3 tableaux qui contiennent eux-m\u00eame trois entiers :</p> <pre><code>tab =  [[3, 5, 2], [7, 1, 4], [8, 6, 9]]\n</code></pre> <p>Il est courant de mettre en forme ce code comme suit :</p> <pre><code>tab = [[3, 5, 2],\n       [7, 1, 4],\n       [8, 6, 9]]\n</code></pre> <p>Tout se passe comme-ci on avait empil\u00e9 les lignes les unes sur les autres ! On acc\u00e8de aux \u00ab lignes \u00bb du tableau en deux dimensions gr\u00e2ce \u00ab aux crochets \u00bb, ou plut\u00f4t gr\u00e2ce \u00e0 l'op\u00e9rateur d'indexation :</p> <pre><code>&gt;&gt;&gt; tab[1]\n[7, 1, 4]\n</code></pre> <p>Et on peut acc\u00e9der aux \u00e9l\u00e9ments depuis cette ligne en utilisant encore une fois l'op\u00e9rateur d'indexation :</p> <pre><code>&gt;&gt;&gt; tab[1][2]\n4\n</code></pre> <p> </p> <p>Ainsi si on \u00e9crit <code>tab[i][j]</code>, on s\u00e9lectionne l'\u00e9l\u00e9ment \u00e0 la ligne <code>i</code> et \u00e0 la colonne <code>j</code>.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#parcourir-un-tableau","title":"Parcourir un tableau","text":"<p>Soit <code>matrice</code> un tableau \u00e0 deux dimensions, on peut parcourir ses \u00e9l\u00e9ments de deux mani\u00e8res :</p> <ul> <li> <p>Parcours par \u00e9l\u00e9ments :</p> <pre><code>for ligne in tab:\n  for \u00e9l\u00e9ment in ligne:\n      print(\u00e9l\u00e9ment)\n</code></pre> </li> <li> <p>Parcours par indices :</p> <pre><code>for i in range(len(matrice)):\n    for j in range(len(matrice[i])):\n        print(tab[i][j])\n</code></pre> <p>Si <code>len(matrice)</code> correspond aux nombres de lignes, <code>len(matrice[i])</code> correspond aux nombres d'\u00e9l\u00e9ments de la ligne <code>matrice[i]</code>.</p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#exercices","title":"Exercices","text":"<p>Liens Capytale</p> <ul> <li>Exercices :  Notebook Capytale 0d94-2383190</li> <li>Correction : Disponible plus tard !</li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#projet-un-jeu-de-la-vie","title":"Projet : Un jeu de la vie","text":"<p>Le Jeu de la Vie n'est pas vraiment un jeu. Il s'agit d'un automate cellulaire fascinant qui simule l'\u00e9volution d'un groupe de cellules sur une grille. Chaque cellule peut \u00eatre soit vivante, soit morte et son \u00e9tat \u00e9volue en fonction de r\u00e8gles simples. L'objectif est de programmer cet automate cellulaire et d'afficher son \u00e9volution :</p> <p></p> <p>Dans cette animation, que vous allez recr\u00e9er, une cellule vivante est blanche, et une cellule morte noire. Pour passer d'une it\u00e9ration \u00e0 la suivante, on suit les r\u00e8gles suivantes.</p>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#regles","title":"R\u00e8gles","text":"<p>Une cellule poss\u00e8de huit cellules adjacentes voisines :</p> <p></p> <p>\u00c0 chaque it\u00e9ration, l'\u00e9tat d\u2019une cellule est enti\u00e8rement d\u00e9termin\u00e9e par l\u2019\u00e9tat de ses huit cellules voisines, selon les r\u00e8gles suivantes :</p> <ul> <li>Une cellule morte devient vivante si elle poss\u00e8de exactement 3 cellules voisines vivantes.</li> <li>Une cellule vivante reste vivante si elle poss\u00e8de 2 ou 3 cellules voisines vivantes, sinon elle meurt.</li> </ul> <p>Par exemple la configuration suivante devient :</p> <p></p> <p>La transition entre les deux configurations est plus compr\u00e9hensible en faisant appara\u00eetre le nombre de cellules vivantes voisines pour chaque cellule :</p> <p></p>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#demarche","title":"D\u00e9marche","text":"<ul> <li> <p>Une cellule est soit vivante, soit morte. Quel type est adapt\u00e9 pour repr\u00e9senter l'\u00e9tat d'une cellule ?</p> </li> <li> <p>Comment repr\u00e9senter la grille des cellules en Python ?</p> </li> </ul> <p>Pour la suite, on suppose que la grille des cellules du Jeu de la Vie est carr\u00e9e. Dans un script Python <code>jeudelavie.py</code> ouvert dans Thonny, ajouter au fur et \u00e0 mesure les fonctions suivantes :</p> <ul> <li> <p>Pour vous aider \u00e0 d\u00e9boguer par la suite, \u00e9crire la fonction <code>afficher_matrice</code> qui prend en param\u00e8tre un tableau \u00e0 deux dimensions et affiche correctement son contenu :</p> <pre><code>def afficher_matrice(matrice):\n    \"\"\" Affiche la matrice donn\u00e9e en param\u00e8tre. \"\"\"\n    # code \u00e0 compl\u00e9ter\n</code></pre> <pre><code>&gt;&gt;&gt; afficher_matrice([[3, 5, 2], [7, 1, 4], [8, 6, 9]])\n3 5 2\n7 1 4\n8 6 9\n</code></pre> Mais print renvoie \u00e0 la ligne automatiquement ! <p>Soit vous construisez une grande cha\u00eene de caract\u00e8res avant de l'afficher (<code>'\\n'</code> correspond \u00e0 un saut de ligne), soit vous pouvez afficher it\u00e9rativement les \u00e9l\u00e9ments avec <code>print(\u00e9l\u00e9ment, end=' ')</code>, le param\u00e8tre cach\u00e9 <code>end</code> vaut par d\u00e9faut <code>'\\n'</code>.</p> </li> <li> <p>\u00c9crire la fonction <code>afficher_cellules</code> qui prend en param\u00e8tre une grille carr\u00e9e de cellules et l'affiche \u00ab joliment \u00bb : par exemple, une cellule vivante sera repr\u00e9sent\u00e9e par le caract\u00e8re <code>'\u25a0'</code>, et une cellule morte par le caract\u00e8re <code>'\u00b7'</code>.</p> <pre><code>def afficher_cellules(grille):\n    \"\"\" Affiche la grille de cellules donn\u00e9e en param\u00e8tre. \"\"\"\n    # code \u00e0 compl\u00e9ter\n</code></pre> <pre><code>&gt;&gt;&gt; afficher_cellules([[0, 1, 0], [0, 1, 0], [1, 0, 0]])\n\u00b7 \u25a0 \u00b7\n\u00b7 \u25a0 \u00b7\n\u25a0 \u00b7 \u00b7\n</code></pre> </li> <li> <p>\u00c9crire la fonction <code>calculer_voisins</code> qui prend en param\u00e8tre une carr\u00e9e de cellules et renvoie la matrice des voisins.</p> <pre><code>def calculer_voisins(grille):\n    \"\"\" Calcule la matrice des voisins de la grille de cellules donn\u00e9e en param\u00e8tre. \"\"\"\n\n    n = len(grille)  # on suppose la grille carr\u00e9e\n    voisins = [[0] * n for _ in range(n)]\n\n    # code \u00e0 compl\u00e9ter\n\n    return voisins\n</code></pre> <p>Par exemple, en reprenant l'exemple pr\u00e9c\u00e9dent :</p> <p></p> <pre><code>cellules = [[0, 0, 0, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 0, 0, 0]]\n\nvoisins = calculer_voisins(cellules)\nafficher_matrice(voisins)\n</code></pre> <p></p>Sortie<pre><code>0 1 1 1 0\n0 2 1 2 0\n0 3 2 3 0\n0 2 1 2 0\n0 1 1 1 0\n</code></pre> <p>Les cellules sur les bords risquent de poser quelques probl\u00e8mes. Une solution est consid\u00e9rer des bords finis :</p> <p></p> <pre><code>cellules = [[1, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 1],\n            [0, 0, 0, 0, 0],\n            [0, 1, 0, 0, 0]]\n\nvoisins = calculer_voisins(cellules)\nafficher_matrice(voisins)\n</code></pre> <p></p>Sortie<pre><code>0 1 0 0 0\n1 1 0 1 1\n0 0 0 1 0\n1 1 1 1 1\n1 0 1 0 0\n</code></pre> <p>Une autre solution \u00e0 la \u00ab Pac-Man \u00bb serait de consid\u00e9rer une grille dont les bords oppos\u00e9s sont adjacents.</p> </li> <li> <p>\u00c9crire une fonction <code>grille_suivante</code> qui prend en param\u00e8tre une grille de cellules et renvoie la prochaine grille suivant les r\u00e8gles du Jeu de la Vie.</p> <pre><code>def grille_suivante(grille):\n    \"\"\" Renvoie la prochaine grille de cellules apr\u00e8s une it\u00e9ration. \"\"\"\n\n    voisins = calculer_voisins(grille)\n    n = len(grille)\n    grille_suivante = [[0] * n for _ in range(n)]\n\n    # code \u00e0 compl\u00e9ter\n\n    return grille_suivante\n</code></pre> <p></p> <pre><code>cellules = [[0, 0, 0, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 1, 0, 0],\n            [0, 0, 0, 0, 0]]\n\ncellules = grille_suivante(cellules)\nafficher_cellules(cellules)\n</code></pre> <p></p>Sortie<pre><code>\u00b7 \u00b7 \u00b7 \u00b7 \u00b7\n\u00b7 \u00b7 \u00b7 \u00b7 \u00b7\n\u00b7 \u25a0 \u25a0 \u25a0 \u00b7\n\u00b7 \u00b7 \u00b7 \u00b7 \u00b7\n\u00b7 \u00b7 \u00b7 \u00b7 \u00b7\n</code></pre> </li> <li> <p>\u00c9crire la fonction <code>grille_al\u00e9atoire</code> qui prend en entr\u00e9e un entier \\(n\\) et renvoie une grille de taille \\(n \\times n\\) dont les cellules sont initialis\u00e9es de mani\u00e8re al\u00e9atoire, c'est-\u00e0-dire que chaque cellule a une probabilit\u00e9 \u00e9gale d'\u00eatre vivante ou morte. Ne pas oublier la fonction <code>randint</code> de la biblioth\u00e8que <code>random</code> !</p> <pre><code>import random\n\ndef grille_al\u00e9atoire(n):\n    \"\"\" G\u00e9n\u00e8re une grille du Jeu de la Vie al\u00e9atoire de taille n \u00d7 n. \"\"\"\n    # code \u00e0 compl\u00e9ter\n</code></pre> </li> <li> <p>Finalement, \u00e9crire la fonction <code>simuler</code> qui prend en entr\u00e9e une grille de cellules initiale et simule le Jeu de la Vie.</p> <pre><code>def simuler(grille):\n    \"\"\" Simule le Jeu de la Vie \u00e0 partir de la grille de cellules donn\u00e9e en param\u00e8tre. \"\"\"\n    continuer = True\n    while continuer:\n\n        # code \u00e0 compl\u00e9ter\n\n        saisie = input('Continuer ? ')\n        if saisie == 'stop':\n            continuer = False\n</code></pre> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#a-bas-la-console","title":"\u00c0 bas la console !","text":"<p>Actuellement, notre simulation est visuellement rudimentaire. Soyons honn\u00eates, elle est m\u00eame plut\u00f4t laide. Afin d'am\u00e9liorer l'aspect de cette simulation, on se propose alors d'afficher la simulation du Jeu de la Vie au sein d'une fen\u00eatre graphique. Pour ce faire, on utilisera la biblioth\u00e8que <code>pyxel</code>.</p> Installer la biblioth\u00e8que pyxel dans Thonny <p>Dans Thonny, dans la barre d'outils, <code>Outils</code> <code>G\u00e9rer les paquets</code>. Dans la barre de recherche, saisir <code>Pyxel</code> et cliquer sur <code>Rechercher sur PyPI</code>. Dans la liste des r\u00e9sultats, cliquer sur <code>pyxel</code>, puis <code>Installer</code>.</p> <p>Une fois l'installation faites, assurez-vous que tout fonctionne en ex\u00e9cutant le code suivant :</p> <pre><code>import time\nimport pyxel\nimport random\n\nn = 50\npyxel.init(n, n)  # d\u00e9finit une fen\u00eatre de n \u00d7 n pixels\n\nwhile True:\n    pyxel.cls(0)  # efface l'\u00e9cran et remplit le fond avec la couleur 0 (noir)\n    x = random.randint(0, n)\n    y = random.randint(0, n)\n    pyxel.pset(x, y, 7)  # change la couleur du pixel (x, y) \u00e0 7 (blanc)\n    pyxel.flip()  # rafra\u00eechit la fen\u00eatre\n    time.sleep(0.5)  # on patiente 0.5 secondes\n</code></pre> <ul> <li> <p>Comment changer la couleur du fond de la fen\u00eatre et du pixel ? La documention de Pyxel \u00e0 consulter.</p> </li> <li> <p>\u00c9crire la fonction <code>simuler_pyxel</code> qui simulera le Jeu de la Vie \u00e0 partir d'une grille donn\u00e9e en param\u00e8tre et la fonction <code>dessiner_cellules</code> qui dessinera la grille des cellules (elle remplacera <code>afficher_cellules</code>). Adapter le code pr\u00e9c\u00e9dent, tout s'y trouve ! \ud83d\ude0a</p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/2mat/#jen-veux-plus","title":"J'en veux plus !","text":"<ul> <li> <p>Une excellente vid\u00e9o de ScienceEtonnante sur le sujet qui vous permettra d'approfondir le sujet et d\u00e9couvrir d'autres automates cellulaires \u00e0 programmer \u00e0 l'envie.</p> </li> <li> <p>Le Jeu de la Vie dans le Jeu de la Vie \ud83d\ude40</p> </li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/3tupledict/","title":"Tuples et Dictionnaires","text":""},{"location":"2%20%E2%80%93%20Types%20construits/3tupledict/#tuples-et-dictionnaires","title":"Tuples et Dictionnaires","text":"<p>Liens</p> <ul> <li>Lien de la pr\u00e9sentation :  PDF de la pr\u00e9sentation des deux structures de donn\u00e9es</li> <li>Exercices :  Notebook Capytale 49ae-2595433</li> <li>Correction : Disponible plus tard !</li> </ul>"},{"location":"2%20%E2%80%93%20Types%20construits/3tupledict/#tuple","title":"Tuple","text":"<p>On retient qu'un tuple (ou p-uplet) est une s\u00e9quence continue et ordonn\u00e9e d\u2019\u00e9l\u00e9ments de types possiblement diff\u00e9rents. C'est une structure de donn\u00e9es immutables (qu'on ne peut modifier).</p> <pre><code># On construit un tuple avec des parenth\u00e8ses\neleve = ('Michel', 'Dupont', 17, 175)\n\n# On acc\u00e8de \u00e0 un \u00e9l\u00e9ment du tuple par son indice\nprint(eleve[0]) \n\n# Erreur ici, on ne peut pas modifier un tuple !\neleve[0] = 'Pierre'\n\n# D'autres op\u00e9rations classiques\nt1 = (12, 34, 56)\nt2 = (78, 90)\n\nprint(t1 + t2) # affiche (12, 34, 56, 78, 90)\nprint(t1 * 3) # affiche (12, 34, 56, 12, 34, 56, 12, 34, 56)\n\n# \"unpacking a tuple\" ou \"d\u00e9ballage d'un tuple\", marche aussi pour les tableaux !\nprenom, nom, age, taille = ('Michel', 'Dupont', 17, 175)\n</code></pre>"},{"location":"2%20%E2%80%93%20Types%20construits/3tupledict/#dictionnaire","title":"Dictionnaire","text":"<p>Un dictionnaire une structure de donn\u00e9es non-ordonn\u00e9e qui permet une  association cl\u00e9\u2013valeur.</p> <pre><code># Construction explicite d'un dictionnaire :\neleve = {\n    \"pr\u00e9nom\": \"Michel\",\n    \"nom\": \"Dupont\",\n    \"\u00e2ge\": 17,\n    \"taille\": 175\n}\n\n# On acc\u00e8de \u00e0 une valeur, gr\u00e2ce \u00e0 sa cl\u00e9 :\nprint(eleve[\"pr\u00e9nom\"])\n\n# Modification d'une valeur :\neleve[\"age\"] = 42\n\n# Suppression d'une association :\neleve.pop(\"taille\") # (note : ici, la m\u00e9thode .pop renvoie la valeur associ\u00e9e \u00e0 la cl\u00e9, donc 175)\n\nprint(eleve.keys()) # ensemble des cl\u00e9s\nprint(eleve.values()) # ensemble des valeurs\nprint(eleve.items()) # ensemble des cl\u00e9s-valeurs\n\n# parcours par cl\u00e9 \nfor key in eleve:\n\u00a0 \u00a0 print(key, eleve[key])\n\n# parcours par cl\u00e9 \nfor key in eleve.keys():\n\u00a0 \u00a0 print(key, eleve[key])\n\n# parcours par valeurs\nfor value in eleve.values():\n\u00a0 \u00a0 print(value)\n\n# parcours par cl\u00e9 et valeurs\nfor key, value in eleve.items():\n\u00a0 \u00a0 print(key, value)\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/","title":"Tables de donn\u00e9es","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#tables-de-donnees","title":"Tables de donn\u00e9es","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#introduction-et-vocabulaire","title":"Introduction et vocabulaire","text":"<p>La fa\u00e7on la plus naturelle et simple de structurer des donn\u00e9es est de les organiser sous la forme d'une table : bulletins scolaires, extrait de compte bancaire, statistiques sportives etc.</p> Nom Pr\u00e9nom Poste Taille Poids Mbapp\u00e9 Kylian Attaquant 179 78 Griezmann Antoine Attaquant 173 73 Giroud Oliver Attaquant 192 92 Lloris Hugo Gardien de but 188 78 Tchouam\u00e9ni Aur\u00e9lien Milieu de terrain 185 75 Kound\u00e9 Jules D\u00e9fenseur 178 70 Exemple de table <p>Le vocabulaire est le suivant :</p> <ul> <li> <p>Une table est un ensemble d'enregistrements (lignes).</p> </li> <li> <p>Un enregistrement contient les valeurs correspondants aux attributs (ou champs, ou encore descripteurs) de la table.</p> </li> </ul> <p>Par exemple, dans la table pr\u00e9c\u00e9dente :</p> <ul> <li> <p><code>Nom</code>, <code>Pr\u00e9nom</code>, <code>Poste</code>, <code>Taille</code>, <code>Poids</code> sont des attributs. On peut noter que chaque champ est d\u00e9fini par un type (entier, flottant, cha\u00eene de caract\u00e8res etc.). </p> </li> <li> <p>Chaque ligne de la table est un enregistrement. Il y a 6 enregistrements dans cet table.</p> </li> <li> <p><code>Mbapp\u00e9</code> est une valeur du champ <code>Nom</code> pour le premier enregistrement.</p> </li> </ul>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#representation-dune-table-en-python","title":"Repr\u00e9sentation d'une table en Python","text":"<p>Une question se pose : Comment repr\u00e9senter une telle structure de donn\u00e9es en Python ?</p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#representation-dun-enregistrement","title":"Repr\u00e9sentation d'un enregistrement","text":"<p>Il existe deux mani\u00e8res communes de repr\u00e9senter un enregistrement. Puisqu'un tableau ne peux pas contenir des valeurs de diff\u00e9rents types, un p-uplet (ou tuple) semble \u00eatre une bonne premi\u00e8re approche :</p> <pre><code>enregistrement = ('Mbapp\u00e9', 'Kylian', 'Attaquant', 179, 78)\n</code></pre> <p>H\u00e9las, pour acc\u00e9der aux valeurs de cet enregistrement, il est n\u00e9cessaire d'utiliser des indices :</p> <pre><code>&gt;&gt;&gt; enregistrement[3]\n179\n</code></pre> <p>On pr\u00e9f\u00e9rera alors utiliser un dictionnaire qui permet en quelque sorte de \"nommer les indices\" avec leur champ correspondant :</p> <pre><code>enregistrement = {\n    'nom'    : 'Mbapp\u00e9',\n    'pr\u00e9nom' : 'Kylian',\n    'poste'  : 'Attaquant',\n    'taille' : 179,\n    'poids'  : 78\n}\n</code></pre> <p>Et donc si on veut acc\u00e9der au champ <code>Taille</code> de la table :</p> <pre><code>&gt;&gt;&gt; enregistrement1['taille']\n179\n</code></pre> <p>Ce qui est bien plus \u00e9l\u00e9gant !</p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#representation-dune-table","title":"Repr\u00e9sentation d'une table","text":"<p>Une table est une collection d'enregistrements, donc on la repr\u00e9senter sous la forme d'une liste d'enregistrements, une liste de dictionnaires :</p> <pre><code>table = [\n    {'nom' : 'Mbapp\u00e9',     'pr\u00e9nom' : 'Kylian',   'poste' : 'Attaquant',         'taille' : 179, 'poids' : 78},\n    {'nom' : 'Griezmann',  'pr\u00e9nom' : 'Antoine',  'poste' : 'Attaquant',         'taille' : 173, 'poids' : 73},\n    {'nom' : 'Giroud',     'pr\u00e9nom' : 'Oliver',   'poste' : 'Attaquant',         'taille' : 192, 'poids' : 92},\n    {'nom' : 'Lloris',     'pr\u00e9nom' : 'Hugo',     'poste' : 'Gardien de but',    'taille' : 188, 'poids' : 78},\n    {'nom' : 'Tchouam\u00e9ni', 'pr\u00e9nom' : 'Aur\u00e9lien', 'poste' : 'Milieu de terrain', 'taille' : 185, 'poids' : 75},\n    {'nom' : 'Kound\u00e9',     'pr\u00e9nom' : 'Jules',    'poste' : 'D\u00e9fenseur',         'taille' : 178, 'poids' : 70}\n]\n</code></pre> <p>Ainsi on peut facilement manipuler cette table :</p> <pre><code>&gt;&gt;&gt; table[1]\n{'nom' : 'Griezmann', 'pr\u00e9nom' : 'Antoine', 'poste' : 'Attaquant', 'taille' : 173, 'poids' : 73 }\n&gt;&gt;&gt; table[1]['pr\u00e9nom']\n'Antoine'\n</code></pre> Question 1 - Manipuler une table sous la forme d'une liste de dictionnaires <ul> <li>Copier la table des joueurs pr\u00e9c\u00e9dent dans un script Python.     <pre><code>table = ...\n</code></pre></li> <li>Afficher le 4\u00e8me enregistrement.     <pre><code>print(table[...])\n</code></pre></li> <li>Afficher le nom est la taille de ce joueur.     <pre><code>print(table[...][...], table[...][...])\n</code></pre></li> <li>Parcourir la table pour afficher seulement la taille des joueurs.     <pre><code>for ligne in table:\n    print(ligne[...])\n</code></pre></li> <li>Calculer la moyenne de la taille des joueurs.</li> </ul>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#fichiers-csv","title":"Fichiers CSV","text":"<p>Les tables sont fr\u00e9quemment enregistr\u00e9es dans des fichiers au format <code>.csv</code> (comma separated values). C'est un simple fichier texte o\u00f9 :</p> <ul> <li> <p>La premi\u00e8re ligne d\u00e9finit les attributs.</p> </li> <li> <p>Chaque ligne correspond \u00e0 un enregistrement.</p> </li> <li> <p>Les attributs et les valeurs sont s\u00e9par\u00e9s par un d\u00e9limiteur, g\u00e9n\u00e9ralement par une virgule.</p> </li> <li> <p>Les guillemets <code>\"</code> peuvent \u00eatre utilis\u00e9s pour d\u00e9limiter le contenu d'une ch\u00e2ine de caract\u00e8res.</p> </li> </ul> <p>Par exemple, le d\u00e9but de la table pr\u00e9c\u00e9dente s'\u00e9crirait comme :</p> <pre><code>Nom,Pr\u00e9nom,Poste,Taille,Poids\nMbapp\u00e9,Kylian,Attaquant,179,78\nGriezmann,Antoine,Attaquant,173,73\nGiroud,Oliver,Attaquant,192,92\n</code></pre> Question 2 - Un autre exemple de d\u00e9limiteur <ul> <li>T\u00e9l\u00e9charger  ce fichier .csv et l'ouvrir ensuite avec un \u00e9diteur de texte (notepad++) pour observer sa construction. Quel est le d\u00e9limiteur ?</li> </ul>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#charger-un-fichier-csv-avec-python","title":"Charger un fichier CSV avec Python","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#from-scratch","title":"From scratch","text":"<p>Ouvrir un fichier en Python se fait gr\u00e2ce \u00e0 la fonction <code>open</code>. Les m\u00e9thodes <code>.read</code> et <code>.split</code> permettent ensuite de r\u00e9cup\u00e9rer l'ensemble des lignes dans une liste.</p> <p>Attention !</p> <p>Le ficher <code>pokedex.csv</code> doit se trouver dans le m\u00eame dossier que votre script Python !</p> <p></p><pre><code>&gt;&gt;&gt; fichier = open('pokedex.csv', encoding='UTF-8')\n&gt;&gt;&gt; lignes = fichier.read().split('\\n')\n&gt;&gt;&gt; lignes[0]\n'No;Nom;Type;PV;Attaque;D\u00e9fense;Vitesse;ASp\u00e9;DSp\u00e9;Talent;Nom US;code'\n&gt;&gt;&gt; lignes[6]\n'6;Dracaufeu;feu,vol;78;84;78;100;109;85;Brasier,Force Soleil;Charizard;63266'\n</code></pre> Il va falloir un peu travailler ces cha\u00eenes de caract\u00e8res pour parvenir \u00e0 des dictionnaires. La m\u00e9thode <code>.split</code> appliqu\u00e9e \u00e0 une cha\u00eene de caract\u00e8re permet de la  scinder suivant un d\u00e9limiteur donn\u00e9 en param\u00e8tre. <pre><code>&gt;&gt;&gt; \"oui bonjour \u00e7a va\".split(' ')\n['oui', 'bonjour', '\u00e7a', 'va']\n&gt;&gt;&gt; chaine = \"Un peu, trop, de virgules, non?\"\n&gt;&gt;&gt; chaine.split(',')\n['Un peu', ' trop', ' de virgules', ' non?']\n</code></pre> <p>R\u00e9cup\u00e9rer les attributs</p> <ul> <li> <p>Dans un nouveau script Python, copier le code suivant : </p><pre><code>fichier = open('pokedex.csv', encoding='UTF-8')\nlignes = fichier.read().split('\\n')\nattributs = # \u00e0 compl\u00e9ter\n</code></pre> </li> <li> <p>\u00c9crire la code pour r\u00e9cup\u00e9rer les attributs (les cl\u00e9s de notre futur dictionnaire) sous la forme d'une liste de cha\u00eenes de caract\u00e8res. \u00c0 la fin de l'ex\u00e9cution de votre code, <code>attributs</code> doit \u00eatre \u00e9gal \u00e0 <code>['No', 'Nom', 'Type', 'PV', ...]</code>.</p> </li> </ul> <p>Transformer un enregistrement en un dictionnaire est plus subtil car il n\u00e9cessaire de convertir certaines valeurs.</p> <pre><code>&gt;&gt;&gt; lignes[1]\n'1;Bulbizarre;plante,poison;45;49;49;45;65;65;Engrais,Chlorophylle;Bulbasaur;77140'\n&gt;&gt;&gt; lignes[1].split(';')\n['1', 'Bulbizarre', 'plante,poison', '45', '49', '49', '45', '65', '65', 'Engrais,Chlorophylle', 'Bulbasaur', '77140']\n</code></pre> <p>On peut manuellement convertir certaines valeurs dans son bon type :</p> <pre><code>vals = lignes[1].split(';')\nvals = (int(vals[0]), vals[1], vals[2], int(vals[3]), int(vals[4]), int(vals[5]), int(vals[6]), int(vals[7]), int(vals[8]), vals[9], vals[10], int(vals[11]))\nprint(vals)\n</code></pre> <p>Le code affiche :</p> <pre><code>(1, 'Bulbizarre', 'plante,poison', 45, 49, 49, 45, 65, 65, 'Engrais,Chlorophylle', 'Bulbasaur', 77140)\n</code></pre> <p>Une fois ce tuple construit, on peut enfin le transformer en un dictionnaire :</p> <pre><code>enregistrement = {}\nfor i in range(len(attributs)):\n    enregistrement[attributs[i]] = vals[i]\nprint(enregistrement)\n</code></pre> <p>R\u00e9cup\u00e9rer les enregistrements</p> <ul> <li> <p>Adapter ce code pour transformer tous les enregistrements de table en dictionnaires. Structurer votre code avec des fonctions comme <code>transformer_ligne_en_tuple</code> et <code>transformer_tuple_en_dico</code> !</p> </li> <li> <p>Finalement, \u00e0 partir des attributs et des enregistrements, construire la liste des dictionnaires repr\u00e9sentant la table.</p> </li> </ul> <p>\u00c9videmment ce code ne fonctionnera que pour le fichier csv fourni.</p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/1intro/#grace-a-la-bibliotheque-csv","title":"Gr\u00e2ce \u00e0 la biblioth\u00e8que <code>csv</code>","text":"<p>La biblioth\u00e8que <code>csv</code> permet de lire et d'\u00e9crire des fichiers csv rapidement. Par exemple, la fonction <code>DictReader</code> remplace tout notre code pr\u00e9c\u00e9dent :</p> <pre><code>import csv\n\nfichier = open('pokedex.csv', 'r', encoding='UTF-8')  # 'r' pour read, on veut simplement lire le fichier\n\ntable = csv.DictReader(fichier, delimiter=';')\n\ntable = list(table) # table est de type 'csv.DictReader', on la convertit ici en une liste de dictionnaires\n\nprint(table[0])\n\nfichier.close() # fermeture du fichier\n</code></pre> <p>Le code affiche :</p> <pre><code>{'No': '1', 'Nom': 'Bulbizarre', 'Type': 'plante,poison', 'PV': '45', 'Attaque': '49', 'D\u00e9fense': '49', 'Vitesse': '45', 'ASp\u00e9': '65', 'DSp\u00e9': '65', 'Talent': 'Engrais,Chlorophylle', 'Nom US': 'Bulbasaur', 'code': '77140'}\n</code></pre> <p>La conversion des valeurs ne se fait h\u00e9las pas automatiquement. </p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/","title":"Op\u00e9rations sur les tables","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#operations-sur-les-tables","title":"Op\u00e9rations sur les tables","text":"<p>Pour tous ces exercices, on s'appuiera sur cette table. Pour rappel le code \u00e0 adapter pour importer un fichier csv :</p> <pre><code>import csv\n\nfile = open('harrypotter.csv', 'r')\ntable_hp = list(csv.DictReader(file, delimiter=','))\n</code></pre> <p>Ici, on s'int\u00e9resse aux op\u00e9rations classiques sur les tables.</p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#recherche-de-valeurs","title":"Recherche de valeurs","text":"<p>Appartient \u00e0</p> <p>On souhaite d'abord v\u00e9rifier qu'une valeur appartient \u00e0 une table ou non. Pour cela il suffit de parcourir les enregistrements de la table et v\u00e9rifier que la valeur recherch\u00e9e est une valeur de l'enregistrement.</p> <pre><code>def appartient(valeur, table: list) -&gt; bool:\n    '''\n    Renvoie True si et seulement **si** la valeur appara\u00eet dans les valeurs de la table.\n    '''\n    for e in table: # e pour enregistrement\n        for v in e. ... () : # v pour ...\n            if v == ...\n                return ...\n    return ...\n</code></pre> <ol> <li> <p>Compl\u00e9ter ce code.</p> </li> <li> <p>Simplifier ce code en utilisant l'op\u00e9rateur d'appartenance <code>in</code>.</p> </li> <li> <p>Que renvoie <code>appartient('Harry Potter', table_hp)</code> ?</p> </li> </ol> <p>Appartient \u00e0 (suivant un champ)</p> <p>Adapter la fonction pr\u00e9c\u00e9dente pour qu'elle prenne en param\u00e8tre un champ et qu'elle recherche si la valeur est pr\u00e9sente pour le champ pr\u00e9cis\u00e9. La signature de la fonction :</p> <pre><code>def appartient(valeur, champ: str, table: list) -&gt; bool:\n</code></pre> <p>Recherche</p> <p>On souhaite d\u00e9sormais r\u00e9cup\u00e9rer certaines donn\u00e9es si la valeur recherch\u00e9e est trouv\u00e9e.</p> <p>Adapter la fonction pr\u00e9c\u00e9dente pour qu'elle renvoie la liste des valeurs correspondant \u00e0 un second champ (de retour) lorsque la valeur cherch\u00e9e est trouv\u00e9e (dans un premier champ de recherche). La signature de la fonction :</p> <pre><code>def recherche(valeur, champ1: str, champ2: str, table: list) -&gt; list:\n</code></pre> <p>Un exemple :</p> <pre><code>&gt;&gt;&gt; recherche('Hufflepuff', 'House', 'Character Name', table_hp)\n['Cedric Diggory', 'Nymphadora Tonks', 'Susan Bones', 'Pomona Sprout', 'Leanne', 'Justin Finch-Fletchley', 'Zacharias Smith', 'Ernest Macmillan']\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#agregation","title":"Agr\u00e9gation","text":"<p>L'agr\u00e9gation est une fonction qui transforme une liste d'\u00e9l\u00e9ments en une unique valeur. Vous connaissez d\u00e9j\u00e0 moults fonctions d'aggr\u00e9gation : somme d'une liste, moyenne d'une liste, maximum/minimum d'une liste, nombre d'\u00e9l\u00e9ments d'une liste etc.</p> <p>Aggr\u00e9gation avec condition</p> <p>Il est bien utile d'armer une telle fonction avec une condition. Par exemple, \u00e9crivez la fonction <code>compte</code> qui prend en param\u00e8tre une valeur, un champ et une table et renvoie le nombre d'occurences de la valeur dans le champ de la table.</p> <pre><code>&gt;&gt;&gt; compte('Female', 'Gender', table_hp)\n42\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#selection","title":"S\u00e9lection","text":"<p>Une s\u00e9lection revient \u00e0 cr\u00e9er une nouvelle table en extrayant les enregistrements d'une table existante v\u00e9rifiant une certaine condition. </p> <p>Par exemple, on pourrait s\u00e9lectionner les personnages de Serdaigle (Ravenclaw) :</p> Character ID Character Name Species Gender House Patronus Wand (Wood) Wand (Core) 25 Luna Lovegood Human Female Ravenclaw Hare 28 Gilderoy Lockhart Human Male Ravenclaw Cherry Dragon Heartstring 38 Sybill Trelawney Human Female Ravenclaw Hazel Unicorn Hair 39 Moaning Myrtle Ghost Female Ravenclaw 41 Quirinus Quirrell Human Male Ravenclaw Alder Unicorn Hair 43 Garrick Ollivander Human Male Ravenclaw Hornbeam Dragon Heartstring 54 Helena Ravenclaw Ghost Female Ravenclaw 55 Cho Chang Human Female Ravenclaw Swan 59 Filius Flitwick Human (Part-Goblin) Male Ravenclaw 101 Padma Patil Human Female Ravenclaw 119 Michael Corner Human Male Ravenclaw Squirrel 124 Marcus Belby Human Male Ravenclaw <p>Cela consiste donc \u00e0 cr\u00e9er une liste en parcourant la table existante et en s\u00e9lectionnant les enregistrements selon un crit\u00e8re : c'est exactement ainsi qu'on cr\u00e9e une liste en compr\u00e9hension avec filtre.</p> <p>La table pr\u00e9c\u00e9dente a \u00e9t\u00e9 obtenu gr\u00e2ce \u00e0 la ligne de code :</p> <pre><code>table_serdaigle = [e for e in table_hp if e['House'] == 'Ravenclaw']\n</code></pre> <p>Exercices sur la s\u00e9lection</p> <ol> <li>Cr\u00e9er la table des personnages d'esp\u00e8ce \"Ghost\"</li> <li>Cr\u00e9er la table des personnages f\u00e9minins et de Gryffondor.</li> <li>Cr\u00e9er la table des personnages masculins dont le nombre de lettres de leur nom est pair.</li> </ol>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#projection","title":"Projection","text":"<p>On peut \u00e9galement avoir \u00e0 extraire d'une table certaines colonnes, c'est-\u00e0-dire seulement des donn\u00e9es d'un ou plusieurs champs. On appelle \u00e9galement cette op\u00e9ration projection.</p> <p>Origine du mot projection</p> <p>En math\u00e9matique, on parle de projection quand on passe d'une dimension \u00e0 une dimension inf\u00e9rieure. Typiquement, on peut projetter un point dans l'espace (3D) sur un plan (2D). Dans le cas des tables, une colonne peut \u00eatre vu comme une dimension. En effet, il n'est pas rare de traiter un enregistrement comme un simple vecteur. </p> <p>Il s'agit donc de cr\u00e9er une nouvelle table (liste) dont les enregistrements sont des dictionnaires qui ne contiennent que les couples champ: valeur des enregistrements de la table initiale pour les champs pr\u00e9cis\u00e9s (sous forme d'une liste par exemple).</p> <p>La projection en code</p> <ol> <li> <p>Compl\u00e9ter la fonction de projection:</p> <pre><code>def projection(table: list, liste_champs: list) -&gt; list:\n    '''\n    Renvoie une table (liste de dictinonaires) des enregistrements de table ne contenant uniquement\n    les champs appartenant \u00e0 liste_champs.\n    '''\n    table_proj = ...\n    for e in ...:\n        table_proj.append({c: v for c, v in ... if ... })\n    return ...\n</code></pre> </li> <li> <p>Utiliser cette fonction pour cr\u00e9er une table en extrayant les colonnes \"Character Name\" et \"House\" de la table d'exemple.</p> </li> </ol>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#tri","title":"Tri","text":"<p>Il est parfois utile d'ordonner les enregistrements en les triant suivant les valeurs d'une ou plusieurs colonnes.</p> <p>Par chance, Python est fourni avec deux fonctions de base pour trier une liste, la m\u00e9thode <code>sort</code> et la fonction <code>sorted</code>. </p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#difference-entre-sort-et-sorted","title":"Diff\u00e9rence entre <code>sort</code> et <code>sorted</code>","text":"<ul> <li>La m\u00e9thode <code>sort</code> tri en place la liste \u00e0 laquelle on la lui applique. C'est-\u00e0-dire qu'elle modifie directement la liste. Elle ne renvoie rien.</li> </ul> <pre><code>&gt;&gt;&gt; tab = [5, 4, 8, 1, 2, 3]\n&gt;&gt;&gt; tab.sort()\n&gt;&gt;&gt; tab\n[1, 2, 3, 4, 5, 8]\n</code></pre> <ul> <li>La fonction <code>sorted</code> quant \u00e0 elle renvoie une nouvelle liste, elle ne modifie pas la liste donn\u00e9e en argument.</li> </ul> <pre><code>&gt;&gt;&gt; tab = [5, 4, 8, 1, 2, 3]\n&gt;&gt;&gt; sorted(tab)\n[1, 2, 3, 4, 5, 8]\n&gt;&gt;&gt; tab\n[5, 4, 8, 1, 2, 3]\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#ordre-de-tri","title":"Ordre de tri","text":"<p>Pour ordonner de mani\u00e8re d\u00e9croissante, on se sert du param\u00e8tre bool\u00e9en <code>reverse</code>. </p> <pre><code>&gt;&gt;&gt; sorted([5, 4, 8, 1, 2, 3], reverse=True)\n[8, 5, 4, 3, 2, 1]\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#cle-de-tri","title":"Cl\u00e9 de tri","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#tri-des-types-classiques","title":"Tri des types classiques","text":"<ul> <li>Les nombres (<code>int</code>, <code>float</code>) sont tri\u00e9es classiquement :</li> </ul> <pre><code>&gt;&gt;&gt; sorted([5, 4, 8, 1, 2, 3])\n[1, 2, 3, 4, 5, 8]\n</code></pre> <ul> <li>Les cha\u00eenes de caract\u00e8res (<code>str</code>) sont tri\u00e9es par ordre alphab\u00e9tique :</li> </ul> <pre><code>&gt;&gt;&gt; sorted(['bateau', 'cuisine', 'arbre', 'dinde'])\n['arbre', 'bateau', 'cuisine', 'dinde']\n</code></pre> <ul> <li>Les tableaux (<code>list</code>) ou les p-uplets (<code>tuple</code>) sont tri\u00e9s par ordre lexicographique : on trie suivant le premier \u00e9l\u00e9ment, puis le deuxi\u00e8me etc.</li> </ul> <pre><code>&gt;&gt;&gt; sorted([(1, 2), (2, 5), (1, 1), (1, 3), (0, 1), (2, 6)])\n[(0, 1), (1, 1), (1, 2), (1, 3), (2, 5), (2, 6)]\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#tri-personnalise","title":"Tri personnalis\u00e9","text":"<p><code>sort</code> et <code>sorted</code> ont un param\u00e8tre nomm\u00e9 <code>key</code> qui permet de sp\u00e9cifier une fonction qui est appel\u00e9e sur chaque \u00e9l\u00e9ment de la liste avant d\u2019effectuer des comparaisons. Ainsi, cette fonction renvoie la plupart du temps un nombre, car les entiers et flottants sont facilement comparables. Cette fonction est parfois appel\u00e9e projecteur, car elle projette les \u00e9lements de la liste vers une valeur comparable (typiquement <code>int</code>). Sa signature usuel :</p> <pre><code>def projecteur(element_de_la_liste) -&gt; int:\n</code></pre> <p>Un premier exemple</p> <p>Par exemple, on peut trier une liste de couples de nombre suivant le second nombre gr\u00e2ce \u00e0 un projecteur  :</p> <pre><code>def second_proj(t: tuple) -&gt; int:\n    return t[1]\n</code></pre> <pre><code>&gt;&gt;&gt; tab = [(1, 2), (2, 5), (1, 1), (1, 3), (0, 1), (2, 2)]\n&gt;&gt;&gt; sorted(tab, key=second_proj)\n[(1, 1), (0, 1), (1, 2), (2, 2), (1, 3), (2, 5)]\n</code></pre> <p>Un second exemple</p> <p>Pour trier une liste de dictionnaires (une table), il faut n\u00e9cessairement sp\u00e9cifier un projecteur pour obtenir des \u00e9l\u00e9ments comparables. En effet, deux dictionnaires sont par d\u00e9faut incomparables.</p> <pre><code>releve =[{'Nom': 'Alice', 'Anglais': 17, 'Info': 18, 'Maths': 16},\n         {'Nom': 'Bob',   'Anglais': 19, 'Info': 13, 'Maths': 14},\n         {'Nom': 'Carol', 'Anglais': 15, 'Info': 17, 'Maths': 19}]\n</code></pre> <p>On peut trier la table suivant la note d'informatique gr\u00e2ce au projecteur :</p> <pre><code>def info_proj(d: dict):\n    return d['Info']\n</code></pre> <p>Ce projecteur prend donc un dictionnaire (un enregistrement) et renvoie la valeur \u00e0 la cl\u00e9 \"Info\" (le champ \"Info\").</p> <pre><code>&gt;&gt;&gt; sorted(releve, key=info_proj)\n[\n    {'Nom': 'Bob',   'Anglais': 19, 'Info': 13, 'Maths': 14},\n    {'Nom': 'Carol', 'Anglais': 15, 'Info': 17, 'Maths': 19},\n    {'Nom': 'Alice', 'Anglais': 17, 'Info': 18, 'Maths': 16},\n]\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/2operations/#exercices","title":"Exercices","text":"<p>Trier suivant la moyenne g\u00e9n\u00e9ral</p> <p>On travaille avec la m\u00eame table <code>releve</code> que pr\u00e9cedemment.</p> <ol> <li> <p>Ecrire le projecteur <code>moyenne_proj</code> qui permet de trier les enregistrements suivant la moyenne g\u00e9n\u00e9rale.</p> </li> <li> <p>En utilisant le param\u00e8tre <code>reverse</code>, trier la table <code>reverse</code> par ordre d\u00e9croissant de moyenne g\u00e9n\u00e9rale.</p> </li> </ol> <p>De retour \u00e0 Poudlard</p> <ol> <li> <p>Trier la table <code>table_hp</code> selon le champ <code>Character Name</code>.</p> </li> <li> <p>Trier la table <code>table_hp</code> selon le champ <code>\"House\"</code>, puis <code>\"Character Name\"</code>. (on rappelle que Python sait trier par d\u00e9faut des tuples...)</p> </li> </ol> <p>Encore des projecteurs</p> <p>On travaille maintenant sur la table des pays. Il faudra \u00e9crire les bons projecteurs pour r\u00e9pondre aux questions suivantes :</p> <ol> <li> <p>Afficher le nom des pays par ordre d\u00e9croissant de superficie.</p> </li> <li> <p>Afficher les 10 pays les moins peupl\u00e9s, dans l\u2019ordre inverse de leur population, sous la forme (pays, population).</p> </li> <li> <p>Afficher les 8 pays poss\u00e9dant la plus grande densit\u00e9 de population, dans l\u2019ordre inverse de densit\u00e9, sous la forme (pays, densit\u00e9). (attention aux conversions !)</p> </li> </ol>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/3fusion/","title":"Fusion de tables","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/3fusion/#fusion-de-tables","title":"Fusion de tables","text":"<p>Dans la vie r\u00e9elle, une base de donn\u00e9es se compose de plusieurs tables de donn\u00e9es plus ou moins reli\u00e9es entre-elles. Parfois deux tables partagent un m\u00eame champ qui va nous permettre de r\u00e9aliser une fusion de ces tables, c'est l'op\u00e9ration de jointure.</p>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/3fusion/#un-premier-exemple","title":"Un premier exemple","text":"<p>Par exemple, pr\u00e9sentons deux tables :</p> Nom Esp\u00e8ce Force Statut Dark Vador Humain oui Sith Obi-Wan Kenobi Humain oui Jedi R2-D2 Dro\u00efde non Astrom\u00e9cano Rey Humain oui Jedi Han Solo Humain non Contrebandier Leia Organa Humain oui S\u00e9natrice C-3PO Dro\u00efde non Protocole Luke Skywalker Humain oui Jedi Padm\u00e9 Amidala Humain non S\u00e9natrice Dark Sidious Humain oui Sith Nom Affiliation Dark Vador Empire Obi-Wan Kenobi R\u00e9publique R2-D2 R\u00e9publique Rey R\u00e9bellion Han Solo R\u00e9bellion Grand Moff Tarkin Empire Leia Organa R\u00e9bellion C-3PO R\u00e9publique Luke Skywalker R\u00e9bellion Padm\u00e9 Amidala R\u00e9publique Dark Sidious Empire <p>Ces deux tables partagent le m\u00eame champ \"Nom\", on peut donc les fusionner sur ce champ. C'est-\u00e0-dire construire une nouvelle table qui contient les valeurs des deux tables ( \u00e0 condition donc qu'elles poss\u00e8dent un champ commun) :</p> Nom Esp\u00e8ce Force Statut Affiliation Dark Vador Humain oui Sith Empire Obi-Wan Kenobi Humain oui Jedi R\u00e9publique R2-D2 Dro\u00efde non Astrom\u00e9cano R\u00e9publique Rey Humain oui Jedi R\u00e9bellion Han Solo Humain non Contrebandier R\u00e9bellion Leia Organa Humain oui S\u00e9natrice R\u00e9bellion C-3PO Dro\u00efde non Protocole R\u00e9publique Luke Skywalker Humain oui Jedi R\u00e9bellion Padm\u00e9 Amidala Humain non S\u00e9natrice R\u00e9publique Dark Sidious Humain oui Sith Empire"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/3fusion/#exercices","title":"Exercices","text":"<p>Les deux tables \u00e0 fusionner au format csv</p> <p>table1 et table2.</p> <p>Fusion par jointure</p> <p>La fusion par jointure consiste \u00e0 :</p> <ul> <li>cr\u00e9er une table vide qui accueillera les enregistrements contruits en fusionnant ceux des deux tables</li> <li>parcourir les enregistrements de la premi\u00e8re table</li> <li>pour chacun des enregistrements de la deuxi\u00e8me  table, regarder si les enregistrements ont la m\u00eame valeur pour le champ commun</li> <li>si c'est le cas, cr\u00e9er une copie de l'enregistrement de la premi\u00e8re table, \u00e0 laquelle on ajoute les donn\u00e9es (champ: valeur) de la deuxi\u00e8me table.</li> </ul> <pre><code>def fusion(table1: list, table2: list, champ: str) -&gt; list:\n    nouvelle_table = ...\n    for e1 in table1: # e pour enregistrement\n        for e2 in table2:\n            if ...:\n                e = dict(e1)\n                for champ in ...:\n                    if ...:\n                        e[champ] = ...\n                nouvelle_table.append(...)\n    return ...\n</code></pre>"},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/4tp/","title":"TP Pok\u00e9dex","text":""},{"location":"3%20%E2%80%93%20Tables%20de%20donn%C3%A9es/4tp/#tp-pokedex","title":"TP Pok\u00e9dex","text":"<p>Lien Capytale</p> <ul> <li>Document R\u00e9ponse :  Notebook Capytale 7b55-1200506</li> </ul> <p>Dans tout ce TP, on manipulera la table contenue dans ce fichier. </p> <ol> <li>Commencez par ouvrir le fichier avec l'\u00e9diteur de texte. Contr\u00f4lez le d\u00e9limiteur utilis\u00e9.</li> <li>Importez les donn\u00e9es dans une table.</li> <li>Existe-t-il un pokemon dont le nom est <code>Apireine</code> ? Si oui, quel est son <code>'Nom US'</code>?</li> <li>Modifiez la table pour ne conserver que les champs:      <pre><code>'Nom', 'Type', 'PV', 'Attaque', 'D\u00e9fense', 'code'\n</code></pre></li> <li>Combien de pokemons ont une <code>'Attaque'</code> sup\u00e9rieure ou \u00e9gale \u00e0 50?</li> <li>\u00c0 partir de la table initiale, cr\u00e9ez une nouvelle table qui ne contient que les pokemons de type <code>'Plante'</code>.</li> <li>Cr\u00e9ez une nouvelle table tri\u00e9e sur le champ <code>'PV'</code> par ordre d\u00e9croissant.</li> <li>Voici une table des coordonn\u00e9es g\u00e9ographiques des communes fran\u00e7aises. Cr\u00e9ez une nouvelle table en fusionnant les deux tables sur le champ <code>'code'</code>.</li> <li>Cr\u00e9ez une carte avec folium pour localiser les pok\u00e9mons !</li> </ol> <p>Cr\u00e9er une carte avec le module <code>folium</code></p> <p>Le module <code>folium</code> de Python permet de cr\u00e9er une carte au format <code>html</code> gr\u00e2ce \u00e0 OpenStreetMap et le module <code>webbrowser</code> permet de l'afficher dans un navigateur.</p> <pre><code>import folium\nimport webbrowser\n\npos = [48.8704, 2.31673] # coordonn\u00e9es g\u00e9ographiques\n\nc = folium.Map(location=pos, zoom_start=15) # cr\u00e9ation d'une carte centr\u00e9 en `pos`\n\nfolium.Marker(location=pos, popup=\"Qui habite ici ?\").add_to(c) # ajout d'un marqueur sur la carte\n\nc.save('maCarte.html') # sauvegarde la carte au format HTML\nwebbrowser.open('maCarte.html') # affiche la carte dans un navigateur\n</code></pre> <p>Il est possible d'ajouter autant de marqueurs que souhait\u00e9.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/1intro/","title":"Interactions entre l'Homme et la Machine sur le Web","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/1intro/#interactions-entre-lhomme-et-la-machine-sur-le-web","title":"Interactions entre l'Homme et la Machine sur le Web","text":"<p>Au cours de la s\u00e9ance de travaux pratiques sur Filius, nous avons \u00e9tudi\u00e9 le mod\u00e8le client-serveur. Dans ce mod\u00e8le, un h\u00f4te du r\u00e9seau, appel\u00e9 client, demande une ressource \u00e0 un autre h\u00f4te, le serveur Web, en utilisant g\u00e9n\u00e9ralement le protocole HTTP.</p> <p>En termes de terminologie, il est courant de dire que le client \u00e9met une requ\u00eate et que le serveur fournit une r\u00e9ponse.</p> <p></p> <p>L'une des ressources les plus courantes est une \u00ab page Web \u00bb, qui est g\u00e9n\u00e9ralement l'association de trois fichiers :</p> <ul> <li> <p> Un fichier HTML <code>.html</code> contenant le script qui d\u00e9finit la structure de base de la page.</p> </li> <li> <p> Un fichier CSS <code>.css</code> responsable de la mise en forme, du style ou de la pr\u00e9sentation de la page.</p> </li> <li> <p> Un fichier JavaScript <code>.js</code> ajoutant de l'interactivit\u00e9 au site Web.</p> </li> </ul> <p>Le navigateur Web (Firefox, Chrome, Edge, Opera, Safari etc.) combine alors ces diff\u00e9rents fichiers pour afficher le site Web \u00e0 l'utilisateur. Bien s\u00fbr, d'autres ressources telles que des images ou des vid\u00e9os sont \u00e9galement incluses dans de telles pages.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/","title":"Page statique : HTML &amp; CSS","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#page-statique-html-css","title":"Page statique : HTML &amp; CSS","text":"<p>Concentrons-nous sur le sc\u00e9nario le plus simple, o\u00f9 le serveur envoie une page statique, c'est-\u00e0-dire identique pour tous les clients et qui ne pr\u00e9sente aucune interactivit\u00e9. Une telle page ne n\u00e9cessite qu'un fichier HTML et optionnellement un fichier CSS.</p> <p></p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#les-bases-de-lhtml","title":"Les bases de l'HTML","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#un-langage-de-balisage","title":"Un langage de balisage","text":"<p>L'HTML n'est pas un langage de programmation, mais un langage de balisage utilis\u00e9 pour structurer le contenu des pages Web.</p> <p>Un fichier HTML est compos\u00e9 d'une s\u00e9rie d'\u00e9l\u00e9ments avec lesquels vous pouvez encadrer (ou baliser) diff\u00e9rentes parties du contenu pour les faire appara\u00eetre ou agir d'une certaine mani\u00e8re. Des balises encadrantes peuvent transformer une petite partie de contenu en un lien vers une autre page sur le Web, mettre des mots en italique, etc. Par exemple :</p> Code HTML Rendu <code>T'as les crampt\u00e9s ?</code> T'as les crampt\u00e9s ? <code>T'as les &lt;strong&gt;crampt\u00e9s&lt;/strong&gt; ?</code> T'as les crampt\u00e9s ? <p>Tester les exemples</p> <p>Pour tester un code HTML, il existe deux mani\u00e8res courantes. Soit simplement copier-coller le code HTML dans un fichier <code>ma_page.html</code> puis l'ouvrir avec un navigateur web. Soit utiliser un site web de type \u00ab sandbox \u00bb comme Playcode.io : cette derni\u00e8re m\u00e9thode est plus confortable pour tester rapidement et partager facilement des bouts de code.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#anatomie-dun-element-html","title":"Anatomie d'un \u00e9l\u00e9ment HTML","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#imbrication-des-elements","title":"Imbrication des \u00e9l\u00e9ments","text":"<p>Les \u00e9l\u00e9ments peuvent \u00eatre imbriqu\u00e9s :</p> <pre><code>&lt;p&gt;T'as les &lt;strong&gt;crampt\u00e9s&lt;/strong&gt; ?&lt;/p&gt;\n</code></pre> <p>Question</p> <p>Quelles sont les erreurs dans l'extrait de code HTML suivant ?</p> <pre><code>&lt;/balise1&gt;\n    &lt;balise2&gt;\n    &lt;balise1&gt;\n&lt;/balise2&gt;\n</code></pre>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#elements-bloc-vs-en-ligne","title":"\u00c9l\u00e9ments bloc vs en ligne","text":"<p>Les \u00e9l\u00e9ments de niveau bloc forment un bloc visible sur une page, tandis que les \u00e9l\u00e9ments en ligne ne fait pas appara\u00eetre une nouvelle ligne.</p> <pre><code>&lt;em&gt;Alice&lt;/em&gt;&lt;em&gt;Bob&lt;/em&gt;&lt;em&gt;Charlie&lt;/em&gt;\n\n&lt;p&gt;\u2014 T'as les crampt\u00e9s ?&lt;/p&gt;&lt;p&gt;\u2014 Quoi ?&lt;/p&gt;&lt;p&gt;\u2014 Quoicoubet !&lt;/p&gt;\n</code></pre> <p>Question</p> <p>L'\u00e9l\u00e9ment <code>&lt;p&gt;</code> fait partie de quelle cat\u00e9gorie ? De m\u00eame pour <code>&lt;em&gt;</code> ?</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#une-premiere-page-web-structuree","title":"Une premi\u00e8re page web structur\u00e9e","text":"<p>Voici une page web compl\u00e8te et minimale :</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;!-- (1)! --&gt;\n&lt;html lang=fr&gt; &lt;!-- (2)! --&gt;\n    &lt;head&gt; &lt;!-- (3)! --&gt;                                      \n        &lt;meta charset=\"utf-8\"&gt; \n        &lt;title&gt;Je suis le titre de l'onglet&lt;/title&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt; &lt;!-- (4)! --&gt; \n        &lt;h1&gt;Ma magnifique page web \ud83c\udf08&lt;/h1&gt; &lt;!-- (5)! --&gt; \n        &lt;p&gt; &lt;!-- (6)! --&gt; \n            Un texte tr\u00e8s &lt;strong&gt;int\u00e9ressant&lt;/strong&gt;. \n        &lt;/p&gt;\n        &lt;a href=\"http://www.lyceecivray.net\"&gt;Un super site !&lt;/a&gt; &lt;!-- (7)! --&gt; \n        &lt;!-- Un commentaire... --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>D\u00e9clare quelle version du langage HTML utiliser.</li> <li> <ul> <li>l\u2019\u00e9l\u00e9ment <code>&lt;html&gt;</code> est l\u2019\u00e9l\u00e9ment racine du document. Tous les autres \u00e9l\u00e9ments du document en seront des descendants. </li> <li><code>lang</code> est ce qu'on appelle un attribut. Les \u00e9l\u00e9ments HTML peuvent recevoir des attributs, c'est-\u00e0-dire des informations suppl\u00e9mentaires.</li> </ul> </li> <li><code>&lt;head&gt;</code> fournit des informations et des m\u00e9tadonn\u00e9es sur le document HTML lui-m\u00eame. Il ne repr\u00e9sente pas le contenu visible de la page.</li> <li><code>&lt;body&gt;</code> est l'\u00e9lement qui contient le contenu visible de la page.</li> <li><code>&lt;h1&gt;</code> repr\u00e9sente un titre (header en anglais). Il existe diff\u00e9rents sous-niveaux de titre par ordre d\u00e9croissant d'importance : <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code> etc.</li> <li><code>&lt;p&gt;</code> repr\u00e9sente un paragraphe.</li> <li><code>&lt;a&gt;</code> repr\u00e9sente une ancre qui permet de d\u00e9finir un lien hypertexte absolu ou relatif.</li> </ol> <p>Question</p> <p>R\u00e9pondre \u00e0 l'aide de recherches sur le web :</p> <ol> <li>Quelle est la balise permettant d'ins\u00e9rer une image dans une page web ? Combien d'attributs obligatoires et non-obligatoires comporte-t-elle?</li> <li>Quelles sont les balises pour ins\u00e9rer des listes ordonn\u00e9es et non-ordonn\u00e9es ?</li> <li>Les tabulations sont-elles n\u00e9cessaires dans le code HTML ?</li> <li>R\u00e9aliser une petite page web qui pr\u00e9sente votre album de musique pr\u00e9f\u00e9r\u00e9 (titre, pochette, description, liste des titres, un lien vers le site du groupe etc.). Exemple de page. Un autre projet serait de r\u00e9aliser une page web pr\u00e9sentant la biographie d'une personnalit\u00e9.</li> </ol> <p>On retient</p> <p>On retient que le ficher HTML d\u00e9crit de mani\u00e8re structur\u00e9 le contenu d'une page web gr\u00e2ce \u00e0 un syst\u00e8me de balises.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#styliser-sa-page-avec-du-css","title":"Styliser sa page avec du CSS","text":"<p>Soyons honn\u00eate, le site web cr\u00e9e pr\u00e9c\u00e9demment est objectivement laid. Le langage CSS (Cascading Style Sheets, feuilles de style en cascade) permet de mettre en forme, styliser, une page web comme changer la fonte de caract\u00e8res ou la couleur d'un titre, centrer une image, agencer diff\u00e9rents \u00e9l\u00e9ments sous la forme d'une grille etc.</p> <p>On peut par exemple incorporer du CSS directement dans le fichier HTML en sp\u00e9cifiant l'attribut <code>style</code> :</p> <pre><code>&lt;h1 style=\"color: red;\"&gt;Ma magnifique page web \ud83c\udf08&lt;/h1&gt;\n&lt;p style=\"text-align: center;\"&gt;\n    Un texte tr\u00e8s &lt;strong&gt;int\u00e9ressant&lt;/strong&gt;.\n&lt;/p&gt;\n</code></pre> <p>Toutefois, ceci est une mauvaise pratique, il est pr\u00e9f\u00e9rable de sp\u00e9cifier le style d'une page web dans un fichier CSS s\u00e9par\u00e9 du code HTML. Ainsi plusieurs documents HTML peuvent partager le m\u00eame style ! Toute modification ult\u00e9rieure du style sera ainsi plus ais\u00e9e.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#appliquer-un-style-css","title":"Appliquer un style CSS","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#un-premier-exemple","title":"Un premier exemple","text":"<p>Dans un fichier nomm\u00e9 <code>mon_style.css</code> :</p> mon_style.css<pre><code>body \n{\n    font-family: sans-serif; /* (1)! */\n}\n\nh1 /*(2)!*/\n{\n    color: red;\n}\n</code></pre> <ol> <li> <p>Change la police d'\u00e9criture de l'ensemble du document HTML <code>&lt;body&gt;</code>.</p> </li> <li> <p>Applique un style particulier \u00e0 tous les \u00e9l\u00e9ments <code>&lt;h1&gt;</code>.</p> </li> </ol> <p>Ce fichier CSS peut \u00eatre ensuite appliqu\u00e9 au document HTML au sein de l'\u00e9l\u00e9ment <code>&lt;head&gt;</code> :</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"style.css\"/&gt;\n</code></pre> <p>Question</p> <p>Qu'ajouter au fichier CSS pour que tous les paragraphes soient bleus ?</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#anatomie-dune-regle-css","title":"Anatomie d'une r\u00e8gle CSS","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#proprietes","title":"Propri\u00e9t\u00e9s","text":"<p>On peut modifier plusieurs propri\u00e9t\u00e9s d'un coup :</p> <pre><code>p {\n    color: red;\n    width: 500px;\n    border: 1px solid black;\n}\n</code></pre> <p>Comment centrer une page ? Comment mettre la police en gras ? Comment changer la couleur d'un lien quand le curseur le survole ? Le Web et ChatGPT seront vos plus pr\u00e9cieux alli\u00e9s pour mettre en forme votre page. Et comme pour tous langages, il existe aussi de nombreux cheatsheets pour le CSS.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/2static/#selecteurs","title":"S\u00e9lecteurs","text":"<p>Il existe de nombreuses mani\u00e8res de s\u00e9lectionner des \u00e9l\u00e9ments sp\u00e9cifiques de la page pour modifier leur apparence. Gr\u00e2ce \u00e0 des attributs :  </p> S\u00e9lection par IDS\u00e9lection par Classe <p>Un \u00e9l\u00e9ment HTML peut se voir attribuer un identifiant (id) :</p> HTML<pre><code>&lt;p id=\"rage\"&gt;JE SUIS TR\u00c8S \u00c9NERV\u00c9&lt;/p&gt;\n</code></pre> CSS<pre><code>#rage {\n    font-size: 36px;\n    text-align: center;\n    color: red;\n}\n</code></pre> <p>Un identifiant doit \u00eatre sp\u00e9cifique \u00e0 un unique \u00e9l\u00e9ment !</p> <p>De mani\u00e8re plus g\u00e9n\u00e9rale, plusieurs \u00e9l\u00e9ments HTML peuvent se voir attribuer une classe : </p> HTML<pre><code>&lt;p class=\"rome\"&gt;Senatus populusque romanus&lt;/p&gt;\n</code></pre> CSS<pre><code>.rome {\n    font-family: 'Courier New';\n    font-weight: bold;\n    text-transform: uppercase;\n    border: 3px solid black;\n}\n</code></pre> <p>Cette m\u00e9thode est tr\u00e8s utilis\u00e9e en combinaison avec les \u00e9l\u00e9ments HTML <code>&lt;div&gt;</code> et <code>&lt;span&gt;</code> qui agissent comme des conteneurs universels. </p> <p>Question</p> <p>\u00c9crire un style CSS pour votre page web.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/3js/","title":"Page dynamique : JavaScript","text":""},{"location":"4%20%E2%80%93%20IHM%20Web/3js/#page-dynamique-javascript","title":"Page dynamique : JavaScript","text":"<p>Une page web peut aussi comporter du code JavaScript qui est ex\u00e9cut\u00e9 par le navigateur Web du client. Le langage de programmation JavaScript  (abr\u00e9g\u00e9 JS) permet de modifier dynamiquement le contenu d'une page web, de manipuler et de mettre \u00e0 jour le document HTML, le style CSS et m\u00eame d'interagir avec des \u00e9l\u00e9ments multim\u00e9dias, des formulaires et des donn\u00e9es.</p> <p>Il est important de noter que le serveur Web fournit ici toujours la m\u00eame page web (les m\u00eames fichiers HTML, CSS et JS) aux diff\u00e9rents clients. Le serveur Web peut aussi g\u00e9n\u00e9rer dynamiquement du contenu en utilisant des langages de programmation c\u00f4t\u00e9 serveur (backend) tels que PHP, Python, Ruby, Java, ou des frameworks tels que Node.js et g\u00e9n\u00e9rer une r\u00e9ponse personnalis\u00e9e pour chaque client.</p>"},{"location":"4%20%E2%80%93%20IHM%20Web/3js/#un-premier-script-js","title":"Un premier script JS","text":"Document HTMLScript JS page.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Un premier script&lt;/title&gt;\n    &lt;script src=\"/script.js\"&gt;&lt;/script&gt; &lt;!-- (1)! --&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Une page web extr\u00eamement dynamique&lt;/h1&gt;\n    &lt;p&gt;\n      Pour changer la couleur de l'arri\u00e8re-plan :\n      &lt;button onclick=\"change_couleur()\"&gt;Cliquez ici !&lt;/button&gt; &lt;!-- (2)! --&gt;\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li> <p>On lie le script JavaScript <code>script.js</code> au document HTML. </p> </li> <li> <p>Quand l'utilisateur clique sur le bouton, la fonction <code>change_couleur</code> est ex\u00e9cut\u00e9e.</p> </li> </ol> script.js<pre><code>console.log(\"D\u00e9marrage du script...\"); //(1)! \n\nfunction change_couleur()\n{\n  if (document.body.style.backgroundColor === 'lightblue') {\n      document.body.style.backgroundColor = 'lightcoral';\n  } else {\n      document.body.style.backgroundColor = 'lightblue';\n  }\n}\n</code></pre> <ol> <li>Affiche du texte dans la console.</li> </ol> <p>Question</p> <p>Modifier la page Web pour rajouter plusieurs boutons qui change la couleur de l'arri\u00e8re-plan. On veut aboutir \u00e0 :</p> <pre><code>&lt;button onclick=\"change_couleur('red')\"&gt;Rouge&lt;/button&gt;\n</code></pre>"},{"location":"4%20%E2%80%93%20IHM%20Web/3js/#un-lancer-de-des","title":"\ud83c\udfb2 Un lancer de d\u00e8s","text":"<p>Modifier un \u00e9l\u00e9ment HTML suivant son identifiant</p> page.html<pre><code>&lt;script src=\"script.js\"&gt;&lt;/script&gt;\n\n&lt;p id=\"toto\"&gt;Oui&lt;/p&gt;\n&lt;button onclick=\"modifier_texte()\"&gt;Clic&lt;/button&gt;\n</code></pre> script.js<pre><code>function modifier_texte()\n{\n  var toto = document.getElementById(\"toto\");\n  toto.innerHTML = \"Non\";\n}\n</code></pre> <p>Nombre al\u00e9atoire en JavaScript</p> <p>Pour tirer un entier al\u00e9atoirement en JavaScript entre <code>0</code> et <code>max</code> (extr\u00e9mit\u00e9s incluses) :  </p><pre><code>var resultat = Math.floor(Math.random() * max);\n</code></pre> <p>Question</p> <p>G\u00e9n\u00e9rer une page web qui puisse simuler un lancer de d\u00e8s \u00e0 6 faces (une am\u00e9lioration serait de proposer des d\u00e8s \u00e0 20 faces et 100 faces). Inclure un style CSS !</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/","title":"Le mod\u00e8le d'architecture s\u00e9quentielle (Von Neumann)","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#le-modele-darchitecture-sequentielle-von-neumann","title":"Le mod\u00e8le d'architecture s\u00e9quentielle (Von Neumann)","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#introduction","title":"Introduction","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#les-deux-elements-constitutifs-de-toute-machine","title":"Les deux \u00e9l\u00e9ments constitutifs de toute machine","text":"<p>Une machine manipule des donn\u00e9es. Une machine est donc constitu\u00e9e de deux \u00e9l\u00e9ments principaux :</p> <ul> <li> <p> La m\u00e9moire (RAM) qui stocke les donn\u00e9es, dont les programmes dans le mod\u00e8le de Von Neumann.</p> </li> <li> <p> Le processeur (CPU) qui traite les donn\u00e9es (addition, soustraction, et logique, etc.).</p> </li> </ul> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#le-cycle-instruction","title":"Le cycle instruction","text":"<p>Le cycle de base d'une machine s\u00e9quentielle est le suivant :</p> <ol> <li> <p>Le processeur r\u00e9cup\u00e8re l'instruction \u00e0 ex\u00e9cuter en m\u00e9moire</p> </li> <li> <p>Le processeur d\u00e9code et ex\u00e9cute l'instruction</p> </li> <li> <p>Le processeur passe \u00e0 l'instruction suivante et ainsi de suite</p> </li> </ol> <p>Pour plus de d\u00e9tails.</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#la-memoire","title":"La m\u00e9moire","text":"<p>La m\u00e9moire est un simple tableau d\u00e9coup\u00e9 en octets dont les indices sont appel\u00e9es adresses. Elle est aussi appel\u00e9e m\u00e9moire vive, ou encore RAM pour Random Access Memory, car l'acc\u00e8s \u00e0 une valeur \u00e0 une adresse arbitraire est imm\u00e9diat (de complexit\u00e9 constante).</p> <p> </p> La taille des adresses <p>Une machine est dite 32 bits si une adresse s'\u00e9crit sur 32 bits. On peut donc adresser \\(2^{32}\\) valeurs (octets). La taille maximale d'une telle m\u00e9moire est donc de \\(2^{32}\\) octets, soit \\(8 \\cdot 2^{32}\\) bits, soit 4 Gio.</p> <p>Aujourd'hui les machines sont g\u00e9n\u00e9ralement 64 bits. Quelle serait la taille maximale d'une telle m\u00e9moire ?</p> <p>Les adresses d'une GameBoy sont cod\u00e9es sur 16 bits. Quelle serait la taille maximale d'une telle m\u00e9moire ?</p> <p>Les donn\u00e9es sont transf\u00e9r\u00e9es entre la processeur et la m\u00e9moire via un bus.</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#le-processeur","title":"Le processeur","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#les-registres","title":"Les registres","text":"Le besoin d'une m\u00e9moire de travail <p>Imaginons les 4 instructions suivantes :</p> <ol> <li> <p>Lire l\u2019octet \u00e0 l\u2019adresse  <code>0x781A</code> 42</p> </li> <li> <p>Lire l\u2019octet \u00e0 l\u2019adresse <code>0xEF01</code> 24</p> </li> <li> <p>Additionner ces deux valeurs  66</p> </li> <li> <p>\u00c9crire le r\u00e9sultat \u00e0 l'adresse <code>0x1123</code></p> </li> </ol> <p>O\u00f9 sont stock\u00e9es temporairement les valeurs lues et la somme calcul\u00e9e ? Dans la petite m\u00e9moire de travail int\u00e9gr\u00e9e au processeur, les registres !</p> <p>Le processeur poss\u00e8de un petit nombre de cases m\u00e9moires rapides appel\u00e9es registres qui lui permet de stocker temporairement des donn\u00e9es pour les manipuler.</p> Les registres d'une GameBoy <p>Par exemple, le processeur d'une GameBoy poss\u00e8de 7 registres principaux d'un octet chacun, nomm\u00e9s <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>, <code>E</code>, <code>H</code> et <code>L</code>. Le programme pr\u00e9c\u00e9dent peut s'\u00e9crire plus pr\u00e9cis\u00e9ment :</p> <ol> <li> <p>Lire l'octet \u00e0 l'adresse <code>0x781A</code> et l'affecter au registre <code>A</code></p> </li> <li> <p>Lire l'octet \u00e0 l'adresse <code>0xEF01</code> et l'affecter au le registre <code>B</code></p> </li> <li> <p>Ajouter la valeur du registre <code>B</code> \u00e0 la valeur du registre <code>A</code></p> </li> <li> <p>\u00c9crire la valeur du registre <code>A</code> \u00e0 l'adresse <code>0x1123</code></p> </li> </ol> <p>Un processeur stocke aussi l'adresse de l'instruction en cours d\u2019ex\u00e9cution (ou la suivante selon l'architecture) dans le registre <code>PC</code> (Program Counter en anglais, ou compteur ordinal en fran\u00e7ais) et cette instruction en elle-m\u00eame dans le registre <code>IR</code> (ou <code>CIR</code> pour Current Instruction Register, le Registre d'Instruction).</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#les-deux-unites-alu-et-cu","title":"Les deux unit\u00e9s ALU et CU","text":"<p>Un processeur peut \u00eatre d\u00e9compos\u00e9e en deux unit\u00e9s :</p> <ul> <li> <p> L\u2019Unit\u00e9 Arithm\u00e9tique et Logique (ALU) permet de r\u00e9aliser un petit nombre d\u2019op\u00e9rations simples (addition, soustraction, op\u00e9rateurs logiques, comparisons etc.). Le r\u00e9sultat de ces op\u00e9rations est stock\u00e9 dans un registre appel\u00e9 accumulateur (souvent le registre <code>A</code>).</p> </li> <li> <p> L\u2019Unit\u00e9 de Commande (CU) organise le flot de s\u00e9quencement des instructions. Il g\u00e8re par exemple le registre <code>PC</code> et <code>IR</code>, la r\u00e9cup\u00e9ration des instructions, les instructions de saut etc.</p> </li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#resume","title":"R\u00e9sum\u00e9","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#les-instructions","title":"Les instructions","text":""},{"location":"5%20%E2%80%93%20Architecture/1intro/#code-operation","title":"Code op\u00e9ration","text":"<p>Une instruction est un simple mot binaire cod\u00e9 sur un ou plusieurs octets. Par exemple, si le processeur de la GameBoy lit l'instruction <code>00111100</code> (opcode, ou code op\u00e9ration), il ex\u00e9cutera \"Augmenter de 1 le registre <code>A</code>\". Chaque type de processeur interpr\u00e8te donc ces mots binaires suivant sa propre architecture et l'agencement de ses transistors.</p> <p>Le jeu d'instructions est l'ensemble des instructions qu'un processeur peut ex\u00e9cuter. Par exemple, les instructions du processeur DMG-01 de la GameBoy sont disponibles ici.</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#lassembleur","title":"L'assembleur","text":"<p>On peut associer au code binaire des instructions un code mn\u00e9monique. Par exemple, le code op\u00e9ration <code>00111100</code> peut se lire plus facilement comme <code>INC A</code> (incr\u00e9menter le registre <code>A</code>). C'est l'assembleur, le langage de plus bas niveau qui repr\u00e9sente le langage machine sous une forme lisible par un humain. </p> Code Pok\u00e9mon Bleu <p>Par exemple, on peut r\u00e9cup\u00e9rer quelques instructions du code du jeu Pok\u00e9mon Bleu :</p> <p><code>00011010 00100010 00010011 01111000</code> (ou en hexad\u00e9cimal <code>0x1A 0x22 0x13 0x03 0x78</code>)</p> <p>Ce qui correspond au code assembleur suivant :</p> <pre><code>LD A, (DE) # (1)!\nLD (HL+), A # (2)!\nINC DE # (3)!\nDEC BC # (4)!\nLD A, B # (5)!\n</code></pre> <ol> <li> <p>On lit l'octet \u00e0 l'adresse <code>DE</code> (une adresse de 16 bits) dans la m\u00e9moire et on l'affecte au registre <code>A</code>. On remarque que la GameBoy peut combiner deux registres d'un octet pour former un registre de 16 bits ! <code>LD</code> veut dire Load, charger.</p> </li> <li> <p>On affecte la valeur du registre <code>A</code> dans la m\u00e9moire \u00e0 l'adresse <code>HL</code>, on incr\u00e9mente le registre <code>HL</code> ensuite.</p> </li> <li> <p>On incr\u00e9mente le registre <code>DE</code>.</p> </li> <li> <p>On d\u00e9cr\u00e9mente le registre <code>BC</code>.</p> </li> <li> <p>On affecte <code>B</code> \u00e0 <code>A</code>. </p> </li> </ol> <p>Ce qui est bien plus compr\u00e9hensible !</p> <p>Le langage assembleur permet notamment d'\u00e9crire les valeurs manipul\u00e9es en base d\u00e9cimale, de nommer les adresses (similaire au nom d'une variable !), d'agencer des sections etc. Le programme assembleur convertit alors ce code en code machine de fa\u00e7on quasi-imm\u00e9diate.</p>"},{"location":"5%20%E2%80%93%20Architecture/1intro/#operandes","title":"Op\u00e9randes","text":"<p>Les op\u00e9randes d\u00e9signent les entr\u00e9es des instructions, par exemple l'op\u00e9ration <code>LD</code> (Load, l'affectation) demande deux op\u00e9randes sous la forme <code>LD OP1, OP2</code>, ce qui correspond \u00e0 affecter <code>OP2</code> \u00e0 <code>OP1</code>.</p> <p><code>OP1</code> peut d\u00e9signer un registre, une valeur dans la m\u00e9moire (gr\u00e2ce \u00e0 son adresse) etc. Si <code>OP2</code> peut \u00eatre un registre ou un emplacement m\u00e9moire, elle peut aussi d\u00e9signer une valeur imm\u00e9diate, c'est-\u00e0-dire une valeur qui est soit dans l'instruction-machine en elle-m\u00eame ou une valeur qui suit imm\u00e9diatement l'instruction (d\u00e9pend de l'architecture).</p> Adressage indirect <p>Une valeur peut \u00eatre d\u00e9r\u00e9f\u00e9renc\u00e9e pour qu'elle soit interpr\u00e9t\u00e9e comme une adresse. Par exemple, un registre peut contenir une adresse, on dit alors qu'il est un pointeur, car il pointe vers un emplacement m\u00e9moire. On peut alors acc\u00e9der \u00e0 la valeur \u00e0 cette adresse gr\u00e2ce au d\u00e9r\u00e9f\u00e9rencement :</p> <pre><code>    LD A, B    #(1)!\n    LD A, (B)  #(2)!\n</code></pre> <ol> <li> <p>On affecte \u00e0 <code>A</code>, la valeur <code>B</code>.</p> </li> <li> <p>On affecte \u00e0 <code>A</code>, la valeur \u00e0 l'emplacement d'adresse <code>B</code>.</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/2complements/","title":"Compl\u00e9ments","text":""},{"location":"5%20%E2%80%93%20Architecture/2complements/#complements","title":"Compl\u00e9ments","text":""},{"location":"5%20%E2%80%93%20Architecture/2complements/#lalu-plus-en-details","title":"L'ALU plus en d\u00e9tails","text":"<p>L'unit\u00e9 arithm\u00e9tique et logique est souvent repr\u00e9sent\u00e9e par ce sch\u00e9ma en V :</p> <p> </p> <p>Les drapeaux (flags) sont des r\u00e9sultats secondaires de l'ALU.</p> Les drapeaux de la GameBoy <p>Par exemple, la GameBoy poss\u00e8de 4 drapeaux de 1 bit chacun, qui correspondent aux 4 derniers bits de son registre <code>F</code> :</p> <ul> <li> <p><code>Z</code>(Zero Flag) vaut 1 si le r\u00e9sultat est nul, 0 sinon.</p> </li> <li> <p><code>CY</code> (Carry Flag) vaut 1 s'il y a eu un d\u00e9passement, 0 sinon.</p> </li> <li> <p><code>N</code> (Subtract Flag) vaut 1 si l'op\u00e9ration \u00e9tait une soustraction, 0 sinon.</p> </li> <li> <p><code>HC</code>(Half-Carry Flag) vaut 1 s'il y a eu un d\u00e9passement sur les 4 premiers bits, 0 sinon.</p> </li> </ul> <p>Par exemple, on ex\u00e9cute l'instruction <code>ADD A, B</code> (ajouter le registre <code>B</code> au registre <code>A</code>) avec le registre <code>A = 10010001</code> (\\(145_{10}\\)) et <code>B = 10010001</code> (\\(131_{10}\\)). La fonction demand\u00e9e \u00e0 l'ALU est la fonction d'addition <code>ADD</code>. Math\u00e9matiquement, \\(145 + 131 = 276 = (100010100)_2\\), le r\u00e9sultat s'\u00e9crit donc sur 9 bits. Ainsi le r\u00e9sultat, de taille fixe limit\u00e9e \u00e0 8 bits (la taille du registre de destination <code>A</code>), sera la valeur tronqu\u00e9e <code>00010100</code>. Comme il y a eu un d\u00e9passement, le drapeau de retenue <code>CY</code>sera lev\u00e9, c'est-\u00e0-dire mis \u00e0 1.</p> <p>Quelles seraient les valeurs des autres drapeaux apr\u00e8s une telle op\u00e9ration ?</p> <p>L'ALU est un circuit compos\u00e9 de transistors assembl\u00e9s en portes logiques. Puisque vous avez d\u00e9j\u00e0 r\u00e9alis\u00e9 un additionneur binaire 8 bits avec des portes logiques, vous avez en quelque sorte d\u00e9j\u00e0 con\u00e7u un mini-ALU !</p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#cycles-dhorloge","title":"Cycles d'horloge","text":"<p>Le processeur est cadenc\u00e9 au rythme d'une horloge interne de fr\u00e9quence constante (en Hertz). Un cycle d'horloge correspond \u00e0 la dur\u00e9e d'un cycle, soit l'inverse de la fr\u00e9quence. Par exemple, le CPU de mon ordinateur est cadenc\u00e9 \u00e0 3.3 Ghz, il effectue donc 3.3 milliards de cycles par seconde. Une instruction peut prendre un ou plusieurs cycles pour \u00eatre compl\u00e8tement r\u00e9alis\u00e9e.</p> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#les-differents-types-de-memoire","title":"Les diff\u00e9rents types de m\u00e9moire","text":""},{"location":"5%20%E2%80%93%20Architecture/2complements/#volatilite","title":"Volatilit\u00e9","text":"<p>On distingue deux types de m\u00e9moire :</p> <ul> <li> <p>La m\u00e9moire volatile si la m\u00e9moire perd son contenu lorsqu'elle n'est plus aliment\u00e9e.</p> </li> <li> <p>La m\u00e9moire permanente si la m\u00e9moire converse son contenu lorsqu'elle n'est plus aliment\u00e9e.</p> </li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#memoire-de-stockage","title":"M\u00e9moire de Stockage","text":"<p>Si la m\u00e9moire RAM vue jusqu'\u00e0 pr\u00e9sent est volatile, les m\u00e9moires permanentes comme les disques durs (HDD) ou les SDD sont n\u00e9cessaires pour stocker des donn\u00e9es une fois la machine \u00e9teinte. On les appelle m\u00e9moire de stockage (ou m\u00e9moire de masse) pour cette raison. Ces m\u00e9moires visent \u00e0 obtenir une capacit\u00e9 de stockage \u00e9lev\u00e9e \u00e0 faible co\u00fbt, avec la contrepartie d'\u00eatre moins rapides.</p> La m\u00e9moire morte (ROM) <p>Une m\u00e9moire de stockage peut \u00eatre de type ROM (Read Only Memory, ou m\u00e9moire morte), qui ne peut \u00eatre que lue (pas d'\u00e9criture possible) : les cartouches de jeu de la GameBoy en sont un bon exemple. Les ROM servent surtout \u00e0 stocker des programmes.</p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#caches-du-processeur","title":"Caches du processeur","text":"<p>Au sein du processeur, il existe des m\u00e9moires interm\u00e9diaires entre les registres et la m\u00e9moire RAM, les caches. Ils permettent de ne pas limiter les performances en obligeant le processeur \u00e0 attendre (on parle de goulot d'\u00e9tranglement) la r\u00e9cup\u00e9ration des donn\u00e9es dans la RAM. Typiquement, lorsque vous acc\u00e9der \u00e0 une valeur dans la RAM, une tranche de celle-ci est copi\u00e9e dans ces caches sous l'hypoth\u00e8se probable que les valeurs que vous allez lire par la suite se situent dedans.</p> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#ordres-de-grandeur","title":"Ordres de grandeur","text":"<p>Les ordres de grandeur typiques pour chaque type de m\u00e9moire pour un ordinateur actuel (ma machine) :</p> M\u00e9moire Volatilit\u00e9 Capacit\u00e9 D\u00e9bit Latence Co\u00fbt  Registres Volatile 32 ko 500 Go/s 1 ns  Caches Volatile 512 ko ~ 16 Mo 300 Go/s 10 ns  RAM Volatile 16 Go 50 Go/s 60 ns  Stockage Permanent 1 To 500 Mo/s 100 \u00b5s <p>Les donn\u00e9es se d\u00e9placent \u00e0 travers ces diff\u00e9rentes m\u00e9moires via des bus dans ce m\u00eame ordre : Stockage  RAM  Caches  Registres</p> Latence <p>La latence d'une m\u00e9moire est le temps n\u00e9cessaire pour qu'une donn\u00e9e soit r\u00e9cup\u00e9r\u00e9e depuis cette m\u00e9moire. </p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#architecture-monoprocesseur-et-multiprocesseur","title":"Architecture monoprocesseur et multiprocesseur","text":""},{"location":"5%20%E2%80%93%20Architecture/2complements/#la-loi-de-moore","title":"La loi de Moore","text":"<p>La loi de Moore est une observation empirique formul\u00e9e par Gordon Moore en 1965, qui \u00e9non\u00e7ait que le nombre de transistors dans les microprocesseurs doubles environ tous les deux ans. Cela signifie que la puissance de traitement des ordinateurs augmente \u00e9galement de mani\u00e8re exponentielle au fil du temps.</p> <ul> <li> <p>En 1971, le premier processeur produit par Gordon Moore, l'Intel 4004, \u00e9tait cadenc\u00e9 \u00e0 750 kHz et contenait 2300 transistors de 10 \u00b5m (gravure).</p> </li> <li> <p>En 2023, l'Intel Core i9-12900K cadenc\u00e9 \u00e0 5.2 GHz contient 3 milliards de transistors de 7 nm.</p> </li> </ul> <p> </p> Chaque point repr\u00e9sente ici un processeur entre 2000 et 2023. <p>H\u00e9las, l'augmentation de la fr\u00e9quence devenant techniquement de plus en plus difficile (probl\u00e8me de surchauffe) et la miniaturisation des transistors se heurtant \u00e0 la physique quantique, une nouvelle id\u00e9e permet de poursuivre la loi de Moore, celle d'ajouter plusieurs processeurs au sein d'une m\u00eame machine.</p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#architecture-multiprocesseur-et-processeur-multicurs","title":"Architecture multiprocesseur et processeur multic\u0153urs","text":"<p>Une architecture monoprocesseur est une architecture ne comprenant qu'un seul processeur. D'un autre c\u00f4t\u00e9, une architecture multiprocesseur est une architecture dans laquelle plusieurs processeurs distincts fonctionnent simultan\u00e9ment pour ex\u00e9cuter des instructions.</p> <p>Les processeurs d'aujourd'hui ont plusieurs unit\u00e9s de traitement appel\u00e9es c\u0153urs, chacune avec ses propres registres, unit\u00e9 arithm\u00e9tique et logique, unit\u00e9 de commande et une m\u00e9moire cache (L1). Bien que ces c\u0153urs partagent aussi certaines m\u00e9moires caches (L2, L3), ils peuvent ex\u00e9cuter des instructions ind\u00e9pendamment les uns des autres, permettant de traiter plusieurs instructions simultan\u00e9ment. Un processeur multic\u0153ur est donc une forme d'architecture multiprocesseur qui utilise plusieurs unit\u00e9s de traitement sur une seule puce, tandis que les architectures multiprocesseur traditionnelles utilisent plusieurs processeurs physiques distincts.</p> <p> </p> Zoom sur une puce d'un processeur. <p>L'ajout de processeurs ou de c\u0153urs ne garantit pas automatiquement de meilleures performances. Les programmes qui ne sont pas con\u00e7ues pour ces architectures ne b\u00e9n\u00e9ficieront que peu, voire pas du tout, d'une augmentation du nombre de c\u0153urs. En effet, les c\u0153urs doivent partager l'acc\u00e8s \u00e0 la m\u00e9moire vive et \u00e0 la m\u00e9moire cache, ce qui peut entra\u00eener des ralentissements. La programmation parall\u00e8le et la programmation concurrente sont deux approches de programmation qui permettent de tirer parti de toutes les ressources de calculs de telles architectures.</p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#et-python-dans-tout-ca","title":"Et Python dans tout \u00e7a ?","text":""},{"location":"5%20%E2%80%93%20Architecture/2complements/#langages-de-bas-et-haut-niveau","title":"Langages de bas et haut niveau","text":"<p>Le langage machine et l'assembleur sont des langages de bas niveau qui sont proches du langage machine et qui n\u00e9cessitent une compr\u00e9hension plus approfondie de l'architecture mat\u00e9rielle de l'ordinateur. Ces langages primitifs sont souvent plus difficiles \u00e0 lire et \u00e0 comprendre pour les programmeurs.</p> <p>Les langages de haut niveau (Python, C, Java etc.), en revanche, sont des langages de programmation qui sont con\u00e7us pour \u00eatre plus proches du langage naturel humain, ce qui les rend plus faciles \u00e0 lire et \u00e0 comprendre pour les programmeurs. Ces langages sont \u00e9galement con\u00e7us pour \u00eatre plus abstraits, c'est-\u00e0-dire qu'ils se concentrent sur les concepts et les structures de haut niveau, plut\u00f4t que sur les d\u00e9tails de bas niveau.</p> <p>Si certains langages de programmation peuvent facilement se positionner sur un spectre allant de bas niveau \u00e0 haut niveau, d'autres, tels que le C++, fusionnent ces deux approches.</p>"},{"location":"5%20%E2%80%93%20Architecture/2complements/#langages-compiles-et-interpretes","title":"Langages compil\u00e9s et interpr\u00e9t\u00e9s","text":"<p>Une fois qu'un script Python est ex\u00e9cut\u00e9, il est traduit au fur et \u00e0 mesure de son ex\u00e9cution en code machine, c'est un langage dit interpr\u00e9t\u00e9.</p> <p>En revanche, certains langages sont dit compil\u00e9s (comme le C), ce qui signifie que le code source est enti\u00e8rement traduit en code machine avant son ex\u00e9cution.</p> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/3sim/","title":"TP Simulation d'une machine &amp; Assembleur","text":""},{"location":"5%20%E2%80%93%20Architecture/3sim/#tp-simulation-dune-machine-assembleur","title":"TP Simulation d'une machine &amp; Assembleur","text":"<p>Liens</p> <ul> <li>Document R\u00e9ponse :  Notebook Capytale 86dd-1467306</li> <li>Simulateur assembleur d\u00e9velopp\u00e9 par Peter L. Higgison</li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#un-simulateur-basique","title":"Un simulateur basique","text":"<p>On se propose de mettre en pratique les connaissance acquises gr\u00e2ce au simulateur d\u00e9velopp\u00e9 par Peter L. Higgison. Ce simulateur est bas\u00e9 sur l'architecture de Von Neumann \u00e9tudi\u00e9 pr\u00e9c\u00e9demment, on y retrouve donc un processeur, ses registres et une m\u00e9moire.</p> <p>L'interface de ce simulateur est d\u00e9coup\u00e9 en quatre grandes parties :</p> <ul> <li> <p> Le programme o\u00f9 vous allez saisir vos diff\u00e9rents programmes en assembleur.</p> </li> <li> <p> Le processeur avec l'\u00e9tat de ses diff\u00e9rents registres (notamment l'adresse de la prochaine instruction <code>PC</code>, ses registres de travail <code>R0</code> \u00e0 <code>R12</code>, ses drapeaux <code>N Z C V</code>).</p> </li> <li> <p> La m\u00e9moire dont vous pouvez modifier la repr\u00e9sentation des valeurs (hexad\u00e9cimale, binaire, d\u00e9cimal etc.)</p> </li> <li> <p> Les entr\u00e9es / sorties qui permet \u00e0 la machine de communiquer avec le monde ext\u00e9rieur !</p> </li> </ul> <p>Des valeurs de 32 bits ?</p> <p>Comme vous pouvez le constater, une cellule de la m\u00e9moire du simulateur correspond \u00e0 32 bits. La m\u00e9moire est pourtant bien d\u00e9coup\u00e9e en octets, les adresses font bien r\u00e9f\u00e9rence \u00e0 des octets. On ne pourra h\u00e9las utiliser que les adresses divisibles par 4 dans notre programme.</p> Questions 1 <ol> <li> <p>Les adresses de la m\u00e9moire de cette machine vont de <code>0x0000</code>\u00e0 <code>0xFFFFF</code>. Quelle est la taille de la m\u00e9moire ?</p> </li> <li> <p>Quelle est la taille en bits d'un registre du processeur dans cette simulation ?</p> </li> </ol> <p>\u00c0 vos claviers, nous allons manger un peu d'assembleur.</p>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#un-premier-programme","title":"Un premier programme","text":"<p>Copier ce programme (bouton EDIT) :</p> <pre><code>    MOV R2, #0xABCD ; (1)!\n    MOV R7, #0x1234\n    ADD R0, R2, R7 ; (2)!\n    HALT ; (3)!\n</code></pre> <ol> <li> <p><code>R2</code> <code>0xABCD</code> Le symbole <code>#</code> permet de pr\u00e9ciser une valeur imm\u00e9diate. <code>MOV</code> vient du mot anglais move, d\u00e9placer.</p> </li> <li> <p><code>R0</code> <code>R2</code> + <code>R7</code></p> </li> <li> <p>Permet d'arr\u00eater (ou mettre en pause) l'ex\u00e9cution du programme.</p> </li> </ol> <p>Lorsque le programme est assembl\u00e9 (bouton SUBMIT), le programme est stock\u00e9 dans la m\u00e9moire, pr\u00eat \u00e0 \u00eatre ex\u00e9cut\u00e9 :</p> <pre><code>0xe30a2bcd 0xe3017234 0xe0820007 0xe1000070\n</code></pre> Questions 2 <ol> <li> <p>Ex\u00e9cuter ce programme (). Que fait ce programme ? V\u00e9rifier que le r\u00e9sultat obtenu est correct en passant \u00e0 une repr\u00e9sentation d\u00e9cimale (non-sign\u00e9).</p> </li> <li> <p>Sur combien de bits est stock\u00e9e une instruction ? Quel est le code machine de l'instruction <code>HALT</code> ?</p> </li> <li> <p>Que vaut le Compteur de Programme (<code>PC</code>) au d\u00e9but et \u00e0 la fin de l'ex\u00e9cution du programme ? De combien augmente-t-il \u00e0 chaque \u00e9tape ( pour reset le simulateur,  pour ex\u00e9cuter le programme pas \u00e0 pas) ? Justifier.</p> </li> <li> <p>En analysant attentivement le code machine des deux premi\u00e8res instructions <code>MOV</code> indiquer o\u00f9 se trouve l'information du registre de destination et celle de la valeur imm\u00e9diate dans le code machine.</p> </li> <li> <p>Quelle serait l'instruction pour incr\u00e9menter un registre ?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#deplacer-des-valeurs-entre-les-registres-et-la-memoire","title":"D\u00e9placer des valeurs entre les registres et la m\u00e9moire","text":"Instruction Exemples Signification <code>MOV R, &lt;Op\u00e9rande2&gt;</code> <code>MOV R0, #25</code> <code>MOV R0, R1</code> <code>R</code> <code>&lt;Op\u00e9rande2&gt;</code> Permet d'affecter une valeur \u00e0 un registre, ou copier un registre dans un autre. <code>LDR R, &lt;Adresse&gt;</code> <code>LDR R0, 0xFC</code> <code>R</code> <code>M\u00e9moire[&lt;Adresse&gt;]</code>  Permet d'affecter une valeur (32 bits) depuis son un emplacement m\u00e9moire \u00e0 un registre. <code>STR R, &lt;Adresse&gt;</code> <code>STR R1, 120</code> <code>M\u00e9moire[&lt;Adresse&gt;]</code> <code>R</code> Permet d'affecter la valeur d'un registre \u00e0 un emplacement de la m\u00e9moire. Questions 3 <ol> <li> <p>\u00c9crire un programme qui affecte la valeur 42 \u00e0 l'emplacement d'adresse <code>0xA4</code>. \u00c0 la fin du programme, la ligne <code>0x000a</code> de la m\u00e9moire doit \u00eatre :</p> <p><code>0x000a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a042\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00</code></p> </li> <li> <p>Modifier ce programme pour qu'il affecte ensuite la valeur 13 \u00e0 l'emplacement suivant : </p> <p><code>0x000a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a042\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a013\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00</code></p> </li> <li> <p>Modifier le programme pour qu'il ensuite \u00e9change de place les valeurs de ces deux emplacements. Le programme doit marcher peu importe les valeurs initiales (ici 42 et 13) et peu importe les valeurs courantes des registres :</p> <p><code>0x000a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a013\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a042\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00</code></p> </li> <li> <p>Que fait l'instruction <code>LDR R0, .InputNum</code> ?</p> </li> </ol> <p>Adressage indirect</p> <p>Un registre <code>R</code> peut stocker une adresse (le registre est alors appel\u00e9 pointeur). On \u00e9crit <code>[R]</code> pour r\u00e9cup\u00e9rer la valeur \u00e0 cette adresse dans la m\u00e9moire. Par exemple <code>LDR R0, [R1]</code> affecte \u00e0 <code>R0</code> la valeur \u00e0 l'adresse <code>R1</code> (et non la valeur de <code>R1</code> en elle-m\u00eame).</p>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#les-labels","title":"Les labels","text":"<p>Un label (ou \u00e9tiquette en fran\u00e7ais) permet de nommer symboliquement une adresse. </p> <pre><code>    MOV R0, #0\nmon_label: ;(1)!\n    ADD R0, R0, #1\n    B mon_label ;(2)!\n    HALT\n</code></pre> <ol> <li> <p><code>mon_label</code> d\u00e9signe ici l'adresse de l'instruction suivante <code>ADD R0, R0, #1</code>, c'est-\u00e0-dire <code>0x04</code>.</p> </li> <li> <p><code>B</code> est un saut (ou branchement) inconditionnel, il permet de sauter \u00e0 une instruction particuli\u00e8re gr\u00e2ce \u00e0 son adresse (<code>mon_label</code>).</p> </li> </ol> <p>Saut relatif</p> <p>On peut sauter \u00e0 un label, mais aussi un nombre d'instructions relativement \u00e0 sa position. Par exemple : <code>B .+3</code> sautera jusqu'\u00e0 la 3\u00e8me prochaine instruction (en ignorant donc les 2 instructions entre). <code>B .-5</code> sautera 5 instructions en arri\u00e8re.</p> Questions 4 <ol> <li> <p>Ex\u00e9cuter ce programme pas \u00e0 pas. Que fait-il ?</p> </li> <li> <p>Modifier le programme pour utiliser un saut relatif \u00e0 la place.</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#les-conditions-et-les-boucles","title":"Les conditions et les boucles","text":"<p>Si les instructions <code>if</code> et <code>while</code> n'existent pas en assembleur, il existe \u00e0 la place les sauts conditionnels. On compare deux valeurs \u00e0 tester, et suivant le r\u00e9sultat de cette comparaison on saute ou non \u00e0 une ligne de code (gr\u00e2ce \u00e0 un label ou relativement).</p>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#comparaison","title":"Comparaison","text":"<p>On compare une valeur d'un registre avec une autre valeur gr\u00e2ce \u00e0 l'instruction <code>CMP</code> (compare). Le r\u00e9sultat de cette comparaison est stock\u00e9 dans les diff\u00e9rents drapeaux (<code>N Z C V</code>) du processeur.</p> <pre><code>    MOV R0, #10\n    CMP R0, #20 ;(1)!\n    HALT\n</code></pre> <ol> <li>Compare la valeur du registre <code>R0</code> avec la valeur imm\u00e9diate 20.</li> </ol> Questions 5 <ol> <li> <p>Que valent les drapeaux (status bits dans le simulateur) <code>N Z C V</code> avant d\u2019ex\u00e9cuter le programme ?</p> </li> <li> <p>Ex\u00e9cuter ce programme. Noter la valeur des diff\u00e9rents drapeaux.</p> </li> <li> <p>De m\u00eame en modifiant la valeur qui est compar\u00e9e \u00e0 <code>R0</code> \u00e0 5 puis \u00e0 10.</p> </li> <li> <p>Conclure.</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#sauts-conditionnels","title":"Sauts conditionnels","text":"<p>Une fois les drapeaux modifi\u00e9s par <code>CMP</code>, on effectue un saut conditionnel suivant le r\u00e9sultat de la comparaison gr\u00e2ce aux instructions :</p> Instruction Symbole Signification <code>BEQ label</code> \\(=\\) Branch if EQqual <code>BNE label</code> \\(\\ne\\) Branch if Not EQqual <code>BLT label</code> \\(&lt;\\) Branch if Less Than <code>BGT label</code> \\(&gt;\\) Branch if Greater Than <p>Modifions le code de la section pr\u00e9c\u00e9dente, en transformant le saut inconditionnel <code>B</code> en un saut conditionnel :</p> <pre><code>    MOV R0, #0\nmon_label:\n    ADD R0, R0, #1\n    CMP R0, #10\n    BLT mon_label\n    HALT\n</code></pre> Questions 6 <ol> <li> <p>Ex\u00e9cuter ce programme pas \u00e0 pas. Que fait-il ?</p> </li> <li> <p>Modifier le programme pour faire la multiplication \\(7 \\times 8\\) dans le registre <code>R0</code>.</p> </li> <li> <p>Modifier le programme pour qu'il demande deux nombres \u00e0 l'utilisateur (gr\u00e2ce \u00e0 <code>LDR R, .InputNum</code>) et effectue la multiplication de ces deux nombres.</p> </li> <li> <p>\u00c9crire le programme qui demande un nombre \\(n\\) \u00e0 l'utilisateur et affiche \\(n!\\) (factorielle). Pour afficher le contenu d'un registre <code>R</code> dans la console, on utilise l'instruction <code>STR R, .WriteUnsignedNum</code>.</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/3sim/#hello-world","title":"Hello, World!","text":"<p>Raghu Venkatesh</p> <p>If you can write \"hello world\" you can change the world.</p> <p>Je n'allais tout de m\u00eame pas vous apprendre l'assembleur sans vous faire afficher \u00ab Hello, World. \u00bb dans la console ! Pour afficher un message dans la console, il faut d'abord le stocker dans la m\u00e9moire :</p> <pre><code>mon_message:\n    .ASCIZ \"Hello, World!\"\n</code></pre> Une cha\u00eene de caract\u00e8res dans la m\u00e9moire <p>Regardons la m\u00e9moire apr\u00e8s avoir assembl\u00e9 le code pr\u00e9c\u00e9dent :</p> <pre><code>0x6c6c6548\u00a0\u00a00x57202c6f\u00a0\u00a00x646c726f\u00a0\u00a00x00000021\n</code></pre> <p>Les caract\u00e8res sont cod\u00e9s en ASCII donc sur un octet, on d\u00e9coupe ainsi :</p> <pre><code>6c\u00a06c\u00a065\u00a048\u00a0\u00a0\u00a0\u00a057\u00a020\u00a02c\u00a06f\u00a0\u00a0\u00a0\u00a064\u00a06c\u00a072\u00a06f\u00a0\u00a0\u00a0\u00a000\u00a000\u00a000\u00a021\n</code></pre> <p>On regarde enfin la table ASCII pour d\u00e9terminer les caract\u00e8res correspondants :</p> <pre><code>l\u00a0\u00a0l\u00a0\u00a0e\u00a0\u00a0H \u00a0\u00a0\u00a0\u00a0W\u00a0\u00a0\u00a0\u00a0\u00a0,\u00a0\u00a0o\u00a0\u00a0\u00a0\u00a0\u00a0d\u00a0\u00a0l\u00a0\u00a0r\u00a0\u00a0o\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\0\u00a0!\n</code></pre> <p>Pourquoi les caract\u00e8res sont renvers\u00e9s ? La notion de boutisme.</p> <p>On laissera ces donn\u00e9es \u00e0 la fin du programme. On affecte la premi\u00e8re adresse de ce message dans un registre, comme <code>R0</code>, puis on utilise <code>STR</code> pour l'envoyer \u00e0 la console :</p> <pre><code>    MOV R0, #mon_message ;(1)!\n    STR R0, .WriteString ;(2)!\n    HALT\n\nmon_message:\n    .ASCIZ \"Hello, World!\"\n</code></pre> <ol> <li> <p>On copie l'adresse de d\u00e9but de <code>mon_message</code>, soit <code>0xC</code>.</p> </li> <li> <p>On envoie l'adresse <code>0xC</code> \u00e0 la console qui va ensuite lire le contenu du message.</p> </li> </ol> Questions 7 <ol> <li> <p>La console ne re\u00e7oit que l'adresse du d\u00e9but du message. Or, le message s'\u00e9tale sur plusieurs emplacements m\u00e9moire. Comment la console fait-elle pour savoir quand s'arr\u00eater ?</p> </li> <li> <p>\u00c9crire le programme qui demande \u00e0 l'utilisateur son \u00e2ge et affiche s'il est majeur ou non. </p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/4os/","title":"Les syst\u00e8mes d'exploitation","text":""},{"location":"5%20%E2%80%93%20Architecture/4os/#les-systemes-dexploitation","title":"Les syst\u00e8mes d'exploitation","text":""},{"location":"5%20%E2%80%93%20Architecture/4os/#definition","title":"D\u00e9finition","text":"<p>Un syst\u00e8me d'exploitation (ou Operating System, OS) est un logiciel syst\u00e8me, un ensemble de programmes, qui sert d'interm\u00e9diaire entre les applications (les programmes, le software) et les diff\u00e9rents composants mat\u00e9riels d'une machine (le hardware), tel que le processeur, la m\u00e9moire, les disques durs, les p\u00e9riph\u00e9riques entr\u00e9e/sortie etc.</p> <p>L'OS fournit ainsi une interface abstraite et standardis\u00e9e aux applications. Cette interface leur permet de communiquer avec le mat\u00e9riel sans avoir besoin de prendre en compte les d\u00e9tails sp\u00e9cifiques de ce dernier.</p> <p>Au d\u00e9marrage de la machine, l'OS est le premier programme \u00e0 \u00eatre ex\u00e9cut\u00e9 et le seul \u00e0 rester en permanence en ex\u00e9cution, c'est le \u00ab chef d'orchestre \u00bb de tous les programmes.</p> <p>Windows, Linux, Android, MacOS et iOS sont les syst\u00e8mes d'exploitation les plus utilis\u00e9s \u00e0 ce jour. </p> <p> </p> Parts de march\u00e9 des syst\u00e8mes d'exploitation (F\u00e9vrier 2023)"},{"location":"5%20%E2%80%93%20Architecture/4os/#le-noyau","title":"Le noyau","text":"<p>Le noyau (ou kernel) est une composante centrale du syst\u00e8me d'exploitation qui assure la gestion des ressources mat\u00e9rielles et logicielles de l'ordinateur. Le kernel est responsable de l'interaction directe avec le hardware de l'ordinateur.</p> <p> </p> <p>Quelques-unes des principales fonctionnalit\u00e9s du noyau :</p> Fonctionnalit\u00e9 Description Gestion de la m\u00e9moire G\u00e8re la m\u00e9moire RAM allou\u00e9e aux programmes en cours d'ex\u00e9cution. Gestion des processus et des threads Permet l'ex\u00e9cution simultan\u00e9e de plusieurs programmes (processus) en r\u00e9partissant les t\u00e2ches \u00e0 ex\u00e9cuter par le processeur. Gestion des entr\u00e9es/sorties Permet aux  programmes en cours d'ex\u00e9cution de communiquer de mani\u00e8re contr\u00f4l\u00e9e avec les p\u00e9riph\u00e9riques mat\u00e9riels (clavier, m\u00e9moire de stockage, carte r\u00e9seau, \u00e9cran etc.). Gestion des droits G\u00e8re les droits d'acc\u00e8s aux ressources syst\u00e8me et aux fichiers. <p>Outre le noyau, un syst\u00e8me d'exploitation est constitu\u00e9 de plusieurs composants cl\u00e9s, comme la gestion des fichiers, les biblioth\u00e8ques syst\u00e8me, les utilitaires syst\u00e8me, l'interface graphique utilisateur (GUI) etc.</p> Les appels syst\u00e8me <p>Afin de rendre moins abstrait la relation entre les programmes et le syst\u00e8me d'exploitation, analysons ce petit programme en C :</p> <p></p> Code source Code compil\u00e9 <pre><code>#include &lt;cstdio&gt;\n\nint main()\n{\n    printf(\"Hello, World.\");\n}\n</code></pre> <p></p> <pre><code>.LC0:\n        .string \"Hello, World.\"\nmain:\n        push    rbp\n        mov     rbp, rsp\n        mov     edi, OFFSET FLAT:.LC0\n        mov     eax, 0\n        call    printf\n        mov     eax, 0\n        pop     rbp\n        ret\n</code></pre> <p></p> <p>L'instruction qui est en charge d'afficher le message dans la console <code>call printf</code> est ce que l'on nomme un appel syst\u00e8me, le programme appelle ici la fonction <code>printf</code> fournie par l'OS. Un appel syst\u00e8me permet au programme de demander \u00e0 l'OS un service sp\u00e9cifique, tel qu'afficher un message avec <code>printf</code>, allouer de la m\u00e9moire avec <code>malloc</code>, ouvrir un fichier avec <code>fopen</code>, cr\u00e9er un processus etc. </p>"},{"location":"5%20%E2%80%93%20Architecture/4os/#histoire-des-systemes-dexploitation","title":"Histoire des syst\u00e8mes d'exploitation","text":"<p>Deux excellentes vid\u00e9os r\u00e9alis\u00e9es par l'Institut Mines-T\u00e9l\u00e9com :</p> <ul> <li> <p>Gen\u00e8se des syst\u00e8mes d'exploitation</p> </li> <li> <p>L'histoire d'UNIX</p> </li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/4os/#systeme-dexploitation-libre-et-proprietaire","title":"Syst\u00e8me d'exploitation libre et propri\u00e9taire","text":"<p>On distingue deux types de logiciels :</p> <ul> <li> <p>Les logiciels propri\u00e9taires dont le code source est la propri\u00e9t\u00e9 exclusive de l'entreprise ou de l'individu qui l'a cr\u00e9\u00e9. Les utilisateurs n'ont pas acc\u00e8s au code source du logiciel, ils ne peuvent donc ni le modifier, ni examiner ce que fait pr\u00e9cis\u00e9ment le logiciel en arri\u00e8re-plan. Ces logiciels sont g\u00e9n\u00e9ralement payants. </p> </li> <li> <p>Le code source d'un logiciel libre est en revanche disponible publiquement. Les utilisateurs peuvent l\u00e9galement l'utiliser \u00e0 n'importe quelle fin, l'\u00e9tudier, le copier, le modifier et le distribuer librement. Ils peuvent aussi contribuer \u00e0 l'am\u00e9lioration du logiciel en apportant des modifications \u00e0 son code source, en signalant et en r\u00e9solvant des probl\u00e8mes etc. ce qui profite \u00e0 l'ensemble de la communaut\u00e9 des utilisateurs du logiciel libre.</p> </li> </ul> <p>Windows, MacOS, iOS, Android sont des syst\u00e8mes d'exploitation propri\u00e9taires. Linux, OpenBSD, Ubuntu, Debian, LineageOS etc. sont des exemples de syst\u00e8mes d'exploitation libres.</p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/","title":"TP Shell","text":""},{"location":"5%20%E2%80%93%20Architecture/5shell/#tp-shell","title":"TP Shell","text":"<p>Liens</p> <ul> <li>Document R\u00e9ponse :  Notebook Capytale 91f2-1517386</li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#introduction","title":"Introduction","text":"<p>Les premiers syst\u00e8mes d'exploitation \u00e9taient d\u00e9pourvus d'interface graphique. Il n'y avait pas de fen\u00eatres ni de curseur de souris pour interagir avec l'ordinateur. Au lieu de cela, les utilisateurs devaient communiquer avec le syst\u00e8me d'exploitation en utilisant des lignes de commandes, qui sont du texte saisi via un programme appel\u00e9 shell. Le Shell est une interface entre le noyau et l'utilisateur :</p> <p> </p> <p>Le shell permet \u00e0 l'utilisateur d'ex\u00e9cuter des commandes et des scripts pour interagir avec le syst\u00e8me d'exploitation (ex\u00e9cuter des programmes, g\u00e9rer des fichiers et des r\u00e9pertoires, contr\u00f4ler les processus en cours etc.). Le shell est toujours disponible dans les OS actuels et encore tr\u00e8s utilis\u00e9 de nos jours. On se propose dans ce TP de d\u00e9couvrir les commandes de base du shell.</p> Diff\u00e9rence entre shell et terminal <p>Le terminal et le shell sont souvent confondus dans le langage courant.</p> <ul> <li> <p>Le terminal est un programme permet \u00e0 l'utilisateur de saisir des commandes et de les ex\u00e9cuter en mode texte, sans avoir besoin d'une interface graphique. Il ex\u00e9cute par d\u00e9faut un shell.</p> </li> <li> <p>Le shell est le programme qui s'ex\u00e9cute \u00e0 l'int\u00e9rieur du terminal et qui interpr\u00e8te les commandes saisies par l'utilisateur et qui permet d'interagir avec le syst\u00e8me d'exploitation.</p> </li> </ul> <p>Comme il n'est g\u00e9n\u00e9ralement pas possible d'interagir avec le shell sans utiliser un terminal, les deux termes sont confondus. Le terminal est l'interface du shell qui est l'interface du noyau qui est l'interface du mat\u00e9riel. Vous suivez ?</p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#larborescence-des-dossiers-et-des-fichiers","title":"L'arborescence des dossiers et des fichiers","text":"<p>Dans les syst\u00e8mes d'exploitation bas\u00e9s sur UNIX (par exemple Linux ou macOS), nous avons un syst\u00e8me de fichiers et de dossiers en arborescence :</p> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#chemins-absolus","title":"Chemins absolus","text":"<p>On peut acc\u00e9der \u00e0 n'importe quel dossier ou fichier gr\u00e2ce \u00e0 un chemin. Par exemple, <code>/home/joel/images/photo1.jpg</code> permet d'acc\u00e9der au fichier <code>photo1.jpg</code>. Quand le chemin part de le racine <code>/</code>, on parle de chemin absolu.</p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#chemins-relatifs","title":"Chemins relatifs","text":"<p>On peut aussi acc\u00e9der \u00e0 un fichier ou \u00e0 un dossier gr\u00e2ce \u00e0 un chemin relatif. Par exemple, si l'on se situe dans le dossier <code>/home/joel</code>, on peut acc\u00e9der \u00e0 <code>luge.mp4</code> gr\u00e2ce au chemin relatif <code>./images/ski/luge.mp4</code> : <code>.</code> fait r\u00e9f\u00e9rence au r\u00e9pertoire (dossier) courant. Il est d'ailleurs facultatif.</p> <p>Il est courant aussi de vouloir revenir en arri\u00e8re. Par exemple, si l'on se situe dans le dossier <code>/home/joel</code> et que l'on souhaite acc\u00e9der \u00e0 <code>rapport.txt</code>, on \u00e9crit alors <code>../ellie/documents/rapport.txt</code> : <code>..</code> fait r\u00e9f\u00e9rence au r\u00e9pertoire parent.</p> Questions 1 <ol> <li> <p>Quel est le chemin absolu pour acc\u00e9der au fichier <code>hello.py</code> ? </p> </li> <li> <p>On se situe dans le dossier <code>travail</code> de ce fichier <code>hello.py</code>. Quel est alors le chemin relatif \u00e0 ce r\u00e9pertoire pour acc\u00e9der \u00e0 <code>photo1.jpg</code> ? </p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#les-commandes-de-base","title":"Les commandes de base","text":"<p>D\u00e9couvrons les commandes UNIX les plus courantes gr\u00e2ce \u00e0 au petit jeu Terminux ! Pr\u00eat pour l'aventure ?</p> <p> </p> <p>Dans ce jeu, les diff\u00e9rents lieux correspondent \u00e0 des dossiers et les diff\u00e9rents objets et personnages \u00e0 des fichiers !</p> Questions 2 <p>Au fur et \u00e0 mesure de l'aventure :</p> <ol> <li> <p>Noter les commandes d\u00e9couvertes et leur fonction :</p> Nom de la commande Description Utilisation <code>ls</code> Lister le contenu d'un dossier. <code>ls</code> puis Enter pour lister les fichiers du r\u00e9pertoire courant. ... ... ... </li> <li> <p>Remplir aussi le tableau des raccourcis claviers :</p> Nom de la commande Description Up Down ... Tab ... </li> <li> <p>R\u00e9aliser le plan du jeu de mani\u00e8re collaborative ! </p> <p> </p> <p>Le lien du diagramme partag\u00e9 est disponible ici. Il faudra alors vous connectez \u00e0 votre compte Google. Veuillez respecter le code couleur (copier-coller simplement les n\u0153uds du diagramme) !</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#complements-sur-les-commandes","title":"Compl\u00e9ments sur les commandes","text":""},{"location":"5%20%E2%80%93%20Architecture/5shell/#un-vrai-terminal","title":"Un vrai terminal !","text":"<p>Comme Windows diff\u00e8re des autres syst\u00e8mes d'exploitation qui sont majoritairement bas\u00e9s sur Unix, son langage de shell est relativement peu utilis\u00e9. Ainsi, nous opterons plut\u00f4t pour l'\u00e9mulation d'un syst\u00e8me d'exploitation Linux en utilisant JSLinux, un \u00e9mulateur propos\u00e9 par Fabrice Bellard. Merci Fabrice.</p> Questions 3 <p>Dans le document r\u00e9ponse, veuillez bien inscrire les diff\u00e9rentes commandes que vous avez utilis\u00e9es pour r\u00e9pondre aux questions.</p> <ol> <li> <p>En inscrivant la bonne commande dans le shell, dans quel dossier sommes-nous quand le syst\u00e8me d\u00e9marre ? Donner son chemin absolu. </p> </li> <li> <p>Que contient ce dossier ?</p> </li> <li> <p>Que contient le fichier <code>readme.txt</code> ?</p> </li> <li> <p>Cr\u00e9er le dossier <code>programmes</code> (gr\u00e2ce \u00e0 la commande <code>mkdir nom_du_dossier</code>) et y d\u00e9placer les 3 fichiers correspondants \u00e0 des programmes. Sauriez-vous d\u00e9placer ces 3 fichiers en une seule ligne de commande ?</p> </li> <li> <p>Se d\u00e9placer dans ce nouveau r\u00e9pertoire et y cr\u00e9er un fichier vide <code>bonjour.py</code> gr\u00e2ce \u00e0 la commande <code>touch nom_du_fichier</code>.</p> </li> <li> <p>Modifier ce programme Python pour qu'il affiche un message de bienvenue. Pour cela on utilisera l'\u00e9diteur nano (<code>nano nom_du_fichier</code>) : Ctrl+O, Enter pour enregistrer le programme puis Ctrl+X pour quitter l'\u00e9diteur. Ex\u00e9cuter le programme ainsi cr\u00e9e gr\u00e2ce au programme <code>python</code> (<code>python nom_du_fichier_py</code>).</p> </li> <li> <p>Dans le r\u00e9pertoire initial (<code>cd ~</code>), qu'affiche la commande <code>tree</code> ?    Note : Ne faites pas cette commande \u00e0 la racine du syst\u00e8me <code>/</code> ( Ctrl+C pour stopper une commande en cours si jamais).</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#les-options-et-les-arguments","title":"Les options et les arguments","text":"<p>Les lignes de commande que l'on a \u00e9crites jusqu'\u00e0 pr\u00e9sent \u00e9taient de la forme : </p> <pre><code>$ nom_de_la_commande argument1 argument2 ...\n</code></pre> <p>Le nombre d'arguments est variable, par exemple :</p> <ul> <li> <p><code>ls</code> ne prend aucun argument.</p> </li> <li> <p><code>cd</code> prend un chemin en argument.</p> </li> <li> <p><code>mv</code> prend plusieurs arguments : les noms des fichiers \u00e0 d\u00e9placer et un r\u00e9pertoire de destination.</p> </li> </ul> <p>On peut param\u00e9trer plus finement une commande gr\u00e2ce \u00e0 des options. Une option s'\u00e9crit de deux mani\u00e8res : <code>--option</code> ou <code>-o</code>. La syntaxe courte ne poss\u00e8de qu'un caract\u00e8re ! Toute ligne de commande s'\u00e9crit comme :</p> <pre><code>$ nom_de_la_commande --option1 --option2 ... argument1 argument2 ...\n</code></pre> Questions 4 <ol> <li> <p>Dans le dossier o\u00f9 se situent les diff\u00e9rents fichiers des programmes, ex\u00e9cuter la commande <code>ls -l</code>. Que fait l'option <code>-l</code> ?</p> </li> <li> <p>En utilisant l'option <code>--help</code> ou <code>-h</code> qui permet de lire une description rapide d'une commande, donner l'option qui permet de trier la liste des fichiers affich\u00e9e par <code>ls</code>  par ordre d\u00e9croissant de taille.</p> </li> <li> <p>Ex\u00e9cuter alors <code>ls</code> avec cette nouvelle option dans le r\u00e9pertoire des programmes. Donner le r\u00e9sultat affich\u00e9.</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#la-gestion-des-droits-et-permission-dacces-aux-fichiers","title":"La gestion des droits et permission d'acc\u00e8s aux fichiers","text":""},{"location":"5%20%E2%80%93%20Architecture/5shell/#introduction_1","title":"Introduction","text":"<p>Si on ex\u00e9cute <code>ls -l</code> dans le dossier parent : </p> <pre><code>localhost:~# ls -l\ntotal 8\ndrwxr-xr-x    2 root     root           111 Mar 28 17:35 programmes\n-rw-r--r--    1 root     root           151 Jul  5  2020 readme.txt\n</code></pre> <p>Si l'on arrive \u00e0 distinguer \u00e0 droite, le nom du fichier/dossier <code>readme.txt</code>, la date de derni\u00e8re modification  <code>Jul  5  2020</code> et le poids du fichier/dossier <code>151</code> (en octets), la partie \u00e0 gauche reste l\u00e9g\u00e8rement cryptique ! Un autre exemple sur ma machine :</p> <p></p> <p>La correspondance des quatres champs \u00e0 gauche est la suivante :</p> <pre><code>drwxr-xr-x      2      arthur    arthur \n     \u2191          \u2191         \u2191         \u2191\n  Droits     #Liens  Utilisateur  Groupe\n</code></pre> <p>Nous allons voir \u00e0 quoi correspond ces diff\u00e9rents champs, except\u00e9 <code>#Liens</code> le nombre de liens, qui n'est pas au programme.</p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#utilisateur","title":"<code>Utilisateur</code>","text":"<p>Un syst\u00e8me UNIX est multi-utilisateur, chaque utilisateur (personne physique ou un programme) est identifi\u00e9 par un nom et un identifiant unique (UID), et poss\u00e8de un ensemble de droits qui d\u00e9terminent les op\u00e9rations qu'il peut effectuer sur le syst\u00e8me, telles que l'acc\u00e8s \u00e0 un fichier ou \u00e0 un dossier, l'ex\u00e9cution de programmes, etc.</p> Questions 5 <ol> <li> <p>Pour conna\u00eetre les utilisateurs du syst\u00e8me, on consulte le fichier <code>/etc/passwd</code>. Que contient ce fichier ?</p> <p>Les utilisateurs sont enregistr\u00e9s au format : <code>nom:motdepasse:UID:GID:informations:repertoire:shell</code></p> </li> <li> <p>Vous \u00eates l'utilisateur <code>root</code>. Quel est votre UID ?</p> </li> </ol> Je suis root ! <p>L'utilisateur <code>root</code> est en fait le super-utilisateur du syst\u00e8me qui a tous les pouvoirs sur le syst\u00e8me ! Pour ex\u00e9cuter une commande r\u00e9serv\u00e9e au super-utilisateur, un utilisateur lambda doit utiliser la commande <code>sudo</code> (super user do) qui n\u00e9cessite de conna\u00eetre le mot de passe root qui en g\u00e9n\u00e9ral n'est connu que de l'administrateur du syst\u00e8me.</p> <p> </p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#groupe","title":"<code>Groupe</code>","text":"<p>Chaque utilisateur est associ\u00e9 \u00e0 un ou plusieurs groupes. Ils permettent de regrouper des utilisateurs pour leur attribuer des droits d'acc\u00e8s communs aux fichiers ou applications.</p> Question 6 <p>Le fichier qui stocke les diff\u00e9rents groupes se situe dans le m\u00eame r\u00e9pertoire que pr\u00e9c\u00e9demment, sauriez-vous le retrouver ? Que contient-il ?</p>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#les-types-dutilisateurs-ugo","title":"Les types d'utilisateurs <code>ugo</code>","text":"<p>Avec ces notions d'utilisateurs et de groupes, chaque fichier distingue alors trois types d'utilisateurs :</p> Utilisateur Anglais Symbole Son propri\u00e9taire User <code>u</code> Un groupe associ\u00e9 Group <code>g</code> Les autres utilisateurs Others <code>o</code>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#droits","title":"<code>Droits</code>","text":"<p>Il existe trois droits concernant un fichier ou un r\u00e9pertoire :</p> Droit Anglais Symbole Description Droit de lecture Read <code>r</code> Il est possible de lire le contenu du fichier Droit d'\u00e9criture Write <code>w</code> Il est possible de modifier le contenu du fichier Droit d'ex\u00e9cution eXecution <code>x</code> Il est possible d'ex\u00e9cuter le contenu du fichier(quand le fichier est du code ex\u00e9cutable) <p>Chaque fichier se voit ainsi attribuer pour chaque type d'utilisateurs (propri\u00e9taire, groupe, autres) leurs droits correspondants. Toutes ces informations sont encod\u00e9es dans le champ <code>Droits</code>, par exemple :</p> <pre><code>-rwxr-xr--\n</code></pre> <p>Le champ <code>Droits</code> s'\u00e9crit sur 10 caract\u00e8res :</p> <ul> <li> <p>Le 1er caract\u00e8re <code>-</code> ou <code>d</code> indique s'il s'agit d'un fichier ou d'un r\u00e9pertoire</p> </li> <li> <p>Les 9 caract\u00e8res suivants repr\u00e9sentent dans l'ordre les droits <code>rwx</code> pour les 3 types d'utilisateurs dans l'ordre <code>ugo</code>.</p> </li> </ul> <p>Par exemple, la s\u00e9quence <code>-rwxr-xr--</code> se d\u00e9compose comme :</p> <pre><code>-    r  w  x    r  -  x    r  -  -\n    \u2514-- u --\u2518  \u2514-- g --\u2518  \u2514-- o --\u2518\n</code></pre> Type d'utilisateur Droit lecture<code>r</code> Droit \u00e9criture<code>w</code> Droit ex\u00e9cution<code>x</code> Propri\u00e9taire <code>u</code> Groupe       <code>g</code> Autres       <code>o</code>"},{"location":"5%20%E2%80%93%20Architecture/5shell/#modification-des-droits-avec-chmod","title":"Modification des droits avec <code>chmod</code>","text":"<p>Seuls le propri\u00e9taire et l'utilisateur root peuvent modifier les droits d'un fichier ou d'un r\u00e9pertoire gr\u00e2ce \u00e0 la commande <code>chmod</code> (de l'anglais change mode).</p> <p>Elle s'utilise ainsi, en pr\u00e9cisant l'utilisateur (<code>a</code> pour tous), l'ajout <code>+</code> ou la suppression <code>-</code> ou la r\u00e9initialisation <code>=</code> de la permission et enfin les droits :</p> <pre><code>chmod [u g o a] [+ - =] [r w x] nom_du_fichier\n</code></pre> <p>Par exemple,</p> <pre><code>chmod g+w bulletin.txt\n</code></pre> <p>attribuera la permission de modifier le fichier au groupe associ\u00e9 au fichier <code>bulletin.txt</code></p> Questions 7 <p>Dans le document r\u00e9ponse, veuillez bien inscrire les diff\u00e9rentes commandes que vous avez utilis\u00e9es pour r\u00e9pondre aux questions.</p> <ol> <li> <p>Cr\u00e9er un fichier vide <code>test.txt</code> avec la commande <code>touch</code>.</p> </li> <li> <p>Quels sont les permission actuelles du fichier ? </p> </li> <li> <p>Changer les permissions du fichier pour que tout le monde ait les permissions de lecture et d'\u00e9criture.</p> </li> <li> <p>Finalement non, enlevez les droits \u00e0 ces gueux d'utilisateurs <code>o</code> !</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/","title":"Architecture r\u00e9seau","text":""},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#architecture-reseau","title":"Architecture r\u00e9seau","text":"<p>Liens</p> <ul> <li>Diaporama sur l'architecture r\u00e9seau et le mod\u00e8le OSI - TCP/IP</li> <li>Diaporama sur la d\u00e9couverte d'un r\u00e9seau local : \u00c0 venir ! \u00c7a serait trop simple pour le TP \u00e0 venir !</li> <li>Document R\u00e9ponse : Capytale est \u2620\ufe0f aujourd'hui</li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#un-reseau-local","title":"Un r\u00e9seau local","text":"<p>Objectif</p> <p>L'objectif de cette partie est de comprendre comment le switch achemine les trames d'un n\u0153ud source vers le bon n\u0153ud de destination gr\u00e2ce aux adresses MAC.</p>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#un-premier-reseau","title":"Un premier r\u00e9seau","text":"<ul> <li>Dans Filius, r\u00e9aliser le r\u00e9seau suivant. Cocher \u00ab Utiliser l'adresse IP comme nom \u00bb et \u00ab Utiliser l'adresse MAC comme nom \u00bb. Veuillez \u00e0 bien d\u00e9finir les adresses IP des h\u00f4tes.</li> </ul> <ul> <li>A travers ce TP, on associe aux diff\u00e9rentes machines un utilisateur :</li> </ul> Utilisateur Adresse IP Alice <code>192.168.0.1</code> Bob <code>192.168.0.2</code> Charlie <code>192.168.0.3</code> <ul> <li> <p>Lancer la simulation.</p> </li> <li> <p>D\u00e9finir la vitesse de la simulation \u00e0 1%.</p> </li> </ul>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#avant-lenvoie-de-donnees-sur-le-reseau","title":"Avant l'envoie de donn\u00e9es sur le r\u00e9seau","text":"<ul> <li> <p>Cliquer le switch pour r\u00e9v\u00e9ler sa table interne SAT avant l'envoie de donn\u00e9es sur le r\u00e9seau.</p> </li> <li> <p>Cliquer sur le premier h\u00f4te <code>192.168.0.1</code> (Alice). Installer le logiciel Ligne de commande sur cette machine et ex\u00e9cuter-le.</p> </li> </ul> Questions 1 <ol> <li> <p>Que vaut la table SAT du switch initialement ?</p> </li> <li> <p>Que renvoie la commande <code>ipconfig</code> ?</p> </li> <li> <p>Que renvoie la commande <code>arp</code> ?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#apres-lenvoie-de-donnees-sur-le-reseau-local","title":"Apr\u00e8s l'envoie de donn\u00e9es sur le r\u00e9seau local","text":"<ul> <li>R\u00e9aliser un ping de Alice <code>192.168.0.1</code> vers Charlie <code>192.168.0.3</code> gr\u00e2ce \u00e0 la commande <code>ping 192.168.0.3</code>.</li> </ul> Questions 2 <ol> <li> <p>Que vaut maintenant la table SAT du switch ? \u00c0 quoi sert-elle ?</p> </li> <li> <p>Que renvoie maintenant la commande <code>arp</code> ? \u00c0 quoi sert la table ARP ?</p> </li> <li> <p>Que renvoie la commande <code>arp</code> sur l'h\u00f4te de destination Charlie <code>192.168.0.3</code> ? Et Bob <code>192.168.0.2</code> ?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#ou-est-charlie","title":"O\u00f9 est Charlie ?","text":"<p>Avant le premier ping, les diff\u00e9rents h\u00f4tes et le switch n'ont aucune connaissance du r\u00e9seau local auquel ils sont connect\u00e9s. Ainsi quand Alice envoie un message \u00e0 Charlie, elle ne conna\u00eet pas encore l'adresse MAC de ce dernier. Quelle adresse MAC de destination doit-elle inscrire sur la trame qu'elle envoie sur le r\u00e9seau ?</p> <p>Elle envoie simplement un message \u00e0 tout le monde sur le r\u00e9seau local pour trouver Charlie ! C'est ce que l'on appelle une diffusion g\u00e9n\u00e9rale, ou un broadcast.</p> Analyse de la d\u00e9couverte du r\u00e9seau <ol> <li> <p>Alice g\u00e9n\u00e8re une trame : Alice fait une demande de ping, le message est \u00ab Bonjour Bob, c'est Alice, ceci est un ping. Renvoie-moi un message. \u00bb. Le protocole TCP encapsule ce message dans un segment, puis le protocole IP encapsule ce segment TCP dans un paquet IP. Ce paquet est enfin encapsul\u00e9 dans une trame Ethernet.</p> </li> <li> <p>** En-t\u00eate de la trame : Sur la trame qu'elle envoie sur le r\u00e9seau, Alice y inscrit l'adresse MAC de destination <code>FF:FF:FF:FF:FF:FF</code>, c'est l'adresse de diffusion g\u00e9n\u00e9rale (broadcast)**.</p> </li> <li> <p>R\u00e9ception par le switch : Le switch re\u00e7oit la trame broadcast d'Alice et la diffuse sur tous ses autres ports, \u00e0 Bob et \u00e0 Charlie donc. Par ailleurs, il enregistre dans sa table SAT l'adresse MAC d'Alice (l'adresse MAC source de la trame) en y associant le port o\u00f9 Alice est connect\u00e9e.</p> </li> <li> <p>R\u00e9ception par Bob : Bob re\u00e7oit la trame broadcast depuis le switch. Il la d\u00e9capsule en un paquet et regarde l'adresse IP de destination. Ce n'est pas la sienne, donc il ignore le paquet.</p> </li> <li> <p>R\u00e9ception par Charlie : Charlie re\u00e7oit la trame broadcast et la d\u00e9capsule, l'adresse IP de destination indiqu\u00e9e sur le paquet est la sienne. Il d\u00e9capsule enfin le paquet jusqu'\u00e0 lire le message d'Alice \u00ab Bonjour Bob, c'est Alice, ceci est un ping. Renvoie-moi un message. \u00bb. Il note aussi l'adresse MAC d'Alice dans sa table ARP. </p> </li> <li> <p>Charlie g\u00e9n\u00e8re une trame : Charlie renvoie donc un message \u00e0 Alice. Il y inscrit l'adresse IP d'Alice sur le paquet et son adresse MAC sur la trame.</p> </li> <li> <p>R\u00e9ception par le switch : La trame de Charlie passe tout d'abord par le switch. Ce dernier ajoute l'adresse MAC de Charlie dans sa table ARP. Le switch conna\u00eet l'adresse MAC d'Alice, donc il aiguille la trame sur le bon port. </p> </li> <li> <p>R\u00e9ception par Alice : Alice re\u00e7oit le message de Charlie et note son adresse MAC dans sa table ARP.</p> </li> </ol> Questions 3 <ol> <li> <p>Quelles sont les adresses MAC source et de destination inscrit dans l'en-t\u00eate dans la premi\u00e8re trame envoy\u00e9e par Alice ?</p> </li> <li> <p>Cette trame encapsule un paquet. Quelles sont les adresses IP source et de destination inscrit dans l'en-t\u00eate de ce paquet ? </p> </li> <li> <p>Pourquoi Bob refuse ce qu'il re\u00e7oit ?</p> </li> <li> <p>Pourquoi Charlie accepte ce qu'il re\u00e7oit ?</p> </li> <li> <p>Quelles sont les adresses MAC source et de destination inscrit dans l'en-t\u00eate dans la trame envoy\u00e9e par Charlie ? Et les adresses IP source et de destination du paquet encapsul\u00e9 dans la trame ?</p> </li> <li> <p>Est-ce que le switch d\u00e9capsule les trames qu'il re\u00e7oit ? C'est-\u00e0-dire, regarde-t-il les adresses IP du paquet contenu dans la trame ? Change-t-il les adresses MAC source/destination de la trame ? </p> </li> <li> <p>Est-ce que les diff\u00e9rents h\u00f4tes, Alice, Bob et Charlie d\u00e9capsulent les trames qu'ils re\u00e7oivent ?</p> </li> <li> <p>Que se passe-t-il si Alice envoie un ping \u00e0 l'adresse IP <code>192.168.0.4</code> dans la simulation (remettre la vitesse de simulation \u00e0 100%) ? Est-ce logique ?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#sous-reseaux","title":"Sous-r\u00e9seaux","text":"<p>Objectif</p> <p>L'objectif de cette partie est de comprendre comment la notion de sous-r\u00e9seaux : la division d'un r\u00e9seau en plusieurs sous-groupes.</p>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#une-introduction","title":"Une introduction","text":"<ul> <li>Renommer le switch en \u00ab SwitchFrance \u00bb. Cr\u00e9er un second r\u00e9seau de trois machines d'adresses IP <code>192.168.1.1</code>, <code>192.168.1.2</code> et <code>192.168.1.3</code> avec un \u00ab SwitchUkraine \u00bb. Relier les deux switchs.</li> </ul> Utilisateur Adresse IP Anastasia <code>192.168.1.1</code> Boris <code>192.168.1.2</code> Katia <code>192.168.1.3</code> Questions 4 <ol> <li> <p>Tester un ping de <code>192.168.0.1</code> (Alice) vers <code>192.168.1.2</code> (Boris). Que se passe-t-il?</p> </li> <li> <p>Renommer la machine <code>192.168.1.2</code> (Boris) en <code>192.168.0.4</code> et retenter le ping. Que se passe-t-il?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#masque-de-sous-reseau","title":"Masque de sous-r\u00e9seau","text":"<p>Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine :</p> <ul> <li> <p>appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs.</p> </li> <li> <p>n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir plus loin).</p> </li> </ul> <p>La notion de sous-r\u00e9seau n'est pas topologique \u2014 il ne suffit pas de relier physiquement les dispositifs entre eux \u2014 mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques. C'est le masque de sous-r\u00e9seau (parfois simplement masque, ou netmask en anglais) qui permet de d\u00e9terminer quelles adresses font partie d'un m\u00eame sous-r\u00e9seau.</p>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#adresse-ip-et-masque-de-sous-reseau","title":"Adresse IP et masque de sous-r\u00e9seau","text":"<p>Une adresse IP est cod\u00e9e sur 4 octets (32 bits) et peut \u00eatre coup\u00e9 en deux :</p> <ul> <li> <p>L'adresse du r\u00e9seau : les \\(k\\) premiers bits</p> </li> <li> <p>L'adresse du r\u00e9seau : les \\(32 - k\\) bits restants.</p> </li> </ul> Exemple 1Exemple 2 <ul> <li> <p>Par d\u00e9faut, le masque de Filius est <code>255.255.255.0</code>, soit en binaire <code>11111111.11111111.11111111.00000000</code>.</p> </li> <li> <p>Donc \\(k = 24\\). On note souvent l'adresse IP d'Alice comme <code>192.168.0.1 /24</code></p> </li> <li> <p>Suivant ce masque, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es).</p> </li> <li> <p>Deux machines appartiennent a un m\u00eame sous-r\u00e9seau si elles partagent donc les 24 premiers bits, c'est \u00e0 dire les 3 premiers nombres (octets). Ainsi Alice est dans le sous-r\u00e9seau \u00ab <code>192.168.0</code> \u00bb.</p> </li> </ul> <ul> <li> <p>Soit le masque <code>255.255.248.0</code>, en binaire <code>11111111.11111111.11111000.00000000</code>.</p> </li> <li> <p>Donc \\(k = 21\\). L'adresse IP d'Alice se note <code>192.168.0.1 /21</code>.</p> </li> <li> <p>Deux machines appartiennent au m\u00eame sous-r\u00e9seau si elles partagent les 21 premiers bits de leur adresse IP.</p> </li> </ul> Question 5 <p>Dans l'exemple 2, combien de machines peuvent appartenir \u00e0 ce m\u00eame sous-r\u00e9seau ?</p>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#appartenance-a-un-meme-sous-reseau","title":"Appartenance \u00e0 un m\u00eame sous-r\u00e9seau","text":"<p>Pour que deux machines appartiennent \u00e0 un m\u00eame sous-r\u00e9seau, il faut donc que leurs adresses IP respectives partagent les m\u00eames \\(k\\) premiers bits d\u00e9finis par le masque.</p> <p>Pour cela, on extrait les \\(k\\) premiers bits correspondant au sous-r\u00e9seau d'une adresse IP quelconque gr\u00e2ce l'op\u00e9ration du ET logique bit \u00e0 bit (bitwise and en anglais) que l'on note <code>&amp;</code> pour le diff\u00e9rencier du ET logique usuel <code>&amp;&amp;</code>. On effectue le calcul <code>Adresse IP &amp; Masque</code>. Par exemple :</p> <pre><code>\u2022 Adresse IP :  192.168.1.2    =  11000000.10101000.00000001.00000010\n\u2022 Masque     :  255.255.248.0  =  11111111.11111111.11111000.00000000\n\n\u2022 Adresse IP &amp; Masque :\n\n    11000000.10101000.00000001.00000010  \u25c0  Adresse IP\n &amp;  11111111.11111111.11111000.00000000  \u25c0  Masque\n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    11000000.10101000.00000000000000000  \u25c0  Sous-r\u00e9seau\n</code></pre> <p>Comme vous pouvez le constater, les bits \u00e0 <code>0</code> masque la partie inf\u00e9rieure de l'adresse IP !</p> Question 6 <p>On consid\u00e8re trois h\u00f4tes A, B et C aux adresses IP respectives <code>192.168.129.10</code>, <code>192.168.135.200</code> et <code>192.168.145.1</code> configur\u00e9es avec le masque de sous-r\u00e9seau <code>255.255.248.0</code>. Remplir le tableau :</p> <p></p> Machines Adresse IP Masque Adresse IP &amp; Masque A <code>192.168.129.10</code> <code>255.255.248.0</code> B <code>192.168.135.200</code> <code>255.255.248.0</code> C <code>192.168.145.1</code> <code>255.255.248.0</code> <p></p>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#le-routeur","title":"Le routeur","text":"<p>Objectif</p> <p>L'objectif de cette partie est de comprendre comment le routeur interconnecte deux sous-r\u00e9seaux en routant les paquets.</p> <p>Fichier Filius</p> <p>Si vous n'avez pas sauvegard\u00e9 votre r\u00e9seau, t\u00e9l\u00e9chargez ce fichier.</p> <p>Comment faire pour que le sous-r\u00e9seau \u00ab France \u00bb communique avec le sous-r\u00e9seau \u00ab Ukraine \u00bb ? Comment interconnecter les deux sous-r\u00e9seaux con\u00e7us pr\u00e9c\u00e9demment ? Gr\u00e2ce \u00e0 un \u00e9quipement de la couche 3 (couche r\u00e9seau), le routeur. Ce dispositif, parfois appel\u00e9 passerelle, est \u00e9quip\u00e9 de deux cartes r\u00e9seaux (chacune ayant une adresse physique MAC et une adresse logique IP) ou plus.</p> <p></p> <ol> <li> <p>En mode conception , ajouter un routeur \u00e0 deux interfaces et le relier aux deux switchs. Si vous ne l'avez pas d\u00e9j\u00e0 fait, supprimer le c\u00e2ble entre les deux switchs.</p> <p>Pourquoi deux interfaces ? Il faut bien une carte r\u00e9seau par sous-r\u00e9seau !</p> </li> <li> <p>Configurer le routeur :</p> <ul> <li>Son interface reli\u00e9e au \u00ab SwitchFrance \u00bb doit appartenir au sous-r\u00e9seau \u00ab France \u00bb. Donc on doit configurer son adresse IP sous la forme <code>192.168.0.XXX</code> (on conserve le masque par d\u00e9faut <code>255.255.255.0</code>).</li> </ul> <p>G\u00e9n\u00e9ralement, on donne une adresse finissant par <code>254</code> (<code>255</code> \u00e9tant r\u00e9serv\u00e9 pour effectuer un ping l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau).</p> <ul> <li> <p>Faire de m\u00eame pour la deuxi\u00e8me interface du routeur.</p> </li> <li> <p>S\u00e9lectionner \u00ab Routage automatique \u00bb dans l'onglet \u00ab G\u00e9n\u00e9ral \u00bb.</p> </li> </ul> <p> </p> </li> <li> <p>En mode simulation  , tester un <code>ping</code> depuis la machine <code>192.168.0.1</code> (Alice) vers <code>192.168.1.1</code> (Anastasia). Que se passe-t-il ?</p> <p>La carte r\u00e9seau d'Alice ne sait pas o\u00f9 envoyer les paquets car l'adresse IP d'Anastasia ne fait pas parti de son sous-r\u00e9seau. Alice ne sait pas non plus qu'il existe un routeur (passerelle) dans son sous-r\u00e9seau.</p> </li> <li> <p>En mode configuration , cliquer sur la machine d'Alice et lui renseigner la passerelle de son sous-r\u00e9seau. Retenter le ping.</p> <p>Le ping se termine en <code>timeout</code> ? Il ne faut pas oublier qu'un ping renvoie un \u00e9cho pong... </p> </li> <li> <p>Une fois qu'Alice et Anastasia peuvent communiquer, effectuer un <code>traceroute</code> pour afficher le nombre de sauts n\u00e9cessaires.</p> </li> </ol> Questions 7 <p>Ex\u00e9cuter l'invite de commandes de Windows : Win+R puis <code>cmd</code> puis Enter.</p> <ol> <li> <p>Gr\u00e2ce \u00e0 la commande <code>ipconfig /all</code>, donner l'adresse IP et MAC de la carte r\u00e9seau du PC.</p> </li> <li> <p>Donner aussi l'adresse IP de la passerelle par d\u00e9faut.</p> </li> <li> <p>Afficher aussi la table ARP gr\u00e2ce \u00e0 la commande <code>arp -a</code>. Quelle est l'adresse MAC de la passerelle ?</p> </li> <li> <p><code>traceroute</code> devient <code>tracert</code> sous Windows. L'adresse IP du serveur Web https://lycee-pons.org/ est <code>213.186.33.4</code>. Combien faut-il de sauts pour y parvenir depuis votre poste ?</p> </li> </ol>"},{"location":"5%20%E2%80%93%20Architecture/6r%C3%A9seau/#un-serveur-web","title":"Un serveur Web","text":"<p>Objectif</p> <p>Apr\u00e8s avoir \u00e9tudi\u00e9 les trois premi\u00e8res couches du mod\u00e8le OSI (\u00e0 savoir, la couche physique, la couche liaison de donn\u00e9es et la couche r\u00e9seau), nous allons maintenant nous concentrer sur la couche 4 (transport), o\u00f9 se trouve le protocole TCP, ainsi que sur les couches 5 et sup\u00e9rieures (application), o\u00f9 r\u00e9side le protocole HTTP.</p> <p>Fichier Filius</p> <p>Si vous n'avez pas sauvegard\u00e9 votre r\u00e9seau, t\u00e9l\u00e9chargez ce fichier.</p> <p>Si envoyer des pings sur le r\u00e9seau est int\u00e9ressant, envoyer de r\u00e9elles donn\u00e9es sur le r\u00e9seau l'est encore plus !</p> <p>Maintenant que nous avons reli\u00e9 deux machines situ\u00e9es dans deux sous-r\u00e9seaux diff\u00e9rents, nous obtenons un mod\u00e8le r\u00e9duit d'Internet. On peut d\u00e9sormais simuler le service Web avec \u00e9change client/serveur.</p> <ol> <li> <p>En mode configuration , connecter un ordinateur au \u00ab SwitchUkraine \u00bb, il s'agira de notre serveur Web. Configurer correctement la machine :</p> <ul> <li> <p>Lui donner une adresse IP du sous-r\u00e9seau (<code>192.168.1.10</code> par exemple).</p> </li> <li> <p>Ne pas oublier de lui renseigner la passerelle.</p> </li> </ul> </li> <li> <p>En mode simulation , installer un serveur Web sur cette nouvelle machine et le d\u00e9marrer.</p> <p>Par d\u00e9faut, Filius g\u00e9n\u00e8re une page HTML <code>index.html</code>. En installant un \u00e9diteur de texte, vous pouvez modifier cette page web.</p> </li> <li> <p>Installer un navigateur Web sur la machine d'Alice <code>192.168.0.1</code>. Dans la barre d'adresse, y inscrire l'adresse IP du serveur. Une page devrait s'afficher.</p> <p>Que s'est-il pass\u00e9 ? Le navigateur web d'Alice a g\u00e9n\u00e9r\u00e9 une requ\u00eate HTTP (de type <code>GET</code>) qu'elle envoie au serveur Web. Le serveur re\u00e7oit la requ\u00eate et renvoie le fichier <code>index.html</code> au navigateur Web d'Alice qui l'affiche.</p> </li> <li> <p>Pour avoir le d\u00e9tail des \u00e9changes de donn\u00e9es entre les deux machines, faites clique-droit sur la machine d'Alice <code>192.168.0.1</code> et \u00ab Afficher les \u00e9changes de donn\u00e9es \u00bb.</p> </li> </ol> <p></p> Questions 8 <p>Trouver la requ\u00eate HTTP <code>GET</code> qu'Alice a envoy\u00e9e au serveur. Dans le d\u00e9tail de cette requ\u00eate, on peut identifier les quatre couches R\u00e9seau, Internet, Transport et Application qui constituent les diff\u00e9rents en-t\u00eates.</p> <ol> <li> <p>A quel dispositif correspond l'adresse IP de destination du paquet envoy\u00e9e par Alice ? </p> </li> <li> <p>A quel dispositif correspond l'adresse MAC de destination de la trame envoy\u00e9e par Alice ?</p> </li> <li> <p>Que fait le routeur lorsqu'il re\u00e7oit la trame contenant la requ\u00eate d'Alice au niveau des adresses MAC ?</p> <p>On remarque en bleu clair des \u00e9changes qui suivent tous les \u00e9changes HTTP (bleu fonc\u00e9), en regardant de plus pr\u00e8s on s'aper\u00e7oit qu'il s'agit d'un simple segment TCP avec le commentaire <code>ACK</code>. Il ne contient pas de donn\u00e9es.</p> </li> <li> <p>Juste apr\u00e8s la requ\u00eate GET d'Alice, quelle machine \u00e9met le segment <code>ACK</code> ? Qui la re\u00e7oit ? </p> </li> <li> <p>De m\u00eame apr\u00e8s la r\u00e9ponse du serveur contenant les donn\u00e9es de la page <code>index.html</code>, quelle machine \u00e9met le segment <code>ACK</code> ? Qui la re\u00e7oit ? </p> </li> <li> <p>D\u2019apr\u00e8s vos connaissances sur le protocole TCP, quel r\u00f4le peut bien jouer ce segment ?</p> </li> <li> <p>TCP a aussi le r\u00f4le d'initialiser et terminer la connexion entre Alice et le serveur Web. Rep\u00e9rer les trames TCP marquant le d\u00e9but et la fin de connexion. Compl\u00e9ter le diagramme suivant (sur Paint par exemple) :</p> </li> </ol> <p> </p>"},{"location":"6%20%E2%80%93%20Programmation/1intro/","title":"Introduction","text":""},{"location":"6%20%E2%80%93%20Programmation/1intro/#introduction","title":"Introduction","text":""},{"location":"6%20%E2%80%93%20Programmation/1intro/#quest-ce-quun-programme","title":"Qu'est-ce qu'un programme ?","text":"<ul> <li>Un programme (parfois appel\u00e9 code ou script) est une suite d'instructions pr\u00e9cises et \u00e9l\u00e9mentaires que la machine ex\u00e9cute.</li> </ul> Exemple de programme Python<pre><code>saisie = input()\nrayon = float(saisie)\naire = 3.14 * rayon * rayon\nprint(\"Aire du cercle :\", aire)\n</code></pre> <ul> <li> <p>Un programme manipule des donn\u00e9es / valeurs (nombres, texte, image...).</p> </li> <li> <p>Un programme s'\u00e9crit dans un langage de programmation (Python, Java, C...).</p> </li> <li> <p>Savoir programmer, c\u2019est donc savoir \u00e9crire des ordres \u00e0 la machine et d\u00e9composer ce que l\u2019on veut faire en une suite d'instructions !</p> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/2variables/","title":"Types, valeurs et variables","text":""},{"location":"6%20%E2%80%93%20Programmation/2variables/#types-valeurs-et-variables","title":"Types, valeurs et variables","text":""},{"location":"6%20%E2%80%93%20Programmation/2variables/#types-et-valeurs","title":"Types et valeurs","text":""},{"location":"6%20%E2%80%93%20Programmation/2variables/#definition-et-exemples","title":"D\u00e9finition et exemples","text":"<p>Les valeurs manipul\u00e9es par un programme sont caract\u00e9ris\u00e9es par leur type.</p> Type Terme anglais Signification Exemples de valeur <code>int</code> integer Nombre entier <code>45</code> <code>-255</code> <code>1998</code> <code>float</code> float Nombre d\u00e9cimal (ou flottant) <code>3.1412</code> <code>-1.14152</code> <code>str</code> string Cha\u00eene de caract\u00e8res (texte) <code>\"Bonjour\"</code> <code>\"42\"</code> <code>bool</code> boolean Bool\u00e9en <code>True</code> <code>False</code>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#conversion-entre-types","title":"Conversion entre types","text":"<p>Pour convertir une valeur vers un autre type, si cela a du sens, on utilise les fonctions <code>int</code>, <code>float</code>, <code>str</code> ou <code>bool</code> :</p> <pre><code>&gt;&gt;&gt; int(17.6)  # float \u25ba int\n17\n&gt;&gt;&gt; int(\"42\")  # str   \u25ba int\n42\n&gt;&gt;&gt; str(3.14)  # float \u25ba str\n\"3.14\"\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#operateurs-arithmetiques","title":"Op\u00e9rateurs arithm\u00e9tiques","text":""},{"location":"6%20%E2%80%93%20Programmation/2variables/#entre-deux-valeurs-arithmetiques-int-ou-float","title":"Entre deux valeurs arithm\u00e9tiques (<code>int</code> ou <code>float</code>)","text":"Op\u00e9rateur Arithm\u00e9tique Signification Exemple R\u00e9sultat <code>+</code> Addition <code>10 + 3</code> <code>13</code> <code>-</code> Soustraction <code>42 - 10.5</code> <code>31.5</code> <code>*</code> Multiplication <code>7 * 8</code> <code>56</code> <code>/</code> Division <code>13 / 5</code> <code>2.6</code> <code>//</code> Division enti\u00e8re <code>13 // 5</code> <code>2</code> <code>%</code> Reste dans la division enti\u00e8re (ou modulo) <code>13 % 5</code> <code>3</code> <code>**</code> Puissance <code>4 ** 3</code> <code>64</code> <p>Les calculs suivent la priorit\u00e9 usuelle des op\u00e9rateurs.</p> Syntaxe abr\u00e9g\u00e9e<pre><code>x += 10  # \u00e9quivalent \u00e0 x = x + 10\nx *= 2   # \u00e9quivalent \u00e0 x = x * 2\nx //= 2  # \u00e9quivalent \u00e0 x = x // 2\n# etc.\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#entre-dautres-types","title":"Entre d'autres types","text":"<p>Les op\u00e9rateurs arithm\u00e9tiques ont un sens diff\u00e9rent suivant le type de valeurs manipul\u00e9es. Par exemple, on peut utiliser des cha\u00eenes de caract\u00e8res :</p> <pre><code>&gt;&gt;&gt; \"Oui\" + \"Non\"  # concat\u00e9nation\n'OuiNon'\n&gt;&gt;&gt; \"Oui\" * 3\n'OuiOuiOui'\n</code></pre> <p>C'est tout l'int\u00e9r\u00eat d'avoir diff\u00e9rents types, la machine les traite diff\u00e9remment.</p>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#variables","title":"Variables","text":""},{"location":"6%20%E2%80%93%20Programmation/2variables/#affectation-et-substitution","title":"Affectation et substitution","text":"<p>Une variable permet de stocker une valeur (de n\u2019importe quel type) et est identifi\u00e9e par un nom. Lors de l\u2019\u00e9valuation d\u2019une expression, le nom d\u2019une variable est substitu\u00e9 par sa valeur.</p> <pre><code>&gt;&gt;&gt; toto = 42  # affection\n&gt;&gt;&gt; toto = 56  # une nouvelle affectation \u00e9crase l'ancienne valeur\n&gt;&gt;&gt; toto + 3   # substitution\n45\n</code></pre> <p>Lorsqu\u2019on affecte une valeur pour la premi\u00e8re fois \u00e0 une nouvelle variable, on parle d\u2019initialisation. Le symbole <code>=</code> est l'op\u00e9rateur d'affectation, il n'a pas la m\u00eame signification qu'en math\u00e9matiques.</p>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#utilite","title":"Utilit\u00e9","text":"<ul> <li> <p>Les expressions avec des variables sont g\u00e9n\u00e9rales, elles sont valides peu importe le contenu des variables. </p> Modifier les notes ne change pas le calcul de la moyenne<pre><code>maths    = 11\nfran\u00e7ais = 13\nanglais  = 14\nmoyenne  = (maths + fran\u00e7ais + anglais) / 3\nprint(\"Moyenne g\u00e9n\u00e9rale :\")\nprint(moyenne)\n</code></pre> </li> <li> <p>Certaines valeurs ne sont pas connus \u00e0 l\u2019avance, typiquement une entr\u00e9e clavier de l\u2019utilisateur.</p> Le pr\u00e9nom de l'utilisateur n'est pas connu \u00e0 l'avance<pre><code>pr\u00e9nom = input()\nprint(\"Bonjour\", pr\u00e9nom)\n</code></pre> </li> <li> <p>Une variable permet de stocker des r\u00e9sultats interm\u00e9diaires et de les r\u00e9utiliser ult\u00e9rieurement, une ou plusieurs fois.</p> </li> <li> <p>Bien nommer ces variables rend le code plus lisible et compr\u00e9hensible.</p> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/2variables/#sortie-entree","title":"Sortie / Entr\u00e9e","text":"<ul> <li> <p>La fonction <code>print</code> permet d'afficher une ou plusieurs valeurs.</p> <pre><code>pr\u00e9nom = \"Arthur\"\n\u00e2ge = 27\nprint(pr\u00e9nom, \"a exactement \", \u00e2ge, \"ans\")\n</code></pre> </li> <li> <p>La fonction <code>input</code> r\u00e9cup\u00e8re une saisie utilisateur au clavier. Elle renvoie une cha\u00eene de caract\u00e8res.</p> <pre><code>saisie = input(\"Rayon ?\")  # input renvoie une cha\u00eene de caract\u00e8res\nrayon = float(saisie) # conversion vers un nombre d\u00e9cimal\naire = 3.14 * rayon * rayon\nprint(\"Aire du disque: \", rayon)\n</code></pre> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/3conditions/","title":"Les conditions","text":""},{"location":"6%20%E2%80%93%20Programmation/3conditions/#les-conditions","title":"Les conditions","text":"<p>Les structures conditionnelles permettent d'ex\u00e9cuter des blocs de code sp\u00e9cifiques suivant le r\u00e9sultat d'une condition.</p>"},{"location":"6%20%E2%80%93%20Programmation/3conditions/#ecrire-une-condition","title":"\u00c9crire une condition","text":""},{"location":"6%20%E2%80%93%20Programmation/3conditions/#operateurs-de-comparaison-et-dappartenance","title":"Op\u00e9rateurs de comparaison et d'appartenance","text":"<p>Ces op\u00e9rateurs renvoient une valeur bool\u00e9enne : <code>True</code> ou <code>False</code>.</p> Op\u00e9rateurs de comparaison Signification Exemple R\u00e9sultat <code>==</code> \u00e9gal \u00e0 <code>1 == 1</code> <code>True</code> <code>!=</code> diff\u00e9rent de <code>1 != 1</code> <code>False</code> <code>&gt;</code> sup\u00e9rieur \u00e0 <code>2 &gt; 0</code> <code>True</code> <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>4 &gt;= 6</code> <code>False</code> <code>&lt;</code> inf\u00e9rieur \u00e0 <code>5 &lt; 5</code> <code>False</code> <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>5 &lt;= 5</code> <code>True</code> Op\u00e9rateur d'appartenance Signification Exemple R\u00e9sultat <code>\u00e9l\u00e9ment in it\u00e9rable</code> <code>\u00e9l\u00e9ment</code> est dans <code>it\u00e9rable</code> <code>\"t\" in \"chat\"</code> <code>True</code>"},{"location":"6%20%E2%80%93%20Programmation/3conditions/#operateurs-logiques","title":"Op\u00e9rateurs logiques","text":"<p>Les op\u00e9rateurs logiques permettent de combiner des conditions. Ils fonctionnent entre deux bool\u00e9ens.</p> Op\u00e9rateurs logiques Signification Exemple R\u00e9sultat <code>not</code> non logique <code>not True</code> <code>False</code> <code>and</code> et logique <code>False and True</code> <code>False</code> <code>or</code> ou logique <code>False or True</code> <code>True</code> <p>Les tables de v\u00e9rit\u00e9 suivantes caract\u00e9risent enti\u00e8rement ces op\u00e9rateurs :</p> Op\u00e9rateur <code>not</code>Op\u00e9rateur <code>and</code>Op\u00e9rateur <code>or</code> <code>x</code> <code>not x</code> \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) <code>x</code> <code>y</code> <code>x and y</code> \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) <code>x</code> <code>y</code> <code>x or y</code> \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#EF5350}{\\texttt{False}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\) \\(\\color{#66BB6A}{\\texttt{True}}\\)"},{"location":"6%20%E2%80%93%20Programmation/3conditions/#la-clause-if","title":"La clause <code>if</code>","text":"<p>La clause <code>if</code> (si) permet d\u2019ex\u00e9cuter des instructions si une condition est respect\u00e9e.</p> Syntaxe d'une structure conditionnelle<pre><code>if condition:\n    instruction1\n    instruction2\n    ...\n</code></pre> <p>Si <code>condition</code> s'\u00e9value \u00e0 <code>True</code> (vrai), alors la suite d'instructions indent\u00e9es sera ex\u00e9cut\u00e9e. Sinon <code>condition</code> s'\u00e9value \u00e0 <code>False</code> (faux) et ce bloc sera ignor\u00e9.</p>"},{"location":"6%20%E2%80%93%20Programmation/3conditions/#la-clause-else","title":"La clause <code>else</code>","text":"<p>La clause <code>else</code> (sinon) permet d\u2019ex\u00e9cuter des instructions si une condition n'est pas respect\u00e9e (toujours \u00e0 la suite de <code>if</code>).</p> Exemple d'utilisation de la clause else<pre><code>\u00e2ge = int(input(\"Votre \u00e2ge ? \"))\nif \u00e2ge &gt;= 18:\n\u00a0 \u00a0 print(\"Vous \u00eates majeur.\")\nelse:\n\u00a0 \u00a0 print(\"Vous \u00eates mineur.\")\nprint(\"Merci au revoir !\")\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/3conditions/#la-clause-elif","title":"La clause <code>elif</code>","text":"<p>En python, <code>elif</code> (sinon si) est la contraction de <code>else</code> et <code>if</code>, cette clause permet de cha\u00eener facilement des conditions.</p> Exemple d'utilisation de la clause elif<pre><code>\u00e2ge = int(input(\"Votre \u00e2ge ? \"))\nif \u00e2ge &gt;= 70:\n\u00a0 \u00a0 print(\"Vous \u00eates une personne \u00e2g\u00e9e.\")\nelif \u00e2ge &gt;= 18:\n\u00a0 \u00a0 print(\"Vous \u00eates un adulte.\")\nelif \u00e2ge &gt;= 12:\n\u00a0 \u00a0 print(\"Vous \u00eates un adolescent.\")\nelse:\n    print(\"Vous \u00eates un enfant.\")\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/","title":"Les boucles","text":""},{"location":"6%20%E2%80%93%20Programmation/4boucles/#les-boucles","title":"Les boucles","text":"<p>Une boucle est une structure de contr\u00f4le de flot qui permet de r\u00e9p\u00e9ter un bloc de code.</p> <p>Lien Capytale</p> <p> Notebook Capytale a784-1899101 regroupant l'ensemble des exercices introductifs. La correction sera disponible plus tard.</p>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/#boucle-non-bornee-while","title":"Boucle non-born\u00e9e <code>while</code>","text":"<p>Lorsque le nombre de r\u00e9p\u00e9titions n'est pas connu \u00e0 l'avance, la boucle <code>while</code> (tant que en anglais) permet de r\u00e9p\u00e9ter un bloc d'instructions tant qu'une condition est v\u00e9rifi\u00e9e (parfois appel\u00e9e la condition d'arr\u00eat).</p> Syntaxe de la boucle while<pre><code>while condition:\n    instruction1\n    instruction2\n    ...\n</code></pre> <p>Tant que <code>condition</code> est \u00e9valu\u00e9e \u00e0 <code>True</code>, alors  le bloc indent\u00e9 est ex\u00e9cut\u00e9e. La condition est v\u00e9rifi\u00e9e en entr\u00e9e de la boucle, les instructions peuvent \u00eatre donc totalement ignor\u00e9es. La condition est r\u00e9\u00e9valu\u00e9e \u00e0 la fin du bloc d'instructions indent\u00e9.</p> <p></p>Programme<pre><code>i = 1\nwhile i &lt; 10:\n    print('i a pour valeur', i)\n    i *= 2  # Syntaxe abr\u00e9g\u00e9e de i = i * 2\nprint('Fin', i)  # i vaut 16 \u00e0 la fin de la boucle !\n</code></pre> Sortie<pre><code>i a pour valeur 1\ni a pour valeur 2\ni a pour valeur 4\ni a pour valeur 8\nFin 16\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/#boucle-bornee-for","title":"Boucle born\u00e9e <code>for</code>","text":"<p>Si le nombre d'it\u00e9rations est connue \u00e0 l'avance, on pr\u00e9f\u00e9rera utiliser dans ce cas la boucle <code>for</code> (pour en anglais). Cette boucle permet de parcourir un it\u00e9rable.</p>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/#iterable","title":"It\u00e9rable","text":"<p>Un it\u00e9rable d\u00e9signe un objet qui est d\u00e9composable en une suite d'\u00e9l\u00e9ments individuels. Quelques exemples concrets :</p> <ul> <li> <p>La cha\u00eene de caract\u00e8re <code>'chat'</code> est un it\u00e9rable car on peut le d\u00e9composer comme une suite de caract\u00e8res : <code>'c'</code>, <code>'h'</code>, <code>'a'</code> et <code>'t'</code>.</p> </li> <li> <p>Le tableau <code>[4, 3, 17]</code> est aussi un it\u00e9rable car on peut le d\u00e9composer comme une suite de nombres : <code>4</code>, <code>3</code> et <code>17</code>.</p> </li> <li> <p>En revanche, le nombre <code>42</code> n'est pas un it\u00e9rable car il ne peut \u00eatre d\u00e9compos\u00e9.</p> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/#syntaxe-et-exemples","title":"Syntaxe et exemples","text":"<p>La boucle <code>for</code> permet de parcourir un it\u00e9rable pour manipuler s\u00e9par\u00e9ment ces \u00e9l\u00e9ments individuels.</p> Syntaxe de la boucle for<pre><code>for i in it\u00e9rable:\n    instruction1\n    instruction2\n    ...\n</code></pre> <p>On dit la variable d'it\u00e9ration <code>variable</code> parcourt <code>it\u00e9rable</code>, elle va capturer chaque \u00e9l\u00e9ment de l'it\u00e9rable \u00e0 chaque tour de boucle.</p> Cha\u00eene de caract\u00e8resTableau d'entiersRangeSans utilisation de la variable d'it\u00e9ration <p></p>Programme<pre><code>for caract\u00e8re in 'chat':\n    print(caract\u00e8re)\n</code></pre> Sortie<pre><code>c\nh\na\nt\n</code></pre> <p></p>Programme<pre><code>for valeur in [1, 5, 17]:\n    print(valeur)\n</code></pre> Sortie<pre><code>1\n5\n17\n</code></pre> <p></p>Programme<pre><code>for i in range(5):\n    print(i)\n</code></pre> Sortie<pre><code>0\n1\n2\n3\n4\n</code></pre> <p></p>Programme<pre><code>for jenesersarien in [1, 5, 17]:\n    print('OK')\n</code></pre> Sortie<pre><code>OK\nOK\nOK\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/4boucles/#precisions-sur-range","title":"Pr\u00e9cisions sur <code>range</code>","text":"<p>Il est fr\u00e9quent d'\u00e9num\u00e9rer une suite de nombres entiers cons\u00e9cutifs. Avec une boucle <code>while</code> :</p> <pre><code>i = 0\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</code></pre> <p>Avec la boucle <code>for</code>, on arrive au m\u00eame r\u00e9sultat en it\u00e9rant un tableau :</p> <pre><code>for i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]:\n    print(i)\n</code></pre> <p>En plus d'\u00eatre extr\u00eamement p\u00e9nible \u00e0 \u00e9crire, ce code est peu g\u00e9n\u00e9rique. Heureusement, <code>range</code> (intervalle en anglais) permet de g\u00e9n\u00e9rer facilement une suite d'entiers cons\u00e9cutifs :</p> <pre><code>for i in range(10):\n    print(i)\n</code></pre> <p><code>range(start, stop, step)</code> g\u00e9n\u00e8re une suite d'entiers cons\u00e9cutifs en partant de <code>start</code> (inclus) jusqu'\u00e0 <code>stop</code> (exclus), en incr\u00e9mentant de <code>step</code> (pas en anglais).</p> <ul> <li> <p><code>start</code> est facultatif et vaut 0 par d\u00e9faut.</p> </li> <li> <p><code>step</code> est facultatif et vaut 1 par d\u00e9faut. Mais si on veut pr\u00e9ciser <code>step</code>, alors il faut donner aussi <code>start</code>, m\u00eame si sa valeur est 0.</p> </li> </ul> Un g\u00e9n\u00e9rateur <p>On peut convertir un objet de type <code>range</code> vers un tableau (<code>list</code>) :</p> <pre><code>&gt;&gt;&gt; range(10)\nrange(0, 10)\n&gt;&gt;&gt; list(range(5))\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; list(range(1, 20 , 3))\n[1, 4, 7, 10, 13, 16, 19]\n</code></pre> <p><code>range</code> va en fait g\u00e9n\u00e9rer ces valeurs \u00e0 la vol\u00e9e, on \u00e9vite ainsi de stocker tout un tableau en m\u00e9moire. On parle aussi du concept plus g\u00e9n\u00e9ral de lazy evaluation en anglais, ou \u00e9valuation paresseuse : on ne g\u00e9n\u00e8re le nombre qu'\u00e0 la demande de celui-ci.</p>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/","title":"Les fonctions","text":""},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#les-fonctions","title":"Les fonctions","text":"<p>Lien Capytale</p> <p> Notebook Capytale f441-1959478 regroupant l'ensemble des exercices. La correction sera disponible plus tard.</p> <p>Une fonction est un bloc d'instructions qui ne s'ex\u00e9cute que lorsqu'il est appel\u00e9. Vous pouvez transmettre des valeurs, appel\u00e9es arguments, \u00e0 une fonction. Une fonction peut renvoyer une valeur comme r\u00e9sultat.</p> <p></p> <p>Vous avez d\u00e9j\u00e0 en fait manipul\u00e9 tout un tas de fonctions :  <code>print</code>, <code>input</code>, <code>int</code>, <code>type</code> etc.</p> Exemple <p>La fonction <code>bin</code> prend un nombre entier (type <code>int</code>) comme argument et renvoie son \u00e9criture binaire :</p> <pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n</code></pre> <p>Une fonction permet donc d'organiser son code en le d\u00e9coupant en sous-programmes qui ont une t\u00e2che bien pr\u00e9cises. Non seulement cela vous permet de r\u00e9utiliser une fonction \u00e0 tout moment dans un programme, mais aussi de rendre votre code plus lisible, plus facile \u00e0 modifier et \u00e0 corriger.</p>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#syntaxe","title":"Syntaxe","text":""},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#creer-une-fonction","title":"Cr\u00e9er une fonction","text":"<p>En python, une fonction se cr\u00e9e avec le mot-clef <code>def</code> :</p> <pre><code>def ma_fonction():\n    print('Bonjour depuis une fonction :)')\n</code></pre> <p>Une fois le code de ma fonction \u00e9crit, il ne s'ex\u00e9cute pas directement. Pour cela, il faut explicitement l'appeler !</p>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#appeler-une-fonction","title":"Appeler une fonction","text":"<p>Pour appeler une fonction dans le programme, on l'appelle gr\u00e2ce \u00e0 son nom suivi de sa liste d'arguments entre parenth\u00e8ses. Ici, la fonction ne demande aucun argument, ni ne renvoie de valeur.</p> <pre><code>def ma_fonction():\n    print('Bonjour depuis une fonction :)')\n\nma_fonction()\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#passer-des-arguments","title":"Passer des arguments","text":"<p>On peut transmettre des donn\u00e9es aux fonctions par le biais d'arguments. Les arguments sont sp\u00e9cifi\u00e9s apr\u00e8s le nom de la fonction, \u00e0 l'int\u00e9rieur des parenth\u00e8ses. Vous pouvez ajouter autant d'arguments que vous le souhaitez, il suffit de les s\u00e9parer par une virgule.</p> <pre><code>def saluer_dupont(prenom):\n    print(f'Bonjour {prenom} Dupont, \u00e7a va ?')\n\nsaluer_dupont('Jean')\nsaluer_dupont('Pierre')\nsaluer_dupont('Jacques')\n</code></pre> <p>Ici la fonction <code>saluer_dupont</code> capture un argument, une cha\u00eene de caract\u00e8re, dans une variable que l'on a nomm\u00e9e <code>prenom</code>. Lorsque la fonction est appel\u00e9e, par exemple <code>saluer_dupont('Jean')</code>, le param\u00e8tre <code>prenom</code> prend comme valeur <code>'Jean'</code> et le corps de la fonction est ensuite ex\u00e9cut\u00e9. </p> <p>D'un point de vue s\u00e9mantique</p> <ul> <li> <p><code>prenom</code> est un argument \u00e0 l'ext\u00e9rieur de la fonction, au moment de son appel. On dit qu'on lui passe l'argument.</p> </li> <li> <p><code>prenom</code> est un param\u00e8tre \u00e0 l'int\u00e9rieur de la fonction.</p> </li> </ul> <p>On peut passer plusieurs arguments :</p> <pre><code>def saluer(prenom, nom):\n    print(f'Bonjour {prenom} {nom}, \u00e7a va ?')\n\nsaluer('Arthur', 'Rouquan')\nsaluer('Leo\u0161', 'Jan\u00e1\u010dek')\nsaluer('Cho', 'Chikun')\n</code></pre> <p>Si vous ne passez qu'un argument, par exemple <code>saluer('Bob')</code>, vous aurez droit \u00e0 une erreur !</p>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#renvoyerretourner-une-valeur","title":"Renvoyer/retourner une valeur","text":"<p>Renvoyer une valeur depuis une fonction se fait gr\u00e2ce au mot-clef <code>return</code> :</p> <pre><code>def double(nombre):\n    return nombre * 2\n\nprint(double(4))\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#syntaxe-generale","title":"Syntaxe g\u00e9n\u00e9rale","text":"<pre><code>def nom_de_la_fonction(argument1, argument2, ...):\n    # intructions\n    return valeur_renvoyee\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#quelques-exemples-demonstratifs","title":"Quelques exemples d\u00e9monstratifs","text":""},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#test-de-parite-lisibilite","title":"Test de parit\u00e9 - Lisibilit\u00e9","text":"<p>Pour tester si un nombre est pair, on regarde si le reste de la division de celui-ci par 2 vaut 0. On peut d\u00e9finir une fonction <code>est_pair</code> qui nous renvoie <code>True</code> si le nombre est pair, <code>False</code> sinon :</p> <pre><code>def est_pair(nombre):\n    return nombre % 2 == 0\n</code></pre> <p>Ici, on nomme explicitement l'intention du code. Ces deux codes sont strictement identiques, mais le dernier est beaucoup plus clair !</p> <pre><code>if n % 2 == 0:\n    # blabla\n</code></pre> <pre><code>if est_pair(n):\n    # blabla\n</code></pre> <p>Qui plus est, il existe une mani\u00e8re plus rapide de tester la parit\u00e9 d'un entier. S'il faudrait alors modifier chacune des \u00e9galit\u00e9s dans le premier cas, dans le second cas il suffirait de modifier juste le corps de la fonction <code>est_pair</code>.</p>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#somme-des-entiers-genericite","title":"Somme des entiers - G\u00e9n\u00e9ricit\u00e9","text":"<p>Imaginons le programme qui calcule la somme des entiers naturels jusqu'\u00e0 1000 :</p> <pre><code>s = 0\nfor i in range(1, 1001):\n    s += i\nprint(s)\n</code></pre> <p>Transformons-le en une fonction. Un des principes clefs de la programmation est de g\u00e9n\u00e9raliser ses fonctions, de les rendre g\u00e9n\u00e9riques. Ici, l'objectif est de pouvoir utiliser cette fonction quand on en aura besoin, et \u00e9ventuellement pour calculer la somme des entiers jusqu'\u00e0 n'importe quelle valeur \\(n\\), pas n\u00e9cessairement 1000. Cette valeur \\(n\\) va \u00eatre le param\u00e8tre de la fonction. Et on ne veut plus afficher la somme, mais que cette somme soit renvoy\u00e9e par la fonction (pour l'affecter \u00e0 une variable, ou bien pour l'afficher ensuite).</p> <pre><code>def somme(n):\n    s = 0\n    for i in range(1, n + 1):\n        s += i\n    return s\n</code></pre> <p>Si l'on ex\u00e9cute :</p> <pre><code>&gt;&gt;&gt; somme(42)\n903\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#quelques-subtilites","title":"Quelques subtilit\u00e9s","text":""},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#sejecter-du-code-avec-return","title":"S'\u00e9jecter du code avec <code>return</code>","text":"<p>L'emploi du mot-clef <code>return</code> provoque une \u00e9jection du code : tout ce qui suit cette instruction ne sera pas ex\u00e9cut\u00e9.</p> <pre><code>def bidon(n):\n    if n % 2 == 0:\n        print(f'Ce texte est affich\u00e9 car {n} est pair.')\n        return 'Bravo !'\n    else:\n        return 'Mauvais choix de nombre...'\n    print('Ce texte ne sera jamais affich\u00e9.')\n\nprint(bidon(12))\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#respecter-lordre-des-arguments","title":"Respecter l'ordre des arguments","text":"<pre><code>def repete_lettres(chaine, nombre):\n    sortie = ''\n    for caractere in chaine:\n        sortie += nombre * caractere\n    return sortie\n</code></pre> <p>Il faut alors respecter l'ordre des param\u00e8tres lors de l'appel de la fonction :</p> <pre><code>&gt;&gt;&gt; repete_lettres('NSI', 3)\n'NNNSSSIII'\n&gt;&gt;&gt; repete_lettres(3, 'NSI')\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nFile \"\", line 3, in repete_lettres\n    for lettre in chaine:\nTypeError: 'int' object is not iterable\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#la-portee-des-variables","title":"La port\u00e9e des variables","text":""},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#variables-locales","title":"Variables locales","text":"<p>Les param\u00e8tres d'une fonction, ainsi que les variables d\u00e9clar\u00e9es \u00e0 l'int\u00e9rieur du corps de la fonction n'existent que dans le corps de cette fonction. Il n'est pas possible d'y faire r\u00e9f\u00e9rence depuis une autre instruction, et ce m\u00eame si la fonction a \u00e9t\u00e9 appel\u00e9e.</p> <pre><code>def aire_rectangle(longueur, largeur):\n    aire = longueur * largeur\n    return aire\n</code></pre> <pre><code>&gt;&gt;&gt; aire_rectangle(6, 3)\n18\n&gt;&gt;&gt; longueur\nNameError: name 'longueur' is not defined\n&gt;&gt;&gt; aire\nNameError: name 'aire' is not defined\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/5fonctions/#variables-globales","title":"Variables globales","text":"<p>M\u00eame si c'est possible, il est fortement recommand\u00e9 de ne pas utiliser dans le corps d'une fonction des variables d\u00e9finies \u00e0 l'ext\u00e9rieur de cette fonction. En effet, si plusieurs fonctions agissent sur ces variables, le programme peut aboutir \u00e0 des valeurs ou des comportements non pr\u00e9vus. On parle alors d'effet de bord.</p> Pas bienBien <pre><code>a = 5\ndef fonction_idiote(n):\n    return n + a\n\nfonction_idiote(1)\n</code></pre> <pre><code>a = 5\ndef fonction_idiote(n, m):\n    return n + m\n\nfonction_idiote(1, a)\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/","title":"Des mini-jeux !","text":""},{"location":"6%20%E2%80%93%20Programmation/6jeu/#des-mini-jeux","title":"Des mini-jeux !","text":"<p>Deux mini-jeux \u00e0 programmer sur Thonny, le jeu du Plus ou Moins et le jeu des allumettes ! Les deux mini-jeux seront \u00e0 rendre. Sur 20 points :</p> <ul> <li> <p>5 points pour chaque code de base compl\u00e9t\u00e9.</p> </li> <li> <p>Des points suppl\u00e9mentaires suivant les am\u00e9liorations apport\u00e9es. </p> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/#prerequis","title":"Pr\u00e9requis","text":"Tirer un nombre al\u00e9atoire <p>En programmation, une biblioth\u00e8que est une collection de fonctions pr\u00eates \u00e0 l'emploi. Par exemple, la biblioth\u00e8que nomm\u00e9e <code>random</code> (al\u00e9atoire en anglais) regroupe des fonctions pour g\u00e9n\u00e9rer des nombres pseudo-al\u00e9atoires. En l\u2019occurrence, la fonction <code>randint</code> (random integer, entier al\u00e9atoire) de cette biblioth\u00e8que permet de tirer al\u00e9atoirement un entier entre deux bornes : </p> <pre><code>import random  # on importe la biblioth\u00e8que random pour utiliser ses fonctions\n\nvaleur = random.randint(1, 6)  # la variable re\u00e7oit un nombre al\u00e9atoire entre 1 et 6 (inclus)\n</code></pre> <p>Pour \u00e9viter d'\u00e9crire le nom de la biblioth\u00e8que \u00e0 chaque appel, on peut importer sp\u00e9cifiquement <code>randint</code> de cette mani\u00e8re :</p> <pre><code>from random import randint  # depuis random importer randint\n\nvaleur = randint(1, 6)\n</code></pre> <p>Ou importer toutes les fonctions de la biblioth\u00e8que :</p> <pre><code>from random import *  # l'\u00e9toile veut dire \u00ab tout \u00bb\n\nvaleur = randint(1, 6)\n</code></pre> <p>Il est g\u00e9n\u00e9ralement recommand\u00e9 d'utiliser <code>import nom_de_la_biblioth\u00e8que</code> afin d'\u00e9viter d'\u00e9ventuels conflits. En effet, il peut arriver que deux biblioth\u00e8ques aient des fonctions portant le m\u00eame nom, ce qui pourrait causer des probl\u00e8mes.</p>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/#le-jeu-du-plus-ou-moins","title":"Le jeu du Plus ou Moins","text":""},{"location":"6%20%E2%80%93%20Programmation/6jeu/#description","title":"Description","text":"<ol> <li>Le programme d\u00e9termine un nombre myst\u00e8re al\u00e9atoire entre 1 et 100.</li> <li>Le joueur doit deviner ce nombre en proposant des valeurs.</li> <li>Apr\u00e8s chaque proposition, le programme indique si la valeur donn\u00e9e par le joueur est plus petite ou plus grande que le nombre \u00e0 deviner.</li> </ol> Exemple de jeu<pre><code>Bienvenue au jeu du Plus ou Moins !\nLe nombre myst\u00e8re entre 1 et 100 a \u00e9t\u00e9 tir\u00e9 !\n\nDevine le nombre ? 30\nC'est plus !\n\nDevine le nombre ? 70\nC'est moins !\n\nDevine le nombre ? 42\nF\u00e9licitations ! Tu as devin\u00e9 le nombre 42 !\n</code></pre> Code \u00e0 compl\u00e9ter<pre><code>print(\"Bienvenue au jeu du Plus ou Moins !\")\n\nnombre_myst\u00e8re = ...\nprint(\"Le nombre myst\u00e8re entre 1 et 100 a \u00e9t\u00e9 tir\u00e9 !\")\n\ncontinuer = True\nwhile continuer:\n    proposition = ...\n\n    if proposition &lt; ...:\n        print(...)\n    elif ...:\n        print(...)\n    else:\n        print(...)\n        continuer = False\n\nprint(\"Fin du jeu\")\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/#ameliorations","title":"Am\u00e9liorations","text":"<ul> <li> <p>Le joueur a un nombre limit\u00e9 d'essais pour deviner le nombre, par exemple 5. (1 point)</p> </li> <li> <p>Le programme propose une nouvelle partie au joueur (d\u00e9placer la boucle de jeu dans une fonction !). (1 point)</p> </li> <li> <p>Le programme affiche le nombre de coups du joueur. (1 point)</p> </li> <li> <p>Le programme conserve le meilleur score et le nom du joueur. (1 point)</p> </li> <li> <p>Le programme dispose de trois niveaux de difficult\u00e9 : (1 point)</p> <ul> <li> <p>Facile : 5 coups pour d\u00e9terminer un nombre entre 1 et 100.</p> </li> <li> <p>Interm\u00e9diaire : 9 coups pour d\u00e9terminer un nombre entre 1 et 1000.</p> </li> <li> <p>Difficile : 16 coups pour d\u00e9terminer un nombre entre 1 et 10000.</p> </li> </ul> </li> </ul>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/#le-jeu-des-allumettes","title":"Le jeu des allumettes","text":""},{"location":"6%20%E2%80%93%20Programmation/6jeu/#description_1","title":"Description","text":"<ol> <li>Le jeu commence avec un certain nombre d'allumettes, par exemple 21.</li> <li>Les joueurs humains jouent \u00e0 tour de r\u00f4le.</li> <li>\u00c0 chaque tour, un joueur peut prendre 1, 2 ou 3 allumettes.</li> <li>Le joueur qui prend la derni\u00e8re allumette perd la partie.</li> </ol> Exemple<pre><code>Tour du joueur 1\nIl reste 21 allumettes.\nCombien d'allumettes voulez-vous retirer (1 \u00e0 3) ? 3\n\nTour du joueur 2\nIl reste 18 allumettes.\nCombien d'allumettes voulez-vous retirer (1 \u00e0 3) ? 4\nChoix invalide. Veuillez choisir 1 \u00e0 3 allumettes.\nCombien d'allumettes voulez-vous retirer (1 \u00e0 3) ? 2\n\nTour du joueur 1\nIl reste 16 allumettes.\nCombien d'allumettes voulez-vous retirer (1 \u00e0 3) ?\n</code></pre> Code \u00e0 compl\u00e9ter<pre><code>def demander_allumettes(allumettes_restantes, joueur):\n    \"\"\" Demande \u00e0 l'utilisateur un nombre d'allumettes \u00e0 retirer,\n    jusqu'\u00e0 que ce que ce nombre soit valide. \"\"\"\n    while True:\n        choix = int(input(\"Combien d'allumettes voulez-vous prendre (1 \u00e0 3) ? \"))\n        if ...:\n            print(\"Choix invalide. Veuillez choisir 1 \u00e0 3 allumettes.\")\n        elif ...:\n            print(\"Choix invalide. Il n'y a pas assez d'allumettes \u00e0 retirer.\")\n        else:\n            return ...\n\n\ndef jeu_allumettes():\n    \"\"\" Joue au jeu des allumettes. \"\"\"\n    allumettes_restantes = 21\n    joueur = 1\n\n    # boucle de jeu\n    while ...:\n        print(...)\n        print(...)\n\n        choix = ...\n        allumettes_restantes = ...\n\n        # change le joueur courant\n        if ...:\n            joueur = ...\n        else:\n            joueur = ...\n\n    # fin du jeu, un des joueurs \u00e0 gagner\n    ...\n\n\njeu_allumettes()\n</code></pre>"},{"location":"6%20%E2%80%93%20Programmation/6jeu/#ameliorations_1","title":"Am\u00e9liorations","text":"<ul> <li>Afficher les allumettes restantes de mani\u00e8re plus \u00e9l\u00e9gante : (1 point)     <pre><code>Il reste 16 allumettes :\n    \u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\n</code></pre></li> <li>Le programme dispose d'un mode \u00ab Combat contre l'ordinateur \u00bb : l'ordinateur est b\u00eate et retire un nombre al\u00e9atoire d'allumettes. (2 points)</li> <li>Am\u00e9liorer cette intelligence artificielle pour que l'ordinateur donne le coup optimal si le nombre d'allumettes est inf\u00e9rieur ou \u00e9gal \u00e0 4. (2 points)</li> </ul>"},{"location":"7%20%E2%80%93%20Algorithmique/1tri/","title":"Algorithmes de tri","text":""},{"location":"7%20%E2%80%93%20Algorithmique/1tri/#algorithmes-de-tri","title":"Algorithmes de tri","text":"<p>Info</p> <ul> <li> <p>Correction de l'activit\u00e9 sur le tri des canettes</p> </li> <li> <p>Diaporama (temporaire)</p> </li> <li> <p>Lien Capytale sur les algorithmes de tri</p> </li> </ul>"},{"location":"7%20%E2%80%93%20Algorithmique/2dicho/","title":"La recherche dichotomique","text":""},{"location":"7%20%E2%80%93%20Algorithmique/2dicho/#la-recherche-dichotomique","title":"La recherche dichotomique","text":"<p>Info</p> <ul> <li>Lien Capytale sur la recherche dichotomique</li> </ul>"},{"location":"7%20%E2%80%93%20Algorithmique/3complex/","title":"La complexit\u00e9","text":""},{"location":"7%20%E2%80%93%20Algorithmique/3complex/#la-complexite","title":"La complexit\u00e9","text":"<p>Info</p> <ul> <li>Lien Capytale sur la recherche dichotomique</li> </ul>"},{"location":"7%20%E2%80%93%20Algorithmique/4glouton/","title":"Les algorithmes gloutons","text":""},{"location":"7%20%E2%80%93%20Algorithmique/4glouton/#les-algorithmes-gloutons","title":"Les algorithmes gloutons","text":"<p>Info</p> <ul> <li>Diaporama</li> <li>Cours</li> <li>Lien Capytale TP Impl\u00e9mentation d'algorithmes gloutons</li> </ul>"},{"location":"7%20%E2%80%93%20Algorithmique/5knn/","title":"L'algorithme KNN","text":""},{"location":"7%20%E2%80%93%20Algorithmique/5knn/#lalgorithme-knn","title":"L'algorithme KNN","text":"<p>Info</p> <ul> <li>Diaporama/Cours</li> <li>Lien TP Capytale</li> </ul>"}]}